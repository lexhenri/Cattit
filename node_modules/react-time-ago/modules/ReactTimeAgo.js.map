{"version":3,"sources":["../source/ReactTimeAgo.js"],"names":["React","PropTypes","JavascriptTimeAgo","style","createVerboseDateFormatter","getDate","getTime","isMockedDate","PureComponent","Component","MINUTE","HOUR","DAY","MONTH","YEAR","INTERVALS","interval","threshold","SET_TIMEOUT_MAX_DELAY","ReactTimeAgo","props","timeAgo","getPreferredLocales","window","verboseDateFormat","formatVerboseDate","tick","scheduleNextTick","clearTimeout","autoUpdateTimer","setTimeout","forceUpdate","getNextAutoUpdateDelay","date","timeStyle","updateInterval","time","now","Date","diff","Math","abs","_interval","min","_date","tooltip","container","locale","locales","rest","verboseDate","undefined","getVerboseDate","toISOString","format","createElement","concat","getDefaultLocale","input","convertToDate","propTypes","oneOfType","instanceOf","number","isRequired","string","arrayOf","bool","func","object","defaultProps","weekday","day","month","year","hour","minute","second","constructor","Error","default"],"mappings":"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","file":"ReactTimeAgo.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport JavascriptTimeAgo from 'javascript-time-ago'\r\nimport { style } from 'javascript-time-ago/prop-types'\r\n\r\nimport createVerboseDateFormatter from './verboseDateFormatter'\r\nimport { getDate, getTime, isMockedDate } from './helpers/date'\r\n\r\n// `PureComponent` is only available in React >= 15.3.0.\r\nconst PureComponent = React.PureComponent || React.Component\r\n\r\nconst MINUTE = 60 * 1000\r\nconst HOUR = 60 * MINUTE\r\nconst DAY = 24 * HOUR\r\nconst MONTH = 30 * DAY\r\nconst YEAR = 365 * DAY\r\n\r\n// For standard `timeStyle`s, \"smart\" autoupdate interval is used:\r\n// every minute for the first hour, then every 10 minutes for the first 12 hours, and so on.\r\n// \"Smart\" autoupdate intervals should be moved to `javascript-time-ago`'s grading scale.\r\nconst INTERVALS = [{\r\n\tinterval: MINUTE\r\n}, {\r\n\tthreshold: HOUR,\r\n\tinterval: 10 * MINUTE\r\n}, {\r\n\tthreshold: 12 * HOUR,\r\n\tinterval: 20 * MINUTE\r\n}, {\r\n\tthreshold: DAY,\r\n\tinterval: 3 * HOUR\r\n}, {\r\n\tthreshold: 7 * DAY,\r\n\tinterval: 6 * HOUR\r\n}, {\r\n\tthreshold: MONTH,\r\n\tinterval: 5 * DAY\r\n}, {\r\n\tthreshold: 3 * MONTH,\r\n\tinterval: 10 * DAY\r\n}, {\r\n\tthreshold: YEAR,\r\n\tinterval: MONTH\r\n}]\r\n\r\n// `setTimeout()` would enter an infinite cycle when interval is a `MONTH`.\r\n// https://stackoverflow.com/questions/3468607/why-does-settimeout-break-for-large-millisecond-delay-values\r\nconst SET_TIMEOUT_MAX_DELAY = 2147483647\r\n\r\nexport default class ReactTimeAgo extends PureComponent {\r\n\tconstructor(props) {\r\n\t\t// `this.props` are used in `.getPreferredLocales()`.\r\n\t\tsuper(props)\r\n\t\t// Create `javascript-time-ago` formatter instance.\r\n\t\tthis.timeAgo = new JavascriptTimeAgo(this.getPreferredLocales())\r\n\t\t// Create verbose date formatter for the tooltip text.\r\n\t\t// (only on client side, because tooltips aren't rendered until triggered)\r\n\t\tif (typeof window !== 'undefined') {\r\n\t\t\tconst { verboseDateFormat } = this.props\r\n\t\t\tthis.formatVerboseDate = createVerboseDateFormatter(this.getPreferredLocales(), verboseDateFormat)\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst { tick } = this.props\r\n\t\t// If time label autoupdates are enabled.\r\n\t\tif (tick) {\r\n\t\t\tthis.scheduleNextTick()\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tclearTimeout(this.autoUpdateTimer)\r\n\t}\r\n\r\n\tscheduleNextTick() {\r\n\t\t// Register for the relative time autoupdate as the time goes by.\r\n\t\tthis.autoUpdateTimer = setTimeout(() => {\r\n\t\t\tthis.forceUpdate()\r\n\t\t\tthis.scheduleNextTick()\r\n\t\t}, this.getNextAutoUpdateDelay())\r\n\t}\r\n\r\n\tgetNextAutoUpdateDelay() {\r\n\t\tconst { \r\n\t\t\tdate, \r\n\t\t\ttimeStyle, \r\n\t\t\tupdateInterval \r\n\t\t} = this.props\r\n\t\t// \"Smart\" autoupdate intervals are only used for standard time styles.\r\n\t\tif (typeof timeStyle === 'object') {\r\n\t\t\treturn updateInterval\r\n\t\t}\r\n\t\tconst time = getTime(date)\r\n\t\tconst now = Date.now()\r\n\t\tconst diff = Math.abs(now - time)\r\n\t\tlet _interval\r\n\t\tfor (const { interval, threshold } of INTERVALS) {\r\n\t\t\tif (threshold && diff < threshold) {\r\n\t\t\t\tcontinue\r\n\t\t\t}\r\n\t\t\t_interval = interval\r\n\t\t}\r\n\t\treturn Math.min(_interval, SET_TIMEOUT_MAX_DELAY)\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tdate: _date,\r\n\t\t\ttimeStyle,\r\n\t\t\ttooltip,\r\n\t\t\tcontainer,\r\n\t\t\t// Rest\r\n\t\t\tlocale,\r\n\t\t\tlocales,\r\n\t\t\tformatVerboseDate,\r\n\t\t\tverboseDateFormat,\r\n\t\t\tupdateInterval,\r\n\t\t\ttick,\r\n\t\t\t...rest\r\n\t\t} = this.props\r\n\r\n\t\t// The date or timestamp that was passed.\r\n\t\t// Convert timestamp to `Date`.\r\n\t\tconst date = getDate(_date)\r\n\r\n\t\t// Format verbose date for the tooltip.\r\n\t\t// (only on client side, because tooltips aren't rendered until triggered)\r\n\t\tconst verboseDate = typeof window === 'undefined' ? undefined : this.getVerboseDate(date)\r\n\r\n\t\tconst timeAgo = (\r\n\t\t\t<time\r\n\t\t\t\tdateTime={date.toISOString()}\r\n\t\t\t\ttitle={tooltip ? verboseDate : undefined} \r\n\t\t\t\t{...rest}>\r\n\t\t\t\t{this.timeAgo.format(date, timeStyle)}\r\n\t\t\t</time>\r\n\t\t)\r\n\r\n\t\tif (container) {\r\n\t\t\treturn React.createElement(\r\n\t\t\t\tcontainer,\r\n\t\t\t\t{\r\n\t\t\t\t\tverboseDate,\r\n\t\t\t\t\t...rest\r\n\t\t\t\t},\r\n\t\t\t\ttimeAgo\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\treturn timeAgo\r\n\t}\r\n\r\n\t// Composes a list of preferred locales\r\n\tgetPreferredLocales() {\r\n\t\tconst { locale } = this.props\r\n\t\tlet { locales } = this.props\r\n\t\t// Convert `locale` to `locales`.\r\n\t\tif (locale) {\r\n\t\t\tlocales = [locale]\r\n\t\t}\r\n\t\t// `javascript-time-ago` default locale.\r\n\t\treturn locales.concat(JavascriptTimeAgo.getDefaultLocale())\r\n\t}\r\n\r\n\t// Verbose date string.\r\n\t// Is used as a tooltip text.\r\n\t//\r\n\t// E.g. \"Sunday, May 18th, 2012, 18:45\"\r\n\t//\r\n\tgetVerboseDate(input) {\r\n\t\tconst { formatVerboseDate } = this.props\r\n\t\tif (formatVerboseDate) {\r\n\t\t\treturn formatVerboseDate(convertToDate(input))\r\n\t\t}\r\n\t\treturn this.formatVerboseDate(convertToDate(input))\r\n\t}\r\n}\r\n\r\nReactTimeAgo.propTypes = {\r\n\t// The `date` or `timestamp`.\r\n\t// E.g. `new Date()` or `1355972400000`.\r\n\tdate: PropTypes.oneOfType([\r\n\t\tPropTypes.instanceOf(Date),\r\n\t\tPropTypes.number\r\n\t]).isRequired,\r\n\r\n\t// Preferred locale.\r\n\t// Is 'en' by default.\r\n\t// E.g. 'ru-RU'.\r\n\tlocale: PropTypes.string,\r\n\r\n\t// Preferred locales (ordered).\r\n\t// Will choose the first suitable locale from this list.\r\n\t// (the one that has been initialized)\r\n\t// E.g. `['ru-RU', 'en-GB']`.\r\n\tlocales: PropTypes.arrayOf(PropTypes.string),\r\n\r\n\t// Date/time formatting style.\r\n\t// E.g. 'twitter', 'time', or custom (`{ gradation: […], units: […], flavour: 'long', custom: function }`)\r\n\ttimeStyle: style,\r\n\r\n\t// Whether HTML `tooltip` attribute should be set\r\n\t// to verbosely formatted date (is `true` by default).\r\n\t// Set to `false` to disable the native HTML `tooltip`.\r\n\ttooltip: PropTypes.bool.isRequired,\r\n\r\n\t// An optional function returning what will be output in the HTML `title` tooltip attribute.\r\n\t// (by default it's `(date) => new Intl.DateTimeFormat(locale, {…}).format(date)`)\r\n\tformatVerboseDate: PropTypes.func,\r\n\r\n\t// `Intl.DateTimeFormat` format for the HTML `title` tooltip attribute.\r\n\t// Is used when `formatVerboseDate` is not specified.\r\n\t// By default outputs a verbose date.\r\n\tverboseDateFormat: PropTypes.object,\r\n\r\n\t// How often to update all `<ReactTimeAgo/>` elements on a page.\r\n\t// (is once in a minute by default)\r\n\t// This setting is only used for \"custom\" `timeStyle`s.\r\n\t// For standard `timeStyle`s, \"smart\" autoupdate interval is used:\r\n\t// every minute for the first hour, then every 10 minutes for the first 12 hours, and so on.\r\n\tupdateInterval: PropTypes.number,\r\n\r\n\t// Set to `false` to disable automatic refresh of\r\n\t// `<ReactTimeAgo/>` elements on a page as time goes by.\r\n\t// (is `true` by default)\r\n\ttick: PropTypes.bool,\r\n\r\n\t// React Component to wrap the resulting `<time/>` React Element.\r\n\t// Receives `verboseDate` and `children` properties.\r\n\t// `verboseDate` can be used for displaying verbose date label\r\n\t// in an \"on mouse over\" (or \"on touch\") tooltip.\r\n\t//\r\n\t// ```js\r\n\t// import React from 'react'\r\n\t// import ReactTimeAgo from 'react-time-ago'\r\n\t// import { Tooltip } from 'react-responsive-ui'\r\n\t// \r\n\t// export default function TimeAgo(props) {\r\n\t//   return <ReactTimeAgo {...props} container={Container} tooltip={false}/>\r\n\t// }\r\n\t// \r\n\t// const Container = ({ verboseDate, children }) => (\r\n\t//   <Tooltip content={verboseDate}>\r\n\t//     {children}\r\n\t//   </Tooltip>\r\n\t// )\r\n\t// ```\r\n\t//\r\n\tcontainer: PropTypes.func\r\n}\r\n\r\nReactTimeAgo.defaultProps = {\r\n\t// No preferred locales.\r\n\tlocales: [],\r\n\r\n\t// Show verbose date `title` tooltip on mouse over.\r\n\ttooltip: true,\r\n\r\n\t// Thursday, December 20, 2012, 7:00:00 AM GMT+4\r\n\tverboseDateFormat: {\r\n\t\tweekday      : 'long',\r\n\t\tday          : 'numeric',\r\n\t\tmonth        : 'long',\r\n\t\tyear         : 'numeric',\r\n\t\thour         : 'numeric',\r\n\t\tminute       : '2-digit',\r\n\t\tsecond       : '2-digit',\r\n\t\t// timeZoneName : 'short'\r\n\t},\r\n\r\n\t// Updates once a minute\r\n\tupdateInterval: MINUTE,\r\n\r\n\t// Refreshes time in a web browser by default\r\n\ttick: true\r\n}\r\n\r\n// Converts argument into a `Date`.\r\nfunction convertToDate(input) {\r\n\tif (input.constructor === Date || isMockedDate(input)) {\r\n\t\treturn input\r\n\t}\r\n\tif (typeof input === 'number') {\r\n\t\treturn new Date(input)\r\n\t}\r\n\tthrow new Error(`Unsupported react-time-ago input: ${typeof input}, ${input}`)\r\n}\r\n\r\n// Deprecated CDN legacy export.\r\n// Will be removed in version 6.x\r\nReactTimeAgo.default = ReactTimeAgo\r\n\r\n// ReactTimeAgo.addLocale = (data) => JavascriptTimeAgo.addLocale(data)"]}