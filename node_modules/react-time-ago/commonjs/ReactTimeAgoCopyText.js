'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.default = ReactTimeAgoCopyText;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _ReactTimeAgo = require('./ReactTimeAgo');

var _ReactTimeAgo2 = _interopRequireDefault(_ReactTimeAgo);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function ReactTimeAgoCopyText(props) {
	return _react2.default.createElement(_ReactTimeAgo2.default, _extends({}, props, {
		container: ReactTimeAgoContainer }));
}

// Relative date is displayed but is not selectable because it 
// doesn't have any value due to being inherently transient.
var ReactTimeAgoContainer = function ReactTimeAgoContainer(_ref) {
	var verboseDate = _ref.verboseDate,
	    children = _ref.children,
	    rest = _objectWithoutProperties(_ref, ['verboseDate', 'children']);

	return _react2.default.createElement(
		'span',
		rest,
		_react2.default.createElement(
			'span',
			{ style: VERBOSE_DATE_STYLE },
			verboseDate
		),
		children
	);
};

ReactTimeAgoContainer.propTypes = {
	verboseDate: _propTypes2.default.string

	// Verbose date is not displayed but is selectable for copy-pasting.
};var VERBOSE_DATE_STYLE = {
	fontSize: 0

	// // https://stackoverflow.com/questions/826782/how-to-disable-text-selection-highlighting
	// const RELATIVE_DATE_STYLE = {
	// 	// For Chrome, Opera.
	// 	userSelect: 'none',
	// 	// For Konqueror.
	// 	'-khtml-user-select': 'none',
	// 	// For Safari.
	// 	'-webkit-user-select': 'none',
	// 	// For iOS Safari.
	// 	'-webkit-touch-callout': 'none',
	// 	// For Firefox.
	// 	'-moz-user-select': 'none',
	// 	// For IE 10 and 11, Edge.
	// 	'-ms-user-select': 'none'
	// }

};
//# sourceMappingURL=ReactTimeAgoCopyText.js.map