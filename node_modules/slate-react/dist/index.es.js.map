{"version":3,"file":"index.es.js","sources":["../src/components/string.tsx","../src/utils/weak-maps.ts","../src/components/leaf.tsx","../src/hooks/use-isomorphic-layout-effect.ts","../src/components/text.tsx","../src/hooks/use-selected.ts","../src/components/element.tsx","../src/hooks/use-editor.tsx","../src/components/children.tsx","../src/utils/environment.ts","../src/utils/hotkeys.ts","../src/hooks/use-read-only.ts","../src/hooks/use-slate.tsx","../src/utils/dom.ts","../src/components/editable.tsx","../src/utils/key.ts","../src/plugin/react-editor.ts","../src/hooks/use-focused.ts","../src/components/slate.tsx","../src/plugin/with-react.ts"],"sourcesContent":["import React from 'react'\nimport { Editor, Text, Path, Element, Node } from 'slate'\n\nimport { ReactEditor, useEditor } from '..'\n\n/**\n * Leaf content strings.\n */\n\nconst String = (props: {\n  isLast: boolean\n  leaf: Text\n  parent: Element\n  text: Text\n}) => {\n  const { isLast, leaf, parent, text } = props\n  const editor = useEditor()\n  const path = ReactEditor.findPath(editor, text)\n  const parentPath = Path.parent(path)\n\n  // COMPAT: Render text inside void nodes with a zero-width space.\n  // So the node can contain selection but the text is not visible.\n  if (editor.isVoid(parent)) {\n    return <ZeroWidthString length={Node.string(parent).length} />\n  }\n\n  // COMPAT: If this is the last text node in an empty block, render a zero-\n  // width space that will convert into a line break when copying and pasting\n  // to support expected plain text.\n  if (\n    leaf.text === '' &&\n    parent.children[parent.children.length - 1] === text &&\n    !editor.isInline(parent) &&\n    Editor.string(editor, parentPath) === ''\n  ) {\n    return <ZeroWidthString isLineBreak />\n  }\n\n  // COMPAT: If the text is empty, it's because it's on the edge of an inline\n  // node, so we render a zero-width space so that the selection can be\n  // inserted next to it still.\n  if (leaf.text === '') {\n    return <ZeroWidthString />\n  }\n\n  // COMPAT: Browsers will collapse trailing new lines at the end of blocks,\n  // so we need to add an extra trailing new lines to prevent that.\n  if (isLast && leaf.text.slice(-1) === '\\n') {\n    return <TextString isTrailing text={leaf.text} />\n  }\n\n  return <TextString text={leaf.text} />\n}\n\n/**\n * Leaf strings with text in them.\n */\n\nconst TextString = (props: { text: string; isTrailing?: boolean }) => {\n  const { text, isTrailing = false } = props\n  return (\n    <span data-slate-string>\n      {text}\n      {isTrailing ? '\\n' : null}\n    </span>\n  )\n}\n\n/**\n * Leaf strings without text, render as zero-width strings.\n */\n\nconst ZeroWidthString = (props: { length?: number; isLineBreak?: boolean }) => {\n  const { length = 0, isLineBreak = false } = props\n  return (\n    <span\n      data-slate-zero-width={isLineBreak ? 'n' : 'z'}\n      data-slate-length={length}\n    >\n      {'\\uFEFF'}\n      {isLineBreak ? <br /> : null}\n    </span>\n  )\n}\n\nexport default String\n","import { Node, Ancestor, Editor, Range } from 'slate'\n\nimport { Key } from './key'\n\n/**\n * Two weak maps that allow us rebuild a path given a node. They are populated\n * at render time such that after a render occurs we can always backtrack.\n */\n\nexport const NODE_TO_INDEX: WeakMap<Node, number> = new WeakMap()\nexport const NODE_TO_PARENT: WeakMap<Node, Ancestor> = new WeakMap()\n\n/**\n * Weak maps that allow us to go between Slate nodes and DOM nodes. These\n * are used to resolve DOM event-related logic into Slate actions.\n */\n\nexport const EDITOR_TO_ELEMENT: WeakMap<Editor, HTMLElement> = new WeakMap()\nexport const EDITOR_TO_PLACEHOLDER: WeakMap<Editor, string> = new WeakMap()\nexport const ELEMENT_TO_NODE: WeakMap<HTMLElement, Node> = new WeakMap()\nexport const KEY_TO_ELEMENT: WeakMap<Key, HTMLElement> = new WeakMap()\nexport const NODE_TO_ELEMENT: WeakMap<Node, HTMLElement> = new WeakMap()\nexport const NODE_TO_KEY: WeakMap<Node, Key> = new WeakMap()\n\n/**\n * Weak maps for storing editor-related state.\n */\n\nexport const IS_READ_ONLY: WeakMap<Editor, boolean> = new WeakMap()\nexport const IS_FOCUSED: WeakMap<Editor, boolean> = new WeakMap()\nexport const IS_DRAGGING: WeakMap<Editor, boolean> = new WeakMap()\nexport const IS_CLICKING: WeakMap<Editor, boolean> = new WeakMap()\n\n/**\n * Weak map for associating the context `onChange` context with the plugin.\n */\n\nexport const EDITOR_TO_ON_CHANGE = new WeakMap<Editor, () => void>()\n\n/**\n * Symbols.\n */\n\nexport const PLACEHOLDER_SYMBOL = (Symbol('placeholder') as unknown) as string\n","import React from 'react'\nimport { Text, Element } from 'slate'\n\nimport String from './string'\nimport { PLACEHOLDER_SYMBOL } from '../utils/weak-maps'\nimport { RenderLeafProps } from './editable'\n\n/**\n * Individual leaves in a text node with unique formatting.\n */\n\nconst Leaf = (props: {\n  isLast: boolean\n  leaf: Text\n  parent: Element\n  renderLeaf?: (props: RenderLeafProps) => JSX.Element\n  text: Text\n}) => {\n  const {\n    leaf,\n    isLast,\n    text,\n    parent,\n    renderLeaf = (props: RenderLeafProps) => <DefaultLeaf {...props} />,\n  } = props\n\n  let children = (\n    <String isLast={isLast} leaf={leaf} parent={parent} text={text} />\n  )\n\n  if (leaf[PLACEHOLDER_SYMBOL]) {\n    children = (\n      <React.Fragment>\n        <span\n          contentEditable={false}\n          style={{\n            pointerEvents: 'none',\n            display: 'inline-block',\n            verticalAlign: 'text-top',\n            width: '0',\n            maxWidth: '100%',\n            whiteSpace: 'nowrap',\n            opacity: '0.333',\n          }}\n        >\n          {leaf.placeholder}\n        </span>\n        {children}\n      </React.Fragment>\n    )\n  }\n\n  // COMPAT: Having the `data-` attributes on these leaf elements ensures that\n  // in certain misbehaving browsers they aren't weirdly cloned/destroyed by\n  // contenteditable behaviors. (2019/05/08)\n  const attributes: {\n    'data-slate-leaf': true\n  } = {\n    'data-slate-leaf': true,\n  }\n\n  return renderLeaf({ attributes, children, leaf, text })\n}\n\nconst MemoizedLeaf = React.memo(Leaf, (prev, next) => {\n  return (\n    next.parent === prev.parent &&\n    next.isLast === prev.isLast &&\n    next.renderLeaf === prev.renderLeaf &&\n    next.text === prev.text &&\n    Text.matches(next.leaf, prev.leaf)\n  )\n})\n\n/**\n * The default custom leaf renderer.\n */\n\nexport const DefaultLeaf = (props: RenderLeafProps) => {\n  const { attributes, children } = props\n  return <span {...attributes}>{children}</span>\n}\n\nexport default MemoizedLeaf\n","import { useLayoutEffect, useEffect } from 'react'\n\n/**\n * Prevent warning on SSR by falling back to useEffect when window is not defined\n */\nexport const useIsomorphicLayoutEffect =\n  typeof window !== 'undefined' ? useLayoutEffect : useEffect\n","import React, { useRef } from 'react'\nimport { Range, Element, Text as SlateText } from 'slate'\n\nimport Leaf from './leaf'\nimport { ReactEditor, useEditor } from '..'\nimport { RenderLeafProps } from './editable'\nimport { useIsomorphicLayoutEffect } from '../hooks/use-isomorphic-layout-effect'\nimport {\n  KEY_TO_ELEMENT,\n  NODE_TO_ELEMENT,\n  ELEMENT_TO_NODE,\n} from '../utils/weak-maps'\n\n/**\n * Text.\n */\n\nconst Text = (props: {\n  decorations: Range[]\n  isLast: boolean\n  parent: Element\n  renderLeaf?: (props: RenderLeafProps) => JSX.Element\n  text: SlateText\n}) => {\n  const { decorations, isLast, parent, renderLeaf, text } = props\n  const editor = useEditor()\n  const ref = useRef<HTMLSpanElement>(null)\n  const leaves = SlateText.decorations(text, decorations)\n  const key = ReactEditor.findKey(editor, text)\n  const children = []\n\n  for (let i = 0; i < leaves.length; i++) {\n    const leaf = leaves[i]\n\n    children.push(\n      <Leaf\n        isLast={isLast && i === leaves.length - 1}\n        key={`${key.id}-${i}`}\n        leaf={leaf}\n        text={text}\n        parent={parent}\n        renderLeaf={renderLeaf}\n      />\n    )\n  }\n\n  // Update element-related weak maps with the DOM element ref.\n  useIsomorphicLayoutEffect(() => {\n    if (ref.current) {\n      KEY_TO_ELEMENT.set(key, ref.current)\n      NODE_TO_ELEMENT.set(text, ref.current)\n      ELEMENT_TO_NODE.set(ref.current, text)\n    } else {\n      KEY_TO_ELEMENT.delete(key)\n      NODE_TO_ELEMENT.delete(text)\n    }\n  })\n\n  return (\n    <span data-slate-node=\"text\" ref={ref}>\n      {children}\n    </span>\n  )\n}\n\nconst MemoizedText = React.memo(Text, (prev, next) => {\n  return (\n    next.parent === prev.parent &&\n    next.isLast === prev.isLast &&\n    next.renderLeaf === prev.renderLeaf &&\n    next.text === prev.text\n  )\n})\n\nexport default MemoizedText\n","import { createContext, useContext } from 'react'\n\n/**\n * A React context for sharing the `selected` state of an element.\n */\n\nexport const SelectedContext = createContext(false)\n\n/**\n * Get the current `selected` state of an element.\n */\n\nexport const useSelected = (): boolean => {\n  return useContext(SelectedContext)\n}\n","import React, { useRef } from 'react'\nimport getDirection from 'direction'\nimport { Editor, Node, Range, NodeEntry, Element as SlateElement } from 'slate'\n\nimport Text from './text'\nimport Children from './children'\nimport { ReactEditor, useEditor, useReadOnly } from '..'\nimport { SelectedContext } from '../hooks/use-selected'\nimport { useIsomorphicLayoutEffect } from '../hooks/use-isomorphic-layout-effect'\nimport {\n  NODE_TO_ELEMENT,\n  ELEMENT_TO_NODE,\n  NODE_TO_PARENT,\n  NODE_TO_INDEX,\n  KEY_TO_ELEMENT,\n} from '../utils/weak-maps'\nimport { RenderElementProps, RenderLeafProps } from './editable'\n\n/**\n * Element.\n */\n\nconst Element = (props: {\n  decorate: (entry: NodeEntry) => Range[]\n  decorations: Range[]\n  element: SlateElement\n  renderElement?: (props: RenderElementProps) => JSX.Element\n  renderLeaf?: (props: RenderLeafProps) => JSX.Element\n  selection: Range | null\n}) => {\n  const {\n    decorate,\n    decorations,\n    element,\n    renderElement = (p: RenderElementProps) => <DefaultElement {...p} />,\n    renderLeaf,\n    selection,\n  } = props\n  const ref = useRef<HTMLElement>(null)\n  const editor = useEditor()\n  const readOnly = useReadOnly()\n  const isInline = editor.isInline(element)\n  const key = ReactEditor.findKey(editor, element)\n\n  let children: JSX.Element | null = (\n    <Children\n      decorate={decorate}\n      decorations={decorations}\n      node={element}\n      renderElement={renderElement}\n      renderLeaf={renderLeaf}\n      selection={selection}\n    />\n  )\n\n  // Attributes that the developer must mix into the element in their\n  // custom node renderer component.\n  const attributes: {\n    'data-slate-node': 'element'\n    'data-slate-void'?: true\n    'data-slate-inline'?: true\n    contentEditable?: false\n    dir?: 'rtl'\n    ref: any\n  } = {\n    'data-slate-node': 'element',\n    ref,\n  }\n\n  if (isInline) {\n    attributes['data-slate-inline'] = true\n  }\n\n  // If it's a block node with inline children, add the proper `dir` attribute\n  // for text direction.\n  if (!isInline && Editor.hasInlines(editor, element)) {\n    const text = Node.string(element)\n    const dir = getDirection(text)\n\n    if (dir === 'rtl') {\n      attributes.dir = dir\n    }\n  }\n\n  // If it's a void node, wrap the children in extra void-specific elements.\n  if (Editor.isVoid(editor, element)) {\n    attributes['data-slate-void'] = true\n\n    if (!readOnly && isInline) {\n      attributes.contentEditable = false\n    }\n\n    const Tag = isInline ? 'span' : 'div'\n    const [[text]] = Node.texts(element)\n\n    children = readOnly ? null : (\n      <Tag\n        data-slate-spacer\n        style={{\n          height: '0',\n          color: 'transparent',\n          outline: 'none',\n          position: 'absolute',\n        }}\n      >\n        <Text decorations={[]} isLast={false} parent={element} text={text} />\n      </Tag>\n    )\n\n    NODE_TO_INDEX.set(text, 0)\n    NODE_TO_PARENT.set(text, element)\n  }\n\n  // Update element-related weak maps with the DOM element ref.\n  useIsomorphicLayoutEffect(() => {\n    if (ref.current) {\n      KEY_TO_ELEMENT.set(key, ref.current)\n      NODE_TO_ELEMENT.set(element, ref.current)\n      ELEMENT_TO_NODE.set(ref.current, element)\n    } else {\n      KEY_TO_ELEMENT.delete(key)\n      NODE_TO_ELEMENT.delete(element)\n    }\n  })\n\n  return (\n    <SelectedContext.Provider value={!!selection}>\n      {renderElement({ attributes, children, element })}\n    </SelectedContext.Provider>\n  )\n}\n\nconst MemoizedElement = React.memo(Element, (prev, next) => {\n  return (\n    prev.decorate === next.decorate &&\n    prev.element === next.element &&\n    prev.renderElement === next.renderElement &&\n    prev.renderLeaf === next.renderLeaf &&\n    isRangeListEqual(prev.decorations, next.decorations) &&\n    (prev.selection === next.selection ||\n      (!!prev.selection &&\n        !!next.selection &&\n        Range.equals(prev.selection, next.selection)))\n  )\n})\n\n/**\n * The default element renderer.\n */\n\nexport const DefaultElement = (props: RenderElementProps) => {\n  const { attributes, children, element } = props\n  const editor = useEditor()\n  const Tag = editor.isInline(element) ? 'span' : 'div'\n  return (\n    <Tag {...attributes} style={{ position: 'relative' }}>\n      {children}\n    </Tag>\n  )\n}\n\n/**\n * Check if a list of ranges is equal to another.\n *\n * PERF: this requires the two lists to also have the ranges inside them in the\n * same order, but this is an okay constraint for us since decorations are\n * kept in order, and the odd case where they aren't is okay to re-render for.\n */\n\nconst isRangeListEqual = (list: Range[], another: Range[]): boolean => {\n  if (list.length !== another.length) {\n    return false\n  }\n\n  for (let i = 0; i < list.length; i++) {\n    const range = list[i]\n    const other = another[i]\n\n    if (!Range.equals(range, other)) {\n      return false\n    }\n  }\n\n  return true\n}\n\nexport default MemoizedElement\n","import { createContext, useContext } from 'react'\n\nimport { ReactEditor } from '../plugin/react-editor'\n\n/**\n * A React context for sharing the editor object.\n */\n\nexport const EditorContext = createContext<ReactEditor | null>(null)\n\n/**\n * Get the current editor object from the React context.\n */\n\nexport const useEditor = () => {\n  const editor = useContext(EditorContext)\n\n  if (!editor) {\n    throw new Error(\n      `The \\`useEditor\\` hook must be used inside the <Slate> component's context.`\n    )\n  }\n\n  return editor\n}\n","import React from 'react'\nimport { Editor, Range, Element, NodeEntry, Ancestor, Descendant } from 'slate'\n\nimport ElementComponent from './element'\nimport TextComponent from './text'\nimport { ReactEditor } from '..'\nimport { useEditor } from '../hooks/use-editor'\nimport { NODE_TO_INDEX, NODE_TO_PARENT } from '../utils/weak-maps'\nimport { RenderElementProps, RenderLeafProps } from './editable'\n\n/**\n * Children.\n */\n\nconst Children = (props: {\n  decorate: (entry: NodeEntry) => Range[]\n  decorations: Range[]\n  node: Ancestor\n  renderElement?: (props: RenderElementProps) => JSX.Element\n  renderLeaf?: (props: RenderLeafProps) => JSX.Element\n  selection: Range | null\n}) => {\n  const {\n    decorate,\n    decorations,\n    node,\n    renderElement,\n    renderLeaf,\n    selection,\n  } = props\n  const editor = useEditor()\n  const path = ReactEditor.findPath(editor, node)\n  const children = []\n  const isLeafBlock =\n    Element.isElement(node) &&\n    !editor.isInline(node) &&\n    Editor.hasInlines(editor, node)\n\n  for (let i = 0; i < node.children.length; i++) {\n    const p = path.concat(i)\n    const n = node.children[i] as Descendant\n    const key = ReactEditor.findKey(editor, n)\n    const range = Editor.range(editor, p)\n    const sel = selection && Range.intersection(range, selection)\n    const ds = decorate([n, p])\n\n    for (const dec of decorations) {\n      const d = Range.intersection(dec, range)\n\n      if (d) {\n        ds.push(d)\n      }\n    }\n\n    if (Element.isElement(n)) {\n      children.push(\n        <ElementComponent\n          decorate={decorate}\n          decorations={ds}\n          element={n}\n          key={key.id}\n          renderElement={renderElement}\n          renderLeaf={renderLeaf}\n          selection={sel}\n        />\n      )\n    } else {\n      children.push(\n        <TextComponent\n          decorations={ds}\n          key={key.id}\n          isLast={isLeafBlock && i === node.children.length - 1}\n          parent={node}\n          renderLeaf={renderLeaf}\n          text={n}\n        />\n      )\n    }\n\n    NODE_TO_INDEX.set(n, i)\n    NODE_TO_PARENT.set(n, node)\n  }\n\n  return <React.Fragment>{children}</React.Fragment>\n}\n\nexport default Children\n","export const IS_IOS =\n  typeof navigator !== 'undefined' &&\n  typeof window !== 'undefined' &&\n  /iPad|iPhone|iPod/.test(navigator.userAgent) &&\n  !window.MSStream\n\nexport const IS_APPLE =\n  typeof navigator !== 'undefined' && /Mac OS X/.test(navigator.userAgent)\n\nexport const IS_FIREFOX =\n  typeof navigator !== 'undefined' &&\n  /^(?!.*Seamonkey)(?=.*Firefox).*/i.test(navigator.userAgent)\n\nexport const IS_SAFARI =\n  typeof navigator !== 'undefined' &&\n  /Version\\/[\\d\\.]+.*Safari/.test(navigator.userAgent)\n","import { isKeyHotkey } from 'is-hotkey'\nimport { IS_APPLE } from './environment'\n\n/**\n * Hotkey mappings for each platform.\n */\n\nconst HOTKEYS = {\n  bold: 'mod+b',\n  compose: ['down', 'left', 'right', 'up', 'backspace', 'enter'],\n  moveBackward: 'left',\n  moveForward: 'right',\n  moveWordBackward: 'ctrl+left',\n  moveWordForward: 'ctrl+right',\n  deleteBackward: 'shift?+backspace',\n  deleteForward: 'shift?+delete',\n  extendBackward: 'shift+left',\n  extendForward: 'shift+right',\n  italic: 'mod+i',\n  splitBlock: 'shift?+enter',\n  undo: 'mod+z',\n}\n\nconst APPLE_HOTKEYS = {\n  moveLineBackward: 'opt+up',\n  moveLineForward: 'opt+down',\n  moveWordBackward: 'opt+left',\n  moveWordForward: 'opt+right',\n  deleteBackward: ['ctrl+backspace', 'ctrl+h'],\n  deleteForward: ['ctrl+delete', 'ctrl+d'],\n  deleteLineBackward: 'cmd+shift?+backspace',\n  deleteLineForward: ['cmd+shift?+delete', 'ctrl+k'],\n  deleteWordBackward: 'opt+shift?+backspace',\n  deleteWordForward: 'opt+shift?+delete',\n  extendLineBackward: 'opt+shift+up',\n  extendLineForward: 'opt+shift+down',\n  redo: 'cmd+shift+z',\n  transposeCharacter: 'ctrl+t',\n}\n\nconst WINDOWS_HOTKEYS = {\n  deleteWordBackward: 'ctrl+shift?+backspace',\n  deleteWordForward: 'ctrl+shift?+delete',\n  redo: ['ctrl+y', 'ctrl+shift+z'],\n}\n\n/**\n * Create a platform-aware hotkey checker.\n */\n\nconst create = (key: string) => {\n  const generic = HOTKEYS[key]\n  const apple = APPLE_HOTKEYS[key]\n  const windows = WINDOWS_HOTKEYS[key]\n  const isGeneric = generic && isKeyHotkey(generic)\n  const isApple = apple && isKeyHotkey(apple)\n  const isWindows = windows && isKeyHotkey(windows)\n\n  return (event: KeyboardEvent) => {\n    if (isGeneric && isGeneric(event)) return true\n    if (IS_APPLE && isApple && isApple(event)) return true\n    if (!IS_APPLE && isWindows && isWindows(event)) return true\n    return false\n  }\n}\n\n/**\n * Hotkeys.\n */\n\nexport default {\n  isBold: create('bold'),\n  isCompose: create('compose'),\n  isMoveBackward: create('moveBackward'),\n  isMoveForward: create('moveForward'),\n  isDeleteBackward: create('deleteBackward'),\n  isDeleteForward: create('deleteForward'),\n  isDeleteLineBackward: create('deleteLineBackward'),\n  isDeleteLineForward: create('deleteLineForward'),\n  isDeleteWordBackward: create('deleteWordBackward'),\n  isDeleteWordForward: create('deleteWordForward'),\n  isExtendBackward: create('extendBackward'),\n  isExtendForward: create('extendForward'),\n  isExtendLineBackward: create('extendLineBackward'),\n  isExtendLineForward: create('extendLineForward'),\n  isItalic: create('italic'),\n  isMoveLineBackward: create('moveLineBackward'),\n  isMoveLineForward: create('moveLineForward'),\n  isMoveWordBackward: create('moveWordBackward'),\n  isMoveWordForward: create('moveWordForward'),\n  isRedo: create('redo'),\n  isSplitBlock: create('splitBlock'),\n  isTransposeCharacter: create('transposeCharacter'),\n  isUndo: create('undo'),\n}\n","import { createContext, useContext } from 'react'\n\n/**\n * A React context for sharing the `readOnly` state of the editor.\n */\n\nexport const ReadOnlyContext = createContext(false)\n\n/**\n * Get the current `readOnly` state of the editor.\n */\n\nexport const useReadOnly = (): boolean => {\n  return useContext(ReadOnlyContext)\n}\n","import { createContext, useContext } from 'react'\n\nimport { ReactEditor } from '../plugin/react-editor'\n\n/**\n * A React context for sharing the editor object, in a way that re-renders the\n * context whenever changes occur.\n */\n\nexport const SlateContext = createContext<[ReactEditor] | null>(null)\n\n/**\n * Get the current editor object from the React context.\n */\n\nexport const useSlate = () => {\n  const context = useContext(SlateContext)\n\n  if (!context) {\n    throw new Error(\n      `The \\`useSlate\\` hook must be used inside the <SlateProvider> component's context.`\n    )\n  }\n\n  const [editor] = context\n  return editor\n}\n","/**\n * Types.\n */\n\n// COMPAT: This is required to prevent TypeScript aliases from doing some very\n// weird things for Slate's types with the same name as globals. (2019/11/27)\n// https://github.com/microsoft/TypeScript/issues/35002\nimport DOMNode = globalThis.Node\nimport DOMComment = globalThis.Comment\nimport DOMElement = globalThis.Element\nimport DOMText = globalThis.Text\nimport DOMRange = globalThis.Range\nimport DOMSelection = globalThis.Selection\nimport DOMStaticRange = globalThis.StaticRange\nexport {\n  DOMNode,\n  DOMComment,\n  DOMElement,\n  DOMText,\n  DOMRange,\n  DOMSelection,\n  DOMStaticRange,\n}\n\nexport type DOMPoint = [Node, number]\n\n/**\n * Check if a DOM node is a comment node.\n */\n\nexport const isDOMComment = (value: any): value is DOMComment => {\n  return isDOMNode(value) && value.nodeType === 8\n}\n\n/**\n * Check if a DOM node is an element node.\n */\n\nexport const isDOMElement = (value: any): value is DOMElement => {\n  return isDOMNode(value) && value.nodeType === 1\n}\n\n/**\n * Check if a value is a DOM node.\n */\n\nexport const isDOMNode = (value: any): value is DOMNode => {\n  return value instanceof Node\n}\n\n/**\n * Check if a DOM node is an element node.\n */\n\nexport const isDOMText = (value: any): value is DOMText => {\n  return isDOMNode(value) && value.nodeType === 3\n}\n\n/**\n * Normalize a DOM point so that it always refers to a text node.\n */\n\nexport const normalizeDOMPoint = (domPoint: DOMPoint): DOMPoint => {\n  let [node, offset] = domPoint\n\n  // If it's an element node, its offset refers to the index of its children\n  // including comment nodes, so try to find the right text child node.\n  if (isDOMElement(node) && node.childNodes.length) {\n    const isLast = offset === node.childNodes.length\n    const direction = isLast ? 'backward' : 'forward'\n    const index = isLast ? offset - 1 : offset\n    node = getEditableChild(node, index, direction)\n\n    // If the node has children, traverse until we have a leaf node. Leaf nodes\n    // can be either text nodes, or other void DOM nodes.\n    while (isDOMElement(node) && node.childNodes.length) {\n      const i = isLast ? node.childNodes.length - 1 : 0\n      node = getEditableChild(node, i, direction)\n    }\n\n    // Determine the new offset inside the text node.\n    offset = isLast && node.textContent != null ? node.textContent.length : 0\n  }\n\n  // Return the node and offset.\n  return [node, offset]\n}\n\n/**\n * Get the nearest editable child at `index` in a `parent`, preferring\n * `direction`.\n */\n\nexport const getEditableChild = (\n  parent: DOMElement,\n  index: number,\n  direction: 'forward' | 'backward'\n): DOMNode => {\n  const { childNodes } = parent\n  let child = childNodes[index]\n  let i = index\n  let triedForward = false\n  let triedBackward = false\n\n  // While the child is a comment node, or an element node with no children,\n  // keep iterating to find a sibling non-void, non-comment node.\n  while (\n    isDOMComment(child) ||\n    (isDOMElement(child) && child.childNodes.length === 0) ||\n    (isDOMElement(child) && child.getAttribute('contenteditable') === 'false')\n  ) {\n    if (triedForward && triedBackward) {\n      break\n    }\n\n    if (i >= childNodes.length) {\n      triedForward = true\n      i = index - 1\n      direction = 'backward'\n      continue\n    }\n\n    if (i < 0) {\n      triedBackward = true\n      i = index + 1\n      direction = 'forward'\n      continue\n    }\n\n    child = childNodes[i]\n    i += direction === 'forward' ? 1 : -1\n  }\n\n  return child\n}\n","import React, { useEffect, useRef, useMemo, useCallback } from 'react'\nimport {\n  Editor,\n  Element,\n  NodeEntry,\n  Node,\n  Range,\n  Text,\n  Transforms,\n} from 'slate'\nimport debounce from 'debounce'\nimport scrollIntoView from 'scroll-into-view-if-needed'\n\nimport Children from './children'\nimport Hotkeys from '../utils/hotkeys'\nimport { IS_FIREFOX, IS_SAFARI } from '../utils/environment'\nimport { ReactEditor } from '..'\nimport { ReadOnlyContext } from '../hooks/use-read-only'\nimport { useSlate } from '../hooks/use-slate'\nimport { useIsomorphicLayoutEffect } from '../hooks/use-isomorphic-layout-effect'\nimport {\n  DOMElement,\n  DOMNode,\n  DOMRange,\n  isDOMElement,\n  isDOMNode,\n  isDOMText,\n  DOMStaticRange,\n} from '../utils/dom'\nimport {\n  EDITOR_TO_ELEMENT,\n  ELEMENT_TO_NODE,\n  IS_READ_ONLY,\n  NODE_TO_ELEMENT,\n  IS_FOCUSED,\n  PLACEHOLDER_SYMBOL,\n} from '../utils/weak-maps'\n\n/**\n * `RenderElementProps` are passed to the `renderElement` handler.\n */\n\nexport interface RenderElementProps {\n  children: any\n  element: Element\n  attributes: {\n    'data-slate-node': 'element'\n    'data-slate-inline'?: true\n    'data-slate-void'?: true\n    dir?: 'rtl'\n    ref: any\n  }\n}\n\n/**\n * `RenderLeafProps` are passed to the `renderLeaf` handler.\n */\n\nexport interface RenderLeafProps {\n  children: any\n  leaf: Text\n  text: Text\n  attributes: {\n    'data-slate-leaf': true\n  }\n}\n\n/**\n * `EditableProps` are passed to the `<Editable>` component.\n */\n\nexport type EditableProps = {\n  decorate?: (entry: NodeEntry) => Range[]\n  onDOMBeforeInput?: (event: Event) => void\n  placeholder?: string\n  readOnly?: boolean\n  role?: string\n  style?: React.CSSProperties\n  renderElement?: (props: RenderElementProps) => JSX.Element\n  renderLeaf?: (props: RenderLeafProps) => JSX.Element\n  as?: React.ElementType\n} & React.TextareaHTMLAttributes<HTMLDivElement>\n\n/**\n * Editable.\n */\n\nexport const Editable = (props: EditableProps) => {\n  const {\n    autoFocus,\n    decorate = defaultDecorate,\n    onDOMBeforeInput: propsOnDOMBeforeInput,\n    placeholder,\n    readOnly = false,\n    renderElement,\n    renderLeaf,\n    style = {},\n    as: Component = 'div',\n    ...attributes\n  } = props\n  const editor = useSlate()\n  const ref = useRef<HTMLDivElement>(null)\n\n  // Update internal state on each render.\n  IS_READ_ONLY.set(editor, readOnly)\n\n  // Keep track of some state for the event handler logic.\n  const state = useMemo(\n    () => ({\n      isComposing: false,\n      isUpdatingSelection: false,\n      latestElement: null as DOMElement | null,\n    }),\n    []\n  )\n\n  // Update element-related weak maps with the DOM element ref.\n  useIsomorphicLayoutEffect(() => {\n    if (ref.current) {\n      EDITOR_TO_ELEMENT.set(editor, ref.current)\n      NODE_TO_ELEMENT.set(editor, ref.current)\n      ELEMENT_TO_NODE.set(ref.current, editor)\n    } else {\n      NODE_TO_ELEMENT.delete(editor)\n    }\n  })\n\n  // Attach a native DOM event handler for `selectionchange`, because React's\n  // built-in `onSelect` handler doesn't fire for all selection changes. It's a\n  // leaky polyfill that only fires on keypresses or clicks. Instead, we want to\n  // fire for any change to the selection inside the editor. (2019/11/04)\n  // https://github.com/facebook/react/issues/5785\n  useIsomorphicLayoutEffect(() => {\n    window.document.addEventListener('selectionchange', onDOMSelectionChange)\n\n    return () => {\n      window.document.removeEventListener(\n        'selectionchange',\n        onDOMSelectionChange\n      )\n    }\n  }, [])\n\n  // Attach a native DOM event handler for `beforeinput` events, because React's\n  // built-in `onBeforeInput` is actually a leaky polyfill that doesn't expose\n  // real `beforeinput` events sadly... (2019/11/04)\n  // https://github.com/facebook/react/issues/11211\n  useIsomorphicLayoutEffect(() => {\n    if (ref.current) {\n      // @ts-ignore The `beforeinput` event isn't recognized.\n      ref.current.addEventListener('beforeinput', onDOMBeforeInput)\n    }\n\n    return () => {\n      if (ref.current) {\n        // @ts-ignore The `beforeinput` event isn't recognized.\n        ref.current.removeEventListener('beforeinput', onDOMBeforeInput)\n      }\n    }\n  }, [])\n\n  // Whenever the editor updates, make sure the DOM selection state is in sync.\n  useIsomorphicLayoutEffect(() => {\n    const { selection } = editor\n    const domSelection = window.getSelection()\n\n    if (state.isComposing || !domSelection || !ReactEditor.isFocused(editor)) {\n      return\n    }\n\n    const hasDomSelection = domSelection.type !== 'None'\n\n    // If the DOM selection is properly unset, we're done.\n    if (!selection && !hasDomSelection) {\n      return\n    }\n\n    const newDomRange = selection && ReactEditor.toDOMRange(editor, selection)\n\n    // If the DOM selection is already correct, we're done.\n    if (\n      hasDomSelection &&\n      newDomRange &&\n      isRangeEqual(domSelection.getRangeAt(0), newDomRange)\n    ) {\n      return\n    }\n\n    // Otherwise the DOM selection is out of sync, so update it.\n    const el = ReactEditor.toDOMNode(editor, editor)\n    state.isUpdatingSelection = true\n    domSelection.removeAllRanges()\n\n    if (newDomRange) {\n      domSelection.addRange(newDomRange!)\n      const leafEl = newDomRange.startContainer.parentElement!\n      scrollIntoView(leafEl, { scrollMode: 'if-needed' })\n    }\n\n    setTimeout(() => {\n      // COMPAT: In Firefox, it's not enough to create a range, you also need\n      // to focus the contenteditable element too. (2016/11/16)\n      if (newDomRange && IS_FIREFOX) {\n        el.focus()\n      }\n\n      state.isUpdatingSelection = false\n    })\n  })\n\n  // The autoFocus TextareaHTMLAttribute doesn't do anything on a div, so it\n  // needs to be manually focused.\n  useEffect(() => {\n    if (ref.current && autoFocus) {\n      ref.current.focus()\n    }\n  }, [autoFocus])\n\n  // Listen on the native `beforeinput` event to get real \"Level 2\" events. This\n  // is required because React's `beforeinput` is fake and never really attaches\n  // to the real event sadly. (2019/11/01)\n  // https://github.com/facebook/react/issues/11211\n  const onDOMBeforeInput = useCallback(\n    (\n      event: Event & {\n        data: string | null\n        dataTransfer: DataTransfer | null\n        getTargetRanges(): DOMStaticRange[]\n        inputType: string\n        isComposing: boolean\n      }\n    ) => {\n      if (\n        !readOnly &&\n        hasEditableTarget(editor, event.target) &&\n        !isDOMEventHandled(event, propsOnDOMBeforeInput)\n      ) {\n        const { selection } = editor\n        const { inputType: type } = event\n        const data = event.dataTransfer || event.data || undefined\n\n        // These two types occur while a user is composing text and can't be\n        // cancelled. Let them through and wait for the composition to end.\n        if (\n          type === 'insertCompositionText' ||\n          type === 'deleteCompositionText'\n        ) {\n          return\n        }\n\n        event.preventDefault()\n\n        // COMPAT: For the deleting forward/backward input types we don't want\n        // to change the selection because it is the range that will be deleted,\n        // and those commands determine that for themselves.\n        if (!type.startsWith('delete') || type.startsWith('deleteBy')) {\n          const [targetRange] = event.getTargetRanges()\n\n          if (targetRange) {\n            const range = ReactEditor.toSlateRange(editor, targetRange)\n\n            if (!selection || !Range.equals(selection, range)) {\n              Transforms.select(editor, range)\n            }\n          }\n        }\n\n        // COMPAT: If the selection is expanded, even if the command seems like\n        // a delete forward/backward command it should delete the selection.\n        if (\n          selection &&\n          Range.isExpanded(selection) &&\n          type.startsWith('delete')\n        ) {\n          Editor.deleteFragment(editor)\n          return\n        }\n\n        switch (type) {\n          case 'deleteByComposition':\n          case 'deleteByCut':\n          case 'deleteByDrag': {\n            Editor.deleteFragment(editor)\n            break\n          }\n\n          case 'deleteContent':\n          case 'deleteContentForward': {\n            Editor.deleteForward(editor)\n            break\n          }\n\n          case 'deleteContentBackward': {\n            Editor.deleteBackward(editor)\n            break\n          }\n\n          case 'deleteEntireSoftLine': {\n            Editor.deleteBackward(editor, { unit: 'line' })\n            Editor.deleteForward(editor, { unit: 'line' })\n            break\n          }\n\n          case 'deleteHardLineBackward': {\n            Editor.deleteBackward(editor, { unit: 'block' })\n            break\n          }\n\n          case 'deleteSoftLineBackward': {\n            Editor.deleteBackward(editor, { unit: 'line' })\n            break\n          }\n\n          case 'deleteHardLineForward': {\n            Editor.deleteForward(editor, { unit: 'block' })\n            break\n          }\n\n          case 'deleteSoftLineForward': {\n            Editor.deleteForward(editor, { unit: 'line' })\n            break\n          }\n\n          case 'deleteWordBackward': {\n            Editor.deleteBackward(editor, { unit: 'word' })\n            break\n          }\n\n          case 'deleteWordForward': {\n            Editor.deleteForward(editor, { unit: 'word' })\n            break\n          }\n\n          case 'insertLineBreak':\n          case 'insertParagraph': {\n            Editor.insertBreak(editor)\n            break\n          }\n\n          case 'insertFromComposition':\n          case 'insertFromDrop':\n          case 'insertFromPaste':\n          case 'insertFromYank':\n          case 'insertReplacementText':\n          case 'insertText': {\n            if (data instanceof DataTransfer) {\n              ReactEditor.insertData(editor, data)\n            } else if (typeof data === 'string') {\n              Editor.insertText(editor, data)\n            }\n\n            break\n          }\n        }\n      }\n    },\n    []\n  )\n\n  // Listen on the native `selectionchange` event to be able to update any time\n  // the selection changes. This is required because React's `onSelect` is leaky\n  // and non-standard so it doesn't fire until after a selection has been\n  // released. This causes issues in situations where another change happens\n  // while a selection is being dragged.\n  const onDOMSelectionChange = useCallback(\n    debounce(() => {\n      if (!readOnly && !state.isComposing && !state.isUpdatingSelection) {\n        const { activeElement } = window.document\n        const el = ReactEditor.toDOMNode(editor, editor)\n        const domSelection = window.getSelection()\n        const domRange =\n          domSelection &&\n          domSelection.rangeCount > 0 &&\n          domSelection.getRangeAt(0)\n\n        if (activeElement === el) {\n          state.latestElement = activeElement\n          IS_FOCUSED.set(editor, true)\n        } else {\n          IS_FOCUSED.delete(editor)\n        }\n\n        if (\n          domRange &&\n          hasEditableTarget(editor, domRange.startContainer) &&\n          hasEditableTarget(editor, domRange.endContainer)\n        ) {\n          const range = ReactEditor.toSlateRange(editor, domRange)\n          Transforms.select(editor, range)\n        } else {\n          Transforms.deselect(editor)\n        }\n      }\n    }, 100),\n    []\n  )\n\n  const decorations = decorate([editor, []])\n\n  if (\n    placeholder &&\n    editor.children.length === 1 &&\n    Array.from(Node.texts(editor)).length === 1 &&\n    Node.string(editor) === ''\n  ) {\n    const start = Editor.start(editor, [])\n    decorations.push({\n      [PLACEHOLDER_SYMBOL]: true,\n      placeholder,\n      anchor: start,\n      focus: start,\n    })\n  }\n\n  return (\n    <ReadOnlyContext.Provider value={readOnly}>\n      <Component\n        // COMPAT: The Grammarly Chrome extension works by changing the DOM\n        // out from under `contenteditable` elements, which leads to weird\n        // behaviors so we have to disable it like editor. (2017/04/24)\n        data-gramm={false}\n        role={readOnly ? undefined : 'textbox'}\n        {...attributes}\n        // COMPAT: Firefox doesn't support the `beforeinput` event, so we'd\n        // have to use hacks to make these replacement-based features work.\n        spellCheck={IS_FIREFOX ? undefined : attributes.spellCheck}\n        autoCorrect={IS_FIREFOX ? undefined : attributes.autoCorrect}\n        autoCapitalize={IS_FIREFOX ? undefined : attributes.autoCapitalize}\n        data-slate-editor\n        data-slate-node=\"value\"\n        contentEditable={readOnly ? undefined : true}\n        suppressContentEditableWarning\n        ref={ref}\n        style={{\n          // Prevent the default outline styles.\n          outline: 'none',\n          // Preserve adjacent whitespace and new lines.\n          whiteSpace: 'pre-wrap',\n          // Allow words to break if they are too long.\n          wordWrap: 'break-word',\n          // Allow for passed-in styles to override anything.\n          ...style,\n        }}\n        onBeforeInput={useCallback(\n          (event: React.SyntheticEvent) => {\n            // COMPAT: Firefox doesn't support the `beforeinput` event, so we\n            // fall back to React's leaky polyfill instead just for it. It\n            // only works for the `insertText` input type.\n            if (IS_FIREFOX && !readOnly) {\n              event.preventDefault()\n              const text = (event as any).data as string\n              Editor.insertText(editor, text)\n            }\n          },\n          [readOnly]\n        )}\n        onBlur={useCallback(\n          (event: React.FocusEvent<HTMLDivElement>) => {\n            if (\n              readOnly ||\n              state.isUpdatingSelection ||\n              !hasEditableTarget(editor, event.target) ||\n              isEventHandled(event, attributes.onBlur)\n            ) {\n              return\n            }\n\n            // COMPAT: If the current `activeElement` is still the previous\n            // one, this is due to the window being blurred when the tab\n            // itself becomes unfocused, so we want to abort early to allow to\n            // editor to stay focused when the tab becomes focused again.\n            if (state.latestElement === window.document.activeElement) {\n              return\n            }\n\n            const { relatedTarget } = event\n            const el = ReactEditor.toDOMNode(editor, editor)\n\n            // COMPAT: The event should be ignored if the focus is returning\n            // to the editor from an embedded editable element (eg. an <input>\n            // element inside a void node).\n            if (relatedTarget === el) {\n              return\n            }\n\n            // COMPAT: The event should be ignored if the focus is moving from\n            // the editor to inside a void node's spacer element.\n            if (\n              isDOMElement(relatedTarget) &&\n              relatedTarget.hasAttribute('data-slate-spacer')\n            ) {\n              return\n            }\n\n            // COMPAT: The event should be ignored if the focus is moving to a\n            // non- editable section of an element that isn't a void node (eg.\n            // a list item of the check list example).\n            if (\n              relatedTarget != null &&\n              isDOMNode(relatedTarget) &&\n              ReactEditor.hasDOMNode(editor, relatedTarget)\n            ) {\n              const node = ReactEditor.toSlateNode(editor, relatedTarget)\n\n              if (Element.isElement(node) && !editor.isVoid(node)) {\n                return\n              }\n            }\n\n            IS_FOCUSED.delete(editor)\n          },\n          [readOnly, attributes.onBlur]\n        )}\n        onClick={useCallback(\n          (event: React.MouseEvent<HTMLDivElement>) => {\n            if (\n              !readOnly &&\n              hasTarget(editor, event.target) &&\n              !isEventHandled(event, attributes.onClick) &&\n              isDOMNode(event.target)\n            ) {\n              const node = ReactEditor.toSlateNode(editor, event.target)\n              const path = ReactEditor.findPath(editor, node)\n              const start = Editor.start(editor, path)\n\n              if (Editor.void(editor, { at: start })) {\n                const range = Editor.range(editor, start)\n                Transforms.select(editor, range)\n              }\n            }\n          },\n          [readOnly, attributes.onClick]\n        )}\n        onCompositionEnd={useCallback(\n          (event: React.CompositionEvent<HTMLDivElement>) => {\n            if (\n              hasEditableTarget(editor, event.target) &&\n              !isEventHandled(event, attributes.onCompositionEnd)\n            ) {\n              state.isComposing = false\n\n              // COMPAT: In Chrome, `beforeinput` events for compositions\n              // aren't correct and never fire the \"insertFromComposition\"\n              // type that we need. So instead, insert whenever a composition\n              // ends since it will already have been committed to the DOM.\n              if (!IS_SAFARI && !IS_FIREFOX && event.data) {\n                Editor.insertText(editor, event.data)\n              }\n            }\n          },\n          [attributes.onCompositionEnd]\n        )}\n        onCompositionStart={useCallback(\n          (event: React.CompositionEvent<HTMLDivElement>) => {\n            if (\n              hasEditableTarget(editor, event.target) &&\n              !isEventHandled(event, attributes.onCompositionStart)\n            ) {\n              state.isComposing = true\n            }\n          },\n          [attributes.onCompositionStart]\n        )}\n        onCopy={useCallback(\n          (event: React.ClipboardEvent<HTMLDivElement>) => {\n            if (\n              hasEditableTarget(editor, event.target) &&\n              !isEventHandled(event, attributes.onCopy)\n            ) {\n              event.preventDefault()\n              setFragmentData(event.clipboardData, editor)\n            }\n          },\n          [attributes.onCopy]\n        )}\n        onCut={useCallback(\n          (event: React.ClipboardEvent<HTMLDivElement>) => {\n            if (\n              !readOnly &&\n              hasEditableTarget(editor, event.target) &&\n              !isEventHandled(event, attributes.onCut)\n            ) {\n              event.preventDefault()\n              setFragmentData(event.clipboardData, editor)\n              const { selection } = editor\n\n              if (selection && Range.isExpanded(selection)) {\n                Editor.deleteFragment(editor)\n              }\n            }\n          },\n          [readOnly, attributes.onCut]\n        )}\n        onDragOver={useCallback(\n          (event: React.DragEvent<HTMLDivElement>) => {\n            if (\n              hasTarget(editor, event.target) &&\n              !isEventHandled(event, attributes.onDragOver)\n            ) {\n              // Only when the target is void, call `preventDefault` to signal\n              // that drops are allowed. Editable content is droppable by\n              // default, and calling `preventDefault` hides the cursor.\n              const node = ReactEditor.toSlateNode(editor, event.target)\n\n              if (Editor.isVoid(editor, node)) {\n                event.preventDefault()\n              }\n            }\n          },\n          [attributes.onDragOver]\n        )}\n        onDragStart={useCallback(\n          (event: React.DragEvent<HTMLDivElement>) => {\n            if (\n              hasTarget(editor, event.target) &&\n              !isEventHandled(event, attributes.onDragStart)\n            ) {\n              const node = ReactEditor.toSlateNode(editor, event.target)\n              const path = ReactEditor.findPath(editor, node)\n              const voidMatch = Editor.void(editor, { at: path })\n\n              // If starting a drag on a void node, make sure it is selected\n              // so that it shows up in the selection's fragment.\n              if (voidMatch) {\n                const range = Editor.range(editor, path)\n                Transforms.select(editor, range)\n              }\n\n              setFragmentData(event.dataTransfer, editor)\n            }\n          },\n          [attributes.onDragStart]\n        )}\n        onDrop={useCallback(\n          (event: React.DragEvent<HTMLDivElement>) => {\n            if (\n              hasTarget(editor, event.target) &&\n              !readOnly &&\n              !isEventHandled(event, attributes.onDrop)\n            ) {\n              // COMPAT: Firefox doesn't fire `beforeinput` events at all, and\n              // Chromium browsers don't properly fire them for files being\n              // dropped into a `contenteditable`. (2019/11/26)\n              // https://bugs.chromium.org/p/chromium/issues/detail?id=1028668\n              if (\n                IS_FIREFOX ||\n                (!IS_SAFARI && event.dataTransfer.files.length > 0)\n              ) {\n                event.preventDefault()\n                const range = ReactEditor.findEventRange(editor, event)\n                const data = event.dataTransfer\n                Transforms.select(editor, range)\n                ReactEditor.insertData(editor, data)\n              }\n            }\n          },\n          [readOnly, attributes.onDrop]\n        )}\n        onFocus={useCallback(\n          (event: React.FocusEvent<HTMLDivElement>) => {\n            if (\n              !readOnly &&\n              !state.isUpdatingSelection &&\n              hasEditableTarget(editor, event.target) &&\n              !isEventHandled(event, attributes.onFocus)\n            ) {\n              const el = ReactEditor.toDOMNode(editor, editor)\n              state.latestElement = window.document.activeElement\n\n              // COMPAT: If the editor has nested editable elements, the focus\n              // can go to them. In Firefox, this must be prevented because it\n              // results in issues with keyboard navigation. (2017/03/30)\n              if (IS_FIREFOX && event.target !== el) {\n                el.focus()\n                return\n              }\n\n              IS_FOCUSED.set(editor, true)\n            }\n          },\n          [readOnly, attributes.onFocus]\n        )}\n        onKeyDown={useCallback(\n          (event: React.KeyboardEvent<HTMLDivElement>) => {\n            if (\n              !readOnly &&\n              hasEditableTarget(editor, event.target) &&\n              !isEventHandled(event, attributes.onKeyDown)\n            ) {\n              const { nativeEvent } = event\n              const { selection } = editor\n\n              // COMPAT: Since we prevent the default behavior on\n              // `beforeinput` events, the browser doesn't think there's ever\n              // any history stack to undo or redo, so we have to manage these\n              // hotkeys ourselves. (2019/11/06)\n              if (Hotkeys.isRedo(nativeEvent)) {\n                event.preventDefault()\n\n                if (editor.redo) {\n                  editor.redo()\n                }\n\n                return\n              }\n\n              if (Hotkeys.isUndo(nativeEvent)) {\n                event.preventDefault()\n\n                if (editor.undo) {\n                  editor.undo()\n                }\n\n                return\n              }\n\n              // COMPAT: Certain browsers don't handle the selection updates\n              // properly. In Chrome, the selection isn't properly extended.\n              // And in Firefox, the selection isn't properly collapsed.\n              // (2017/10/17)\n              if (Hotkeys.isMoveLineBackward(nativeEvent)) {\n                event.preventDefault()\n                Transforms.move(editor, { unit: 'line', reverse: true })\n                return\n              }\n\n              if (Hotkeys.isMoveLineForward(nativeEvent)) {\n                event.preventDefault()\n                Transforms.move(editor, { unit: 'line' })\n                return\n              }\n\n              if (Hotkeys.isExtendLineBackward(nativeEvent)) {\n                event.preventDefault()\n                Transforms.move(editor, {\n                  unit: 'line',\n                  edge: 'focus',\n                  reverse: true,\n                })\n                return\n              }\n\n              if (Hotkeys.isExtendLineForward(nativeEvent)) {\n                event.preventDefault()\n                Transforms.move(editor, { unit: 'line', edge: 'focus' })\n                return\n              }\n\n              // COMPAT: If a void node is selected, or a zero-width text node\n              // adjacent to an inline is selected, we need to handle these\n              // hotkeys manually because browsers won't be able to skip over\n              // the void node with the zero-width space not being an empty\n              // string.\n              if (Hotkeys.isMoveBackward(nativeEvent)) {\n                event.preventDefault()\n\n                if (selection && Range.isCollapsed(selection)) {\n                  Transforms.move(editor, { reverse: true })\n                } else {\n                  Transforms.collapse(editor, { edge: 'start' })\n                }\n\n                return\n              }\n\n              if (Hotkeys.isMoveForward(nativeEvent)) {\n                event.preventDefault()\n\n                if (selection && Range.isCollapsed(selection)) {\n                  Transforms.move(editor)\n                } else {\n                  Transforms.collapse(editor, { edge: 'end' })\n                }\n\n                return\n              }\n\n              if (Hotkeys.isMoveWordBackward(nativeEvent)) {\n                event.preventDefault()\n                Transforms.move(editor, { unit: 'word', reverse: true })\n                return\n              }\n\n              if (Hotkeys.isMoveWordForward(nativeEvent)) {\n                event.preventDefault()\n                Transforms.move(editor, { unit: 'word' })\n                return\n              }\n\n              // COMPAT: Firefox doesn't support the `beforeinput` event, so we\n              // fall back to guessing at the input intention for hotkeys.\n              // COMPAT: In iOS, some of these hotkeys are handled in the\n              if (IS_FIREFOX) {\n                // We don't have a core behavior for these, but they change the\n                // DOM if we don't prevent them, so we have to.\n                if (\n                  Hotkeys.isBold(nativeEvent) ||\n                  Hotkeys.isItalic(nativeEvent) ||\n                  Hotkeys.isTransposeCharacter(nativeEvent)\n                ) {\n                  event.preventDefault()\n                  return\n                }\n\n                if (Hotkeys.isSplitBlock(nativeEvent)) {\n                  event.preventDefault()\n                  Editor.insertBreak(editor)\n                  return\n                }\n\n                if (Hotkeys.isDeleteBackward(nativeEvent)) {\n                  event.preventDefault()\n\n                  if (selection && Range.isExpanded(selection)) {\n                    Editor.deleteFragment(editor)\n                  } else {\n                    Editor.deleteBackward(editor)\n                  }\n\n                  return\n                }\n\n                if (Hotkeys.isDeleteForward(nativeEvent)) {\n                  event.preventDefault()\n\n                  if (selection && Range.isExpanded(selection)) {\n                    Editor.deleteFragment(editor)\n                  } else {\n                    Editor.deleteForward(editor)\n                  }\n\n                  return\n                }\n\n                if (Hotkeys.isDeleteLineBackward(nativeEvent)) {\n                  event.preventDefault()\n\n                  if (selection && Range.isExpanded(selection)) {\n                    Editor.deleteFragment(editor)\n                  } else {\n                    Editor.deleteBackward(editor, { unit: 'line' })\n                  }\n\n                  return\n                }\n\n                if (Hotkeys.isDeleteLineForward(nativeEvent)) {\n                  event.preventDefault()\n\n                  if (selection && Range.isExpanded(selection)) {\n                    Editor.deleteFragment(editor)\n                  } else {\n                    Editor.deleteForward(editor, { unit: 'line' })\n                  }\n\n                  return\n                }\n\n                if (Hotkeys.isDeleteWordBackward(nativeEvent)) {\n                  event.preventDefault()\n\n                  if (selection && Range.isExpanded(selection)) {\n                    Editor.deleteFragment(editor)\n                  } else {\n                    Editor.deleteBackward(editor, { unit: 'word' })\n                  }\n\n                  return\n                }\n\n                if (Hotkeys.isDeleteWordForward(nativeEvent)) {\n                  event.preventDefault()\n\n                  if (selection && Range.isExpanded(selection)) {\n                    Editor.deleteFragment(editor)\n                  } else {\n                    Editor.deleteForward(editor, { unit: 'word' })\n                  }\n\n                  return\n                }\n              }\n            }\n          },\n          [readOnly, attributes.onKeyDown]\n        )}\n        onPaste={useCallback(\n          (event: React.ClipboardEvent<HTMLDivElement>) => {\n            // COMPAT: Firefox doesn't support the `beforeinput` event, so we\n            // fall back to React's `onPaste` here instead.\n            if (\n              IS_FIREFOX &&\n              !readOnly &&\n              hasEditableTarget(editor, event.target) &&\n              !isEventHandled(event, attributes.onPaste)\n            ) {\n              event.preventDefault()\n              ReactEditor.insertData(editor, event.clipboardData)\n            }\n          },\n          [readOnly, attributes.onPaste]\n        )}\n      >\n        <Children\n          decorate={decorate}\n          decorations={decorations}\n          node={editor}\n          renderElement={renderElement}\n          renderLeaf={renderLeaf}\n          selection={editor.selection}\n        />\n      </Component>\n    </ReadOnlyContext.Provider>\n  )\n}\n\n/**\n * A default memoized decorate function.\n */\n\nconst defaultDecorate = () => []\n\n/**\n * Check if two DOM range objects are equal.\n */\n\nconst isRangeEqual = (a: DOMRange, b: DOMRange) => {\n  return (\n    (a.startContainer === b.startContainer &&\n      a.startOffset === b.startOffset &&\n      a.endContainer === b.endContainer &&\n      a.endOffset === b.endOffset) ||\n    (a.startContainer === b.endContainer &&\n      a.startOffset === b.endOffset &&\n      a.endContainer === b.startContainer &&\n      a.endOffset === b.startOffset)\n  )\n}\n\n/**\n * Check if the target is in the editor.\n */\n\nconst hasTarget = (\n  editor: ReactEditor,\n  target: EventTarget | null\n): target is DOMNode => {\n  return isDOMNode(target) && ReactEditor.hasDOMNode(editor, target)\n}\n\n/**\n * Check if the target is editable and in the editor.\n */\n\nconst hasEditableTarget = (\n  editor: ReactEditor,\n  target: EventTarget | null\n): target is DOMNode => {\n  return (\n    isDOMNode(target) &&\n    ReactEditor.hasDOMNode(editor, target, { editable: true })\n  )\n}\n\n/**\n * Check if an event is overrided by a handler.\n */\n\nconst isEventHandled = <\n  EventType extends React.SyntheticEvent<unknown, unknown>\n>(\n  event: EventType,\n  handler?: (event: EventType) => void\n) => {\n  if (!handler) {\n    return false\n  }\n\n  handler(event)\n  return event.isDefaultPrevented() || event.isPropagationStopped()\n}\n\n/**\n * Check if a DOM event is overrided by a handler.\n */\n\nconst isDOMEventHandled = (event: Event, handler?: (event: Event) => void) => {\n  if (!handler) {\n    return false\n  }\n\n  handler(event)\n  return event.defaultPrevented\n}\n\n/**\n * Set the currently selected fragment to the clipboard.\n */\n\nconst setFragmentData = (\n  dataTransfer: DataTransfer,\n  editor: ReactEditor\n): void => {\n  const { selection } = editor\n\n  if (!selection) {\n    return\n  }\n\n  const [start, end] = Range.edges(selection)\n  const startVoid = Editor.void(editor, { at: start.path })\n  const endVoid = Editor.void(editor, { at: end.path })\n\n  if (Range.isCollapsed(selection) && !startVoid) {\n    return\n  }\n\n  // Create a fake selection so that we can add a Base64-encoded copy of the\n  // fragment to the HTML, to decode on future pastes.\n  const domRange = ReactEditor.toDOMRange(editor, selection)\n  let contents = domRange.cloneContents()\n  let attach = contents.childNodes[0] as HTMLElement\n\n  // Make sure attach is non-empty, since empty nodes will not get copied.\n  contents.childNodes.forEach(node => {\n    if (node.textContent && node.textContent.trim() !== '') {\n      attach = node as HTMLElement\n    }\n  })\n\n  // COMPAT: If the end node is a void node, we need to move the end of the\n  // range from the void node's spacer span, to the end of the void node's\n  // content, since the spacer is before void's content in the DOM.\n  if (endVoid) {\n    const [voidNode] = endVoid\n    const r = domRange.cloneRange()\n    const domNode = ReactEditor.toDOMNode(editor, voidNode)\n    r.setEndAfter(domNode)\n    contents = r.cloneContents()\n  }\n\n  // COMPAT: If the start node is a void node, we need to attach the encoded\n  // fragment to the void node's content node instead of the spacer, because\n  // attaching it to empty `<div>/<span>` nodes will end up having it erased by\n  // most browsers. (2018/04/27)\n  if (startVoid) {\n    attach = contents.querySelector('[data-slate-spacer]')! as HTMLElement\n  }\n\n  // Remove any zero-width space spans from the cloned DOM so that they don't\n  // show up elsewhere when pasted.\n  Array.from(contents.querySelectorAll('[data-slate-zero-width]')).forEach(\n    zw => {\n      const isNewline = zw.getAttribute('data-slate-zero-width') === 'n'\n      zw.textContent = isNewline ? '\\n' : ''\n    }\n  )\n\n  // Set a `data-slate-fragment` attribute on a non-empty node, so it shows up\n  // in the HTML, and can be used for intra-Slate pasting. If it's a text\n  // node, wrap it in a `<span>` so we have something to set an attribute on.\n  if (isDOMText(attach)) {\n    const span = document.createElement('span')\n    // COMPAT: In Chrome and Safari, if we don't add the `white-space` style\n    // then leading and trailing spaces will be ignored. (2017/09/21)\n    span.style.whiteSpace = 'pre'\n    span.appendChild(attach)\n    contents.appendChild(span)\n    attach = span\n  }\n\n  const fragment = Node.fragment(editor, selection)\n  const string = JSON.stringify(fragment)\n  const encoded = window.btoa(encodeURIComponent(string))\n  attach.setAttribute('data-slate-fragment', encoded)\n  dataTransfer.setData('application/x-slate-fragment', encoded)\n\n  // Add the content to a <div> so that we can get its inner HTML.\n  const div = document.createElement('div')\n  div.appendChild(contents)\n  dataTransfer.setData('text/html', div.innerHTML)\n  dataTransfer.setData('text/plain', getPlainText(div))\n}\n\n/**\n * Get a plaintext representation of the content of a node, accounting for block\n * elements which get a newline appended.\n */\n\nconst getPlainText = (domNode: DOMNode) => {\n  let text = ''\n\n  if (isDOMText(domNode) && domNode.nodeValue) {\n    return domNode.nodeValue\n  }\n\n  if (isDOMElement(domNode)) {\n    for (const childNode of Array.from(domNode.childNodes)) {\n      text += getPlainText(childNode)\n    }\n\n    const display = getComputedStyle(domNode).getPropertyValue('display')\n\n    if (display === 'block' || display === 'list' || domNode.tagName === 'BR') {\n      text += '\\n'\n    }\n  }\n\n  return text\n}\n","/**\n * An auto-incrementing identifier for keys.\n */\n\nlet n = 0\n\n/**\n * A class that keeps track of a key string. We use a full class here because we\n * want to be able to use them as keys in `WeakMap` objects.\n */\n\nexport class Key {\n  id: string\n\n  constructor() {\n    this.id = `${n++}`\n  }\n}\n","import { Editor, Node, Path, Point, Range, Transforms } from 'slate'\n\nimport { Key } from '../utils/key'\nimport {\n  EDITOR_TO_ELEMENT,\n  ELEMENT_TO_NODE,\n  IS_FOCUSED,\n  IS_READ_ONLY,\n  KEY_TO_ELEMENT,\n  NODE_TO_INDEX,\n  NODE_TO_KEY,\n  NODE_TO_PARENT,\n} from '../utils/weak-maps'\nimport {\n  DOMElement,\n  DOMNode,\n  DOMPoint,\n  DOMRange,\n  DOMSelection,\n  DOMStaticRange,\n  isDOMElement,\n  normalizeDOMPoint,\n} from '../utils/dom'\n\n/**\n * A React and DOM-specific version of the `Editor` interface.\n */\n\nexport interface ReactEditor extends Editor {\n  insertData: (data: DataTransfer) => void\n}\n\nexport const ReactEditor = {\n  /**\n   * Find a key for a Slate node.\n   */\n\n  findKey(editor: ReactEditor, node: Node): Key {\n    let key = NODE_TO_KEY.get(node)\n\n    if (!key) {\n      key = new Key()\n      NODE_TO_KEY.set(node, key)\n    }\n\n    return key\n  },\n\n  /**\n   * Find the path of Slate node.\n   */\n\n  findPath(editor: ReactEditor, node: Node): Path {\n    const path: Path = []\n    let child = node\n\n    while (true) {\n      const parent = NODE_TO_PARENT.get(child)\n\n      if (parent == null) {\n        if (Editor.isEditor(child)) {\n          return path\n        } else {\n          break\n        }\n      }\n\n      const i = NODE_TO_INDEX.get(child)\n\n      if (i == null) {\n        break\n      }\n\n      path.unshift(i)\n      child = parent\n    }\n\n    throw new Error(\n      `Unable to find the path for Slate node: ${JSON.stringify(node)}`\n    )\n  },\n\n  /**\n   * Check if the editor is focused.\n   */\n\n  isFocused(editor: ReactEditor): boolean {\n    return !!IS_FOCUSED.get(editor)\n  },\n\n  /**\n   * Check if the editor is in read-only mode.\n   */\n\n  isReadOnly(editor: ReactEditor): boolean {\n    return !!IS_READ_ONLY.get(editor)\n  },\n\n  /**\n   * Blur the editor.\n   */\n\n  blur(editor: ReactEditor): void {\n    const el = ReactEditor.toDOMNode(editor, editor)\n    IS_FOCUSED.set(editor, false)\n\n    if (window.document.activeElement === el) {\n      el.blur()\n    }\n  },\n\n  /**\n   * Focus the editor.\n   */\n\n  focus(editor: ReactEditor): void {\n    const el = ReactEditor.toDOMNode(editor, editor)\n    IS_FOCUSED.set(editor, true)\n\n    if (window.document.activeElement !== el) {\n      el.focus({ preventScroll: true })\n    }\n  },\n\n  /**\n   * Deselect the editor.\n   */\n\n  deselect(editor: ReactEditor): void {\n    const { selection } = editor\n    const domSelection = window.getSelection()\n\n    if (domSelection && domSelection.rangeCount > 0) {\n      domSelection.removeAllRanges()\n    }\n\n    if (selection) {\n      Transforms.deselect(editor)\n    }\n  },\n\n  /**\n   * Check if a DOM node is within the editor.\n   */\n\n  hasDOMNode(\n    editor: ReactEditor,\n    target: DOMNode,\n    options: { editable?: boolean } = {}\n  ): boolean {\n    const { editable = false } = options\n    const el = ReactEditor.toDOMNode(editor, editor)\n    let element\n\n    // COMPAT: In Firefox, reading `target.nodeType` will throw an error if\n    // target is originating from an internal \"restricted\" element (e.g. a\n    // stepper arrow on a number input). (2018/05/04)\n    // https://github.com/ianstormtaylor/slate/issues/1819\n    try {\n      element = isDOMElement(target) ? target : target.parentElement\n    } catch (err) {\n      if (\n        !err.message.includes('Permission denied to access property \"nodeType\"')\n      ) {\n        throw err\n      }\n    }\n\n    if (!element) {\n      return false\n    }\n\n    return (\n      element.closest(`[data-slate-editor]`) === el &&\n      (!editable || el.isContentEditable)\n    )\n  },\n\n  /**\n   * Insert data from a `DataTransfer` into the editor.\n   */\n\n  insertData(editor: ReactEditor, data: DataTransfer): void {\n    editor.insertData(data)\n  },\n\n  /**\n   * Find the native DOM element from a Slate node.\n   */\n\n  toDOMNode(editor: ReactEditor, node: Node): HTMLElement {\n    const domNode = Editor.isEditor(node)\n      ? EDITOR_TO_ELEMENT.get(editor)\n      : KEY_TO_ELEMENT.get(ReactEditor.findKey(editor, node))\n\n    if (!domNode) {\n      throw new Error(\n        `Cannot resolve a DOM node from Slate node: ${JSON.stringify(node)}`\n      )\n    }\n\n    return domNode\n  },\n\n  /**\n   * Find a native DOM selection point from a Slate point.\n   */\n\n  toDOMPoint(editor: ReactEditor, point: Point): DOMPoint {\n    const [node] = Editor.node(editor, point.path)\n    const el = ReactEditor.toDOMNode(editor, node)\n    let domPoint: DOMPoint | undefined\n\n    // If we're inside a void node, force the offset to 0, otherwise the zero\n    // width spacing character will result in an incorrect offset of 1\n    if (Editor.void(editor, { at: point })) {\n      point = { path: point.path, offset: 0 }\n    }\n\n    // For each leaf, we need to isolate its content, which means filtering\n    // to its direct text and zero-width spans. (We have to filter out any\n    // other siblings that may have been rendered alongside them.)\n    const selector = `[data-slate-string], [data-slate-zero-width]`\n    const texts = Array.from(el.querySelectorAll(selector))\n    let start = 0\n\n    for (const text of texts) {\n      const domNode = text.childNodes[0] as HTMLElement\n\n      if (domNode == null || domNode.textContent == null) {\n        continue\n      }\n\n      const { length } = domNode.textContent\n      const attr = text.getAttribute('data-slate-length')\n      const trueLength = attr == null ? length : parseInt(attr, 10)\n      const end = start + trueLength\n\n      if (point.offset <= end) {\n        const offset = Math.min(length, Math.max(0, point.offset - start))\n        domPoint = [domNode, offset]\n        break\n      }\n\n      start = end\n    }\n\n    if (!domPoint) {\n      throw new Error(\n        `Cannot resolve a DOM point from Slate point: ${JSON.stringify(point)}`\n      )\n    }\n\n    return domPoint\n  },\n\n  /**\n   * Find a native DOM range from a Slate `range`.\n   */\n\n  toDOMRange(editor: ReactEditor, range: Range): DOMRange {\n    const { anchor, focus } = range\n    const domAnchor = ReactEditor.toDOMPoint(editor, anchor)\n    const domFocus = Range.isCollapsed(range)\n      ? domAnchor\n      : ReactEditor.toDOMPoint(editor, focus)\n\n    const domRange = window.document.createRange()\n    const start = Range.isBackward(range) ? domFocus : domAnchor\n    const end = Range.isBackward(range) ? domAnchor : domFocus\n    domRange.setStart(start[0], start[1])\n    domRange.setEnd(end[0], end[1])\n    return domRange\n  },\n\n  /**\n   * Find a Slate node from a native DOM `element`.\n   */\n\n  toSlateNode(editor: ReactEditor, domNode: DOMNode): Node {\n    let domEl = isDOMElement(domNode) ? domNode : domNode.parentElement\n\n    if (domEl && !domEl.hasAttribute('data-slate-node')) {\n      domEl = domEl.closest(`[data-slate-node]`)\n    }\n\n    const node = domEl ? ELEMENT_TO_NODE.get(domEl as HTMLElement) : null\n\n    if (!node) {\n      throw new Error(`Cannot resolve a Slate node from DOM node: ${domEl}`)\n    }\n\n    return node\n  },\n\n  /**\n   * Get the target range from a DOM `event`.\n   */\n\n  findEventRange(editor: ReactEditor, event: any): Range {\n    if ('nativeEvent' in event) {\n      event = event.nativeEvent\n    }\n\n    const { clientX: x, clientY: y, target } = event\n\n    if (x == null || y == null) {\n      throw new Error(`Cannot resolve a Slate range from a DOM event: ${event}`)\n    }\n\n    const node = ReactEditor.toSlateNode(editor, event.target)\n    const path = ReactEditor.findPath(editor, node)\n\n    // If the drop target is inside a void node, move it into either the\n    // next or previous node, depending on which side the `x` and `y`\n    // coordinates are closest to.\n    if (Editor.isVoid(editor, node)) {\n      const rect = target.getBoundingClientRect()\n      const isPrev = editor.isInline(node)\n        ? x - rect.left < rect.left + rect.width - x\n        : y - rect.top < rect.top + rect.height - y\n\n      const edge = Editor.point(editor, path, {\n        edge: isPrev ? 'start' : 'end',\n      })\n      const point = isPrev\n        ? Editor.before(editor, edge)\n        : Editor.after(editor, edge)\n\n      if (point) {\n        const range = Editor.range(editor, point)\n        return range\n      }\n    }\n\n    // Else resolve a range from the caret position where the drop occured.\n    let domRange\n    const { document } = window\n\n    // COMPAT: In Firefox, `caretRangeFromPoint` doesn't exist. (2016/07/25)\n    if (document.caretRangeFromPoint) {\n      domRange = document.caretRangeFromPoint(x, y)\n    } else {\n      const position = document.caretPositionFromPoint(x, y)\n\n      if (position) {\n        domRange = document.createRange()\n        domRange.setStart(position.offsetNode, position.offset)\n        domRange.setEnd(position.offsetNode, position.offset)\n      }\n    }\n\n    if (!domRange) {\n      throw new Error(`Cannot resolve a Slate range from a DOM event: ${event}`)\n    }\n\n    // Resolve a Slate range from the DOM range.\n    const range = ReactEditor.toSlateRange(editor, domRange)\n    return range\n  },\n\n  /**\n   * Find a Slate point from a DOM selection's `domNode` and `domOffset`.\n   */\n\n  toSlatePoint(editor: ReactEditor, domPoint: DOMPoint): Point {\n    const [nearestNode, nearestOffset] = normalizeDOMPoint(domPoint)\n    const parentNode = nearestNode.parentNode as DOMElement\n    let textNode: DOMElement | null = null\n    let offset = 0\n\n    if (parentNode) {\n      const voidNode = parentNode.closest('[data-slate-void=\"true\"]')\n      let leafNode = parentNode.closest('[data-slate-leaf]')\n      let domNode: DOMElement | null = null\n\n      // Calculate how far into the text node the `nearestNode` is, so that we\n      // can determine what the offset relative to the text node is.\n      if (leafNode) {\n        textNode = leafNode.closest('[data-slate-node=\"text\"]')!\n        const range = window.document.createRange()\n        range.setStart(textNode, 0)\n        range.setEnd(nearestNode, nearestOffset)\n        const contents = range.cloneContents()\n        const removals = [\n          ...contents.querySelectorAll('[data-slate-zero-width]'),\n          ...contents.querySelectorAll('[contenteditable=false]'),\n        ]\n\n        removals.forEach(el => {\n          el!.parentNode!.removeChild(el)\n        })\n\n        // COMPAT: Edge has a bug where Range.prototype.toString() will\n        // convert \\n into \\r\\n. The bug causes a loop when slate-react\n        // attempts to reposition its cursor to match the native position. Use\n        // textContent.length instead.\n        // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10291116/\n        offset = contents.textContent!.length\n        domNode = textNode\n      } else if (voidNode) {\n        // For void nodes, the element with the offset key will be a cousin, not an\n        // ancestor, so find it by going down from the nearest void parent.\n\n        leafNode = voidNode.querySelector('[data-slate-leaf]')!\n        textNode = leafNode.closest('[data-slate-node=\"text\"]')!\n        domNode = leafNode\n        offset = domNode.textContent!.length\n      }\n\n      // COMPAT: If the parent node is a Slate zero-width space, editor is\n      // because the text node should have no characters. However, during IME\n      // composition the ASCII characters will be prepended to the zero-width\n      // space, so subtract 1 from the offset to account for the zero-width\n      // space character.\n      if (\n        domNode &&\n        offset === domNode.textContent!.length &&\n        parentNode.hasAttribute('data-slate-zero-width')\n      ) {\n        offset--\n      }\n    }\n\n    if (!textNode) {\n      throw new Error(\n        `Cannot resolve a Slate point from DOM point: ${domPoint}`\n      )\n    }\n\n    // COMPAT: If someone is clicking from one Slate editor into another,\n    // the select event fires twice, once for the old editor's `element`\n    // first, and then afterwards for the correct `element`. (2017/03/03)\n    const slateNode = ReactEditor.toSlateNode(editor, textNode!)\n    const path = ReactEditor.findPath(editor, slateNode)\n    return { path, offset }\n  },\n\n  /**\n   * Find a Slate range from a DOM range or selection.\n   */\n\n  toSlateRange(\n    editor: ReactEditor,\n    domRange: DOMRange | DOMStaticRange | DOMSelection\n  ): Range {\n    const el =\n      domRange instanceof Selection\n        ? domRange.anchorNode\n        : domRange.startContainer\n    let anchorNode\n    let anchorOffset\n    let focusNode\n    let focusOffset\n    let isCollapsed\n\n    if (el) {\n      if (domRange instanceof Selection) {\n        anchorNode = domRange.anchorNode\n        anchorOffset = domRange.anchorOffset\n        focusNode = domRange.focusNode\n        focusOffset = domRange.focusOffset\n        isCollapsed = domRange.isCollapsed\n      } else {\n        anchorNode = domRange.startContainer\n        anchorOffset = domRange.startOffset\n        focusNode = domRange.endContainer\n        focusOffset = domRange.endOffset\n        isCollapsed = domRange.collapsed\n      }\n    }\n\n    if (\n      anchorNode == null ||\n      focusNode == null ||\n      anchorOffset == null ||\n      focusOffset == null\n    ) {\n      throw new Error(\n        `Cannot resolve a Slate range from DOM range: ${domRange}`\n      )\n    }\n\n    const anchor = ReactEditor.toSlatePoint(editor, [anchorNode, anchorOffset])\n    const focus = isCollapsed\n      ? anchor\n      : ReactEditor.toSlatePoint(editor, [focusNode, focusOffset])\n\n    return { anchor, focus }\n  },\n}\n","import { createContext, useContext } from 'react'\n\n/**\n * A React context for sharing the `focused` state of the editor.\n */\n\nexport const FocusedContext = createContext(false)\n\n/**\n * Get the current `focused` state of the editor.\n */\n\nexport const useFocused = (): boolean => {\n  return useContext(FocusedContext)\n}\n","import React, { useMemo, useState, useCallback } from 'react'\nimport { Node } from 'slate'\n\nimport { ReactEditor } from '../plugin/react-editor'\nimport { FocusedContext } from '../hooks/use-focused'\nimport { EditorContext } from '../hooks/use-editor'\nimport { SlateContext } from '../hooks/use-slate'\nimport { EDITOR_TO_ON_CHANGE } from '../utils/weak-maps'\n\n/**\n * A wrapper around the provider to handle `onChange` events, because the editor\n * is a mutable singleton so it won't ever register as \"changed\" otherwise.\n */\n\nexport const Slate = (props: {\n  editor: ReactEditor\n  value: Node[]\n  children: React.ReactNode\n  onChange: (value: Node[]) => void\n  [key: string]: any\n}) => {\n  const { editor, children, onChange, value, ...rest } = props\n  const [key, setKey] = useState(0)\n  const context: [ReactEditor] = useMemo(() => {\n    editor.children = value\n    Object.assign(editor, rest)\n    return [editor]\n  }, [key, value, ...Object.values(rest)])\n\n  const onContextChange = useCallback(() => {\n    onChange(editor.children)\n    setKey(key + 1)\n  }, [key, onChange])\n\n  EDITOR_TO_ON_CHANGE.set(editor, onContextChange)\n\n  return (\n    <SlateContext.Provider value={context}>\n      <EditorContext.Provider value={editor}>\n        <FocusedContext.Provider value={ReactEditor.isFocused(editor)}>\n          {children}\n        </FocusedContext.Provider>\n      </EditorContext.Provider>\n    </SlateContext.Provider>\n  )\n}\n","import ReactDOM from 'react-dom'\nimport { Editor, Node, Path, Operation, Transforms } from 'slate'\n\nimport { ReactEditor } from './react-editor'\nimport { Key } from '../utils/key'\nimport { EDITOR_TO_ON_CHANGE, NODE_TO_KEY } from '../utils/weak-maps'\n\n/**\n * `withReact` adds React and DOM specific behaviors to the editor.\n */\n\nexport const withReact = <T extends Editor>(editor: T) => {\n  const e = editor as T & ReactEditor\n  const { apply, onChange } = e\n\n  e.apply = (op: Operation) => {\n    const matches: [Path, Key][] = []\n\n    switch (op.type) {\n      case 'insert_text':\n      case 'remove_text':\n      case 'set_node': {\n        for (const [node, path] of Editor.levels(e, { at: op.path })) {\n          const key = ReactEditor.findKey(e, node)\n          matches.push([path, key])\n        }\n\n        break\n      }\n\n      case 'insert_node':\n      case 'remove_node':\n      case 'merge_node':\n      case 'split_node': {\n        for (const [node, path] of Editor.levels(e, {\n          at: Path.parent(op.path),\n        })) {\n          const key = ReactEditor.findKey(e, node)\n          matches.push([path, key])\n        }\n\n        break\n      }\n\n      case 'move_node': {\n        // TODO\n        break\n      }\n    }\n\n    apply(op)\n\n    for (const [path, key] of matches) {\n      const [node] = Editor.node(e, path)\n      NODE_TO_KEY.set(node, key)\n    }\n  }\n\n  e.insertData = (data: DataTransfer) => {\n    const fragment = data.getData('application/x-slate-fragment')\n\n    if (fragment) {\n      const decoded = decodeURIComponent(window.atob(fragment))\n      const parsed = JSON.parse(decoded) as Node[]\n      Transforms.insertFragment(e, parsed)\n      return\n    }\n\n    const text = data.getData('text/plain')\n\n    if (text) {\n      const lines = text.split('\\n')\n      let split = false\n\n      for (const line of lines) {\n        if (split) {\n          Transforms.splitNodes(e)\n        }\n\n        Transforms.insertText(e, line)\n        split = true\n      }\n    }\n  }\n\n  e.onChange = () => {\n    // COMPAT: React doesn't batch `setState` hook calls, which means that the\n    // children and selection can get out of sync for one render pass. So we\n    // have to use this unstable API to ensure it batches them. (2019/12/03)\n    // https://github.com/facebook/react/issues/14259#issuecomment-439702367\n    ReactDOM.unstable_batchedUpdates(() => {\n      const onContextChange = EDITOR_TO_ON_CHANGE.get(e)\n\n      if (onContextChange) {\n        onContextChange()\n      }\n\n      onChange()\n    })\n  }\n\n  return e\n}\n"],"names":["Node","NODE_TO_INDEX","WeakMap","NODE_TO_PARENT","EDITOR_TO_ELEMENT","ELEMENT_TO_NODE","KEY_TO_ELEMENT","NODE_TO_ELEMENT","NODE_TO_KEY","IS_READ_ONLY","IS_FOCUSED","EDITOR_TO_ON_CHANGE","PLACEHOLDER_SYMBOL","Symbol","Text","useIsomorphicLayoutEffect","window","useLayoutEffect","useEffect","SlateText","Leaf","SelectedContext","createContext","useSelected","useContext","Element","ElementComponent","TextComponent","IS_IOS","navigator","test","userAgent","MSStream","IS_APPLE","IS_FIREFOX","IS_SAFARI","HOTKEYS","bold","compose","moveBackward","moveForward","moveWordBackward","moveWordForward","deleteBackward","deleteForward","extendBackward","extendForward","italic","splitBlock","undo","APPLE_HOTKEYS","moveLineBackward","moveLineForward","deleteLineBackward","deleteLineForward","deleteWordBackward","deleteWordForward","extendLineBackward","extendLineForward","redo","transposeCharacter","WINDOWS_HOTKEYS","create","key","generic","apple","windows","isGeneric","isKeyHotkey","isApple","isWindows","event","isBold","isCompose","isMoveBackward","isMoveForward","isDeleteBackward","isDeleteForward","isDeleteLineBackward","isDeleteLineForward","isDeleteWordBackward","isDeleteWordForward","isExtendBackward","isExtendForward","isExtendLineBackward","isExtendLineForward","isItalic","isMoveLineBackward","isMoveLineForward","isMoveWordBackward","isMoveWordForward","isRedo","isSplitBlock","isTransposeCharacter","isUndo","ReadOnlyContext","useReadOnly","isDOMComment","value","isDOMNode","nodeType","isDOMElement","isDOMText","normalizeDOMPoint","domPoint","node","offset","childNodes","length","isLast","direction","index","getEditableChild","i","textContent","parent","child","triedForward","triedBackward","getAttribute","n","Key","constructor","id","ReactEditor","findKey","editor","get","set","findPath","path","Editor","isEditor","unshift","Error","JSON","stringify","isFocused","isReadOnly","blur","el","toDOMNode","document","activeElement","focus","preventScroll","deselect","selection","domSelection","getSelection","rangeCount","removeAllRanges","Transforms","hasDOMNode","target","options","editable","element","parentElement","err","message","includes","closest","isContentEditable","insertData","data","domNode","toDOMPoint","point","void","at","selector","texts","Array","from","querySelectorAll","start","text","attr","trueLength","parseInt","end","Math","min","max","toDOMRange","range","anchor","domAnchor","domFocus","Range","isCollapsed","domRange","createRange","isBackward","setStart","setEnd","toSlateNode","domEl","hasAttribute","findEventRange","nativeEvent","clientX","x","clientY","y","isVoid","rect","getBoundingClientRect","isPrev","isInline","left","width","top","height","edge","before","after","caretRangeFromPoint","position","caretPositionFromPoint","offsetNode","toSlateRange","toSlatePoint","nearestNode","nearestOffset","parentNode","textNode","voidNode","leafNode","contents","cloneContents","removals","forEach","removeChild","querySelector","slateNode","Selection","anchorNode","startContainer","anchorOffset","focusNode","focusOffset","startOffset","endContainer","endOffset","collapsed","FocusedContext","useFocused","withReact","e","apply","onChange","op","matches","type","levels","push","Path","fragment","getData","decoded","decodeURIComponent","atob","parsed","parse","insertFragment","lines","split","line","splitNodes","insertText","ReactDOM","unstable_batchedUpdates","onContextChange"],"mappings":";;;;;;;;AAKA;;;AAIA,MAAM,MAAM,GAAG,CAAC,KAKf;IACC,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,GAAG,KAAK,CAAA;IAC5C,MAAM,MAAM,GAAG,SAAS,EAAE,CAAA;IAC1B,MAAM,IAAI,GAAG,WAAW,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI,CAAC,CAAA;IAC/C,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAA;;;IAIpC,IAAI,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE;QACzB,OAAO,oBAAC,eAAe,IAAC,MAAM,EAAEA,MAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,MAAM,GAAI,CAAA;KAC/D;;;;IAKD,IACE,IAAI,CAAC,IAAI,KAAK,EAAE;QAChB,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,IAAI;QACpD,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC;QACxB,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,UAAU,CAAC,KAAK,EAAE,EACxC;QACA,OAAO,oBAAC,eAAe,IAAC,WAAW,SAAG,CAAA;KACvC;;;;IAKD,IAAI,IAAI,CAAC,IAAI,KAAK,EAAE,EAAE;QACpB,OAAO,oBAAC,eAAe,OAAG,CAAA;KAC3B;;;IAID,IAAI,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE;QAC1C,OAAO,oBAAC,UAAU,IAAC,UAAU,QAAC,IAAI,EAAE,IAAI,CAAC,IAAI,GAAI,CAAA;KAClD;IAED,OAAO,oBAAC,UAAU,IAAC,IAAI,EAAE,IAAI,CAAC,IAAI,GAAI,CAAA;CACvC,CAAA;;;;AAMD,MAAM,UAAU,GAAG,CAAC,KAA6C;IAC/D,MAAM,EAAE,IAAI,EAAE,UAAU,GAAG,KAAK,EAAE,GAAG,KAAK,CAAA;IAC1C,QACE;QACG,IAAI;QACJ,UAAU,GAAG,IAAI,GAAG,IAAI,CACpB,EACR;CACF,CAAA;;;;AAMD,MAAM,eAAe,GAAG,CAAC,KAAiD;IACxE,MAAM,EAAE,MAAM,GAAG,CAAC,EAAE,WAAW,GAAG,KAAK,EAAE,GAAG,KAAK,CAAA;IACjD,QACE,uDACyB,WAAW,GAAG,GAAG,GAAG,GAAG,uBAC3B,MAAM;QAExB,QAAQ;QACR,WAAW,GAAG,+BAAM,GAAG,IAAI,CACvB,EACR;CACF,CAAA;;AC/ED;;;;AAKA,AAAO,IAAMC,aAAa,GAA0B,IAAIC,OAAJ,EAA7C;AACP,AAAO,IAAMC,cAAc,GAA4B,IAAID,OAAJ,EAAhD;;;;;;AAOP,AAAO,IAAME,iBAAiB,GAAiC,IAAIF,OAAJ,EAAxD;AACP,AACO,IAAMG,eAAe,GAA+B,IAAIH,OAAJ,EAApD;AACP,AAAO,IAAMI,cAAc,GAA8B,IAAIJ,OAAJ,EAAlD;AACP,AAAO,IAAMK,eAAe,GAA+B,IAAIL,OAAJ,EAApD;AACP,AAAO,IAAMM,WAAW,GAAuB,IAAIN,OAAJ,EAAxC;;;;;AAMP,AAAO,IAAMO,YAAY,GAA6B,IAAIP,OAAJ,EAA/C;AACP,AAAO,IAAMQ,UAAU,GAA6B,IAAIR,OAAJ,EAA7C;AACP,AAGA;;;;AAIA,AAAO,IAAMS,mBAAmB,GAAG,IAAIT,OAAJ,EAA5B;;;;;AAMP,AAAO,IAAMU,kBAAkB,GAAIC,MAAM,CAAC,aAAD,CAAlC;;ACpCP;;;AAIA,MAAM,IAAI,GAAG,CAAC,KAMb;IACC,MAAM,EACJ,IAAI,EACJ,MAAM,EACN,IAAI,EACJ,MAAM,EACN,UAAU,GAAG,CAAC,KAAsB,KAAK,oBAAC,WAAW,oBAAK,KAAK,EAAI,GACpE,GAAG,KAAK,CAAA;IAET,IAAI,QAAQ,IACV,oBAAC,MAAM,IAAC,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,GAAI,CACnE,CAAA;IAED,IAAI,IAAI,CAAC,kBAAkB,CAAC,EAAE;QAC5B,QAAQ,IACN,oBAAC,KAAK,CAAC,QAAQ;YACb,8BACE,eAAe,EAAE,KAAK,EACtB,KAAK,EAAE;oBACL,aAAa,EAAE,MAAM;oBACrB,OAAO,EAAE,cAAc;oBACvB,aAAa,EAAE,UAAU;oBACzB,KAAK,EAAE,GAAG;oBACV,QAAQ,EAAE,MAAM;oBAChB,UAAU,EAAE,QAAQ;oBACpB,OAAO,EAAE,OAAO;iBACjB,IAEA,IAAI,CAAC,WAAW,CACZ;YACN,QAAQ,CACM,CAClB,CAAA;KACF;;;;IAKD,MAAM,UAAU,GAEZ;QACF,iBAAiB,EAAE,IAAI;KACxB,CAAA;IAED,OAAO,UAAU,CAAC,EAAE,UAAU,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAA;CACxD,CAAA;AAED,MAAM,YAAY,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,IAAI;IAC/C,QACE,IAAI,CAAC,MAAM,KAAK,IAAI,CAAC,MAAM;QAC3B,IAAI,CAAC,MAAM,KAAK,IAAI,CAAC,MAAM;QAC3B,IAAI,CAAC,UAAU,KAAK,IAAI,CAAC,UAAU;QACnC,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI;QACvBC,MAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,EACnC;CACF,CAAC,CAAA;;;;AAMF,MAAa,WAAW,GAAG,CAAC,KAAsB;IAChD,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAE,GAAG,KAAK,CAAA;IACtC,OAAO,8CAAU,UAAU,GAAG,QAAQ,CAAQ,CAAA;CAC/C;;AC/ED;;;;AAGA,AAAO,IAAMC,yBAAyB,GACpC,OAAOC,MAAP,KAAkB,WAAlB,GAAgCC,eAAhC,GAAkDC,SAD7C;;ACQP;;;AAIA,MAAM,IAAI,GAAG,CAAC,KAMb;IACC,MAAM,EAAE,WAAW,EAAE,MAAM,EAAE,MAAM,EAAE,UAAU,EAAE,IAAI,EAAE,GAAG,KAAK,CAAA;IAC/D,MAAM,MAAM,GAAG,SAAS,EAAE,CAAA;IAC1B,MAAM,GAAG,GAAG,MAAM,CAAkB,IAAI,CAAC,CAAA;IACzC,MAAM,MAAM,GAAGC,MAAS,CAAC,WAAW,CAAC,IAAI,EAAE,WAAW,CAAC,CAAA;IACvD,MAAM,GAAG,GAAG,WAAW,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,CAAA;IAC7C,MAAM,QAAQ,GAAG,EAAE,CAAA;IAEnB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACtC,MAAM,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC,CAAA;QAEtB,QAAQ,CAAC,IAAI,CACX,oBAACC,YAAI,IACH,MAAM,EAAE,MAAM,IAAI,CAAC,KAAK,MAAM,CAAC,MAAM,GAAG,CAAC,EACzC,GAAG,EAAE,GAAG,GAAG,CAAC,EAAE,IAAI,CAAC,EAAE,EACrB,IAAI,EAAE,IAAI,EACV,IAAI,EAAE,IAAI,EACV,MAAM,EAAE,MAAM,EACd,UAAU,EAAE,UAAU,GACtB,CACH,CAAA;KACF;;IAGD,yBAAyB,CAAC;QACxB,IAAI,GAAG,CAAC,OAAO,EAAE;YACf,cAAc,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,OAAO,CAAC,CAAA;YACpC,eAAe,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,OAAO,CAAC,CAAA;YACtC,eAAe,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,CAAA;SACvC;aAAM;YACL,cAAc,CAAC,MAAM,CAAC,GAAG,CAAC,CAAA;YAC1B,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,CAAA;SAC7B;KACF,CAAC,CAAA;IAEF,QACE,iDAAsB,MAAM,EAAC,GAAG,EAAE,GAAG,IAClC,QAAQ,CACJ,EACR;CACF,CAAA;AAED,MAAM,YAAY,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,IAAI;IAC/C,QACE,IAAI,CAAC,MAAM,KAAK,IAAI,CAAC,MAAM;QAC3B,IAAI,CAAC,MAAM,KAAK,IAAI,CAAC,MAAM;QAC3B,IAAI,CAAC,UAAU,KAAK,IAAI,CAAC,UAAU;QACnC,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,EACxB;CACF,CAAC,CAAA;;ACtEF;;;;AAIA,AAAO,IAAMC,eAAe,GAAGC,aAAa,CAAC,KAAD,CAArC;;;;;AAMP,IAAaC,WAAW,GAAG;SAClBC,UAAU,CAACH,eAAD,CAAjB;CADK;;ACMP;;;AAIA,MAAM,OAAO,GAAG,CAAC,KAOhB;IACC,MAAM,EACJ,QAAQ,EACR,WAAW,EACX,OAAO,EACP,aAAa,GAAG,CAAC,CAAqB,KAAK,oBAAC,cAAc,oBAAK,CAAC,EAAI,EACpE,UAAU,EACV,SAAS,GACV,GAAG,KAAK,CAAA;IACT,MAAM,GAAG,GAAG,MAAM,CAAc,IAAI,CAAC,CAAA;IACrC,MAAM,MAAM,GAAG,SAAS,EAAE,CAAA;IAC1B,MAAM,QAAQ,GAAG,WAAW,EAAE,CAAA;IAC9B,MAAM,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAA;IACzC,MAAM,GAAG,GAAG,WAAW,CAAC,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,CAAA;IAEhD,IAAI,QAAQ,IACV,oBAAC,QAAQ,IACP,QAAQ,EAAE,QAAQ,EAClB,WAAW,EAAE,WAAW,EACxB,IAAI,EAAE,OAAO,EACb,aAAa,EAAE,aAAa,EAC5B,UAAU,EAAE,UAAU,EACtB,SAAS,EAAE,SAAS,GACpB,CACH,CAAA;;;IAID,MAAM,UAAU,GAOZ;QACF,iBAAiB,EAAE,SAAS;QAC5B,GAAG;KACJ,CAAA;IAED,IAAI,QAAQ,EAAE;QACZ,UAAU,CAAC,mBAAmB,CAAC,GAAG,IAAI,CAAA;KACvC;;;IAID,IAAI,CAAC,QAAQ,IAAI,MAAM,CAAC,UAAU,CAAC,MAAM,EAAE,OAAO,CAAC,EAAE;QACnD,MAAM,IAAI,GAAGrB,MAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAA;QACjC,MAAM,GAAG,GAAG,YAAY,CAAC,IAAI,CAAC,CAAA;QAE9B,IAAI,GAAG,KAAK,KAAK,EAAE;YACjB,UAAU,CAAC,GAAG,GAAG,GAAG,CAAA;SACrB;KACF;;IAGD,IAAI,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,OAAO,CAAC,EAAE;QAClC,UAAU,CAAC,iBAAiB,CAAC,GAAG,IAAI,CAAA;QAEpC,IAAI,CAAC,QAAQ,IAAI,QAAQ,EAAE;YACzB,UAAU,CAAC,eAAe,GAAG,KAAK,CAAA;SACnC;QAED,MAAM,GAAG,GAAG,QAAQ,GAAG,MAAM,GAAG,KAAK,CAAA;QACrC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,GAAGA,MAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAA;QAEpC,QAAQ,GAAG,QAAQ,GAAG,IAAI,IACxB,oBAAC,GAAG,+BAEF,KAAK,EAAE;gBACL,MAAM,EAAE,GAAG;gBACX,KAAK,EAAE,aAAa;gBACpB,OAAO,EAAE,MAAM;gBACf,QAAQ,EAAE,UAAU;aACrB;YAED,oBAACc,YAAI,IAAC,WAAW,EAAE,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,GAAI,CACjE,CACP,CAAA;QAED,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,CAAA;QAC1B,cAAc,CAAC,GAAG,CAAC,IAAI,EAAE,OAAO,CAAC,CAAA;KAClC;;IAGD,yBAAyB,CAAC;QACxB,IAAI,GAAG,CAAC,OAAO,EAAE;YACf,cAAc,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,OAAO,CAAC,CAAA;YACpC,eAAe,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,CAAC,CAAA;YACzC,eAAe,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,EAAE,OAAO,CAAC,CAAA;SAC1C;aAAM;YACL,cAAc,CAAC,MAAM,CAAC,GAAG,CAAC,CAAA;YAC1B,eAAe,CAAC,MAAM,CAAC,OAAO,CAAC,CAAA;SAChC;KACF,CAAC,CAAA;IAEF,QACE,oBAAC,eAAe,CAAC,QAAQ,IAAC,KAAK,EAAE,CAAC,CAAC,SAAS,IACzC,aAAa,CAAC,EAAE,UAAU,EAAE,QAAQ,EAAE,OAAO,EAAE,CAAC,CACxB,EAC5B;CACF,CAAA;AAED,MAAM,eAAe,GAAG,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,IAAI,EAAE,IAAI;IACrD,QACE,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,QAAQ;QAC/B,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,OAAO;QAC7B,IAAI,CAAC,aAAa,KAAK,IAAI,CAAC,aAAa;QACzC,IAAI,CAAC,UAAU,KAAK,IAAI,CAAC,UAAU;QACnC,gBAAgB,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC;SACnD,IAAI,CAAC,SAAS,KAAK,IAAI,CAAC,SAAS;aAC/B,CAAC,CAAC,IAAI,CAAC,SAAS;gBACf,CAAC,CAAC,IAAI,CAAC,SAAS;gBAChB,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EACnD;CACF,CAAC,CAAA;;;;AAMF,MAAa,cAAc,GAAG,CAAC,KAAyB;IACtD,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAE,OAAO,EAAE,GAAG,KAAK,CAAA;IAC/C,MAAM,MAAM,GAAG,SAAS,EAAE,CAAA;IAC1B,MAAM,GAAG,GAAG,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,MAAM,GAAG,KAAK,CAAA;IACrD,QACE,oBAAC,GAAG,oBAAK,UAAU,IAAE,KAAK,EAAE,EAAE,QAAQ,EAAE,UAAU,EAAE,KACjD,QAAQ,CACL,EACP;CACF,CAAA;;;;;;;;AAUD,MAAM,gBAAgB,GAAG,CAAC,IAAa,EAAE,OAAgB;IACvD,IAAI,IAAI,CAAC,MAAM,KAAK,OAAO,CAAC,MAAM,EAAE;QAClC,OAAO,KAAK,CAAA;KACb;IAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACpC,MAAM,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,CAAA;QACrB,MAAM,KAAK,GAAG,OAAO,CAAC,CAAC,CAAC,CAAA;QAExB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE;YAC/B,OAAO,KAAK,CAAA;SACb;KACF;IAED,OAAO,IAAI,CAAA;CACZ,CAAA;;ACpLD;;;AAIA,AAAO,MAAM,aAAa,GAAG,aAAa,CAAqB,IAAI,CAAC,CAAA;;;;AAMpE,MAAa,SAAS,GAAG;IACvB,MAAM,MAAM,GAAG,UAAU,CAAC,aAAa,CAAC,CAAA;IAExC,IAAI,CAAC,MAAM,EAAE;QACX,MAAM,IAAI,KAAK,CACb,6EAA6E,CAC9E,CAAA;KACF;IAED,OAAO,MAAM,CAAA;CACd;;ACdD;;;AAIA,MAAM,QAAQ,GAAG,CAAC,KAOjB;IACC,MAAM,EACJ,QAAQ,EACR,WAAW,EACX,IAAI,EACJ,aAAa,EACb,UAAU,EACV,SAAS,GACV,GAAG,KAAK,CAAA;IACT,MAAM,MAAM,GAAG,SAAS,EAAE,CAAA;IAC1B,MAAM,IAAI,GAAG,WAAW,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI,CAAC,CAAA;IAC/C,MAAM,QAAQ,GAAG,EAAE,CAAA;IACnB,MAAM,WAAW,GACfW,SAAO,CAAC,SAAS,CAAC,IAAI,CAAC;QACvB,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC;QACtB,MAAM,CAAC,UAAU,CAAC,MAAM,EAAE,IAAI,CAAC,CAAA;IAEjC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QAC7C,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;QACxB,MAAM,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAe,CAAA;QACxC,MAAM,GAAG,GAAG,WAAW,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,CAAA;QAC1C,MAAM,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC,CAAA;QACrC,MAAM,GAAG,GAAG,SAAS,IAAI,KAAK,CAAC,YAAY,CAAC,KAAK,EAAE,SAAS,CAAC,CAAA;QAC7D,MAAM,EAAE,GAAG,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;QAE3B,KAAK,MAAM,GAAG,IAAI,WAAW,EAAE;YAC7B,MAAM,CAAC,GAAG,KAAK,CAAC,YAAY,CAAC,GAAG,EAAE,KAAK,CAAC,CAAA;YAExC,IAAI,CAAC,EAAE;gBACL,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;aACX;SACF;QAED,IAAIA,SAAO,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE;YACxB,QAAQ,CAAC,IAAI,CACX,oBAACC,eAAgB,IACf,QAAQ,EAAE,QAAQ,EAClB,WAAW,EAAE,EAAE,EACf,OAAO,EAAE,CAAC,EACV,GAAG,EAAE,GAAG,CAAC,EAAE,EACX,aAAa,EAAE,aAAa,EAC5B,UAAU,EAAE,UAAU,EACtB,SAAS,EAAE,GAAG,GACd,CACH,CAAA;SACF;aAAM;YACL,QAAQ,CAAC,IAAI,CACX,oBAACC,YAAa,IACZ,WAAW,EAAE,EAAE,EACf,GAAG,EAAE,GAAG,CAAC,EAAE,EACX,MAAM,EAAE,WAAW,IAAI,CAAC,KAAK,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EACrD,MAAM,EAAE,IAAI,EACZ,UAAU,EAAE,UAAU,EACtB,IAAI,EAAE,CAAC,GACP,CACH,CAAA;SACF;QAED,aAAa,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;QACvB,cAAc,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,CAAA;KAC5B;IAED,OAAO,oBAAC,KAAK,CAAC,QAAQ,QAAE,QAAQ,CAAkB,CAAA;CACnD,CAAA;;ACpFM,IAAMC,MAAM,GACjB,OAAOC,SAAP,KAAqB,WAArB,IACA,OAAOb,MAAP,KAAkB,WADlB,IAEA,mBAAmBc,IAAnB,CAAwBD,SAAS,CAACE,SAAlC,CAFA,IAGA,CAACf,MAAM,CAACgB,QAJH;AAMP,AAAO,IAAMC,QAAQ,GACnB,OAAOJ,SAAP,KAAqB,WAArB,IAAoC,WAAWC,IAAX,CAAgBD,SAAS,CAACE,SAA1B,CAD/B;AAGP,AAAO,IAAMG,UAAU,GACrB,OAAOL,SAAP,KAAqB,WAArB,IACA,mCAAmCC,IAAnC,CAAwCD,SAAS,CAACE,SAAlD,CAFK;AAIP,AAAO,IAAMI,SAAS,GACpB,OAAON,SAAP,KAAqB,WAArB,IACA,2BAA2BC,IAA3B,CAAgCD,SAAS,CAACE,SAA1C,CAFK;;ACVP;;;;AAIA,IAAMK,OAAO,GAAG;EACdC,IAAI,EAAE,OADQ;EAEdC,OAAO,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,OAAjB,EAA0B,IAA1B,EAAgC,WAAhC,EAA6C,OAA7C,CAFK;EAGdC,YAAY,EAAE,MAHA;EAIdC,WAAW,EAAE,OAJC;EAKdC,gBAAgB,EAAE,WALJ;EAMdC,eAAe,EAAE,YANH;EAOdC,cAAc,EAAE,kBAPF;EAQdC,aAAa,EAAE,eARD;EASdC,cAAc,EAAE,YATF;EAUdC,aAAa,EAAE,aAVD;EAWdC,MAAM,EAAE,OAXM;EAYdC,UAAU,EAAE,cAZE;EAadC,IAAI,EAAE;CAbR;AAgBA,IAAMC,aAAa,GAAG;EACpBC,gBAAgB,EAAE,QADE;EAEpBC,eAAe,EAAE,UAFG;EAGpBX,gBAAgB,EAAE,UAHE;EAIpBC,eAAe,EAAE,WAJG;EAKpBC,cAAc,EAAE,CAAC,gBAAD,EAAmB,QAAnB,CALI;EAMpBC,aAAa,EAAE,CAAC,aAAD,EAAgB,QAAhB,CANK;EAOpBS,kBAAkB,EAAE,sBAPA;EAQpBC,iBAAiB,EAAE,CAAC,mBAAD,EAAsB,QAAtB,CARC;EASpBC,kBAAkB,EAAE,sBATA;EAUpBC,iBAAiB,EAAE,mBAVC;EAWpBC,kBAAkB,EAAE,cAXA;EAYpBC,iBAAiB,EAAE,gBAZC;EAapBC,IAAI,EAAE,aAbc;EAcpBC,kBAAkB,EAAE;CAdtB;AAiBA,IAAMC,eAAe,GAAG;EACtBN,kBAAkB,EAAE,uBADE;EAEtBC,iBAAiB,EAAE,oBAFG;EAGtBG,IAAI,EAAE,CAAC,QAAD,EAAW,cAAX;CAHR;;;;;AAUA,IAAMG,MAAM,GAAIC,GAAD;MACPC,OAAO,GAAG5B,OAAO,CAAC2B,GAAD,CAAvB;MACME,KAAK,GAAGf,aAAa,CAACa,GAAD,CAA3B;MACMG,OAAO,GAAGL,eAAe,CAACE,GAAD,CAA/B;MACMI,SAAS,GAAGH,OAAO,IAAII,WAAW,CAACJ,OAAD,CAAxC;MACMK,OAAO,GAAGJ,KAAK,IAAIG,WAAW,CAACH,KAAD,CAApC;MACMK,SAAS,GAAGJ,OAAO,IAAIE,WAAW,CAACF,OAAD,CAAxC;SAEQK,KAAD;QACDJ,SAAS,IAAIA,SAAS,CAACI,KAAD,CAA1B,EAAmC,OAAO,IAAP;QAC/BtC,QAAQ,IAAIoC,OAAZ,IAAuBA,OAAO,CAACE,KAAD,CAAlC,EAA2C,OAAO,IAAP;QACvC,CAACtC,QAAD,IAAaqC,SAAb,IAA0BA,SAAS,CAACC,KAAD,CAAvC,EAAgD,OAAO,IAAP;WACzC,KAAP;GAJF;CARF;;;;;;AAoBA,cAAe;EACbC,MAAM,EAAEV,MAAM,CAAC,MAAD,CADD;EAEbW,SAAS,EAAEX,MAAM,CAAC,SAAD,CAFJ;EAGbY,cAAc,EAAEZ,MAAM,CAAC,cAAD,CAHT;EAIba,aAAa,EAAEb,MAAM,CAAC,aAAD,CAJR;EAKbc,gBAAgB,EAAEd,MAAM,CAAC,gBAAD,CALX;EAMbe,eAAe,EAAEf,MAAM,CAAC,eAAD,CANV;EAObgB,oBAAoB,EAAEhB,MAAM,CAAC,oBAAD,CAPf;EAQbiB,mBAAmB,EAAEjB,MAAM,CAAC,mBAAD,CARd;EASbkB,oBAAoB,EAAElB,MAAM,CAAC,oBAAD,CATf;EAUbmB,mBAAmB,EAAEnB,MAAM,CAAC,mBAAD,CAVd;EAWboB,gBAAgB,EAAEpB,MAAM,CAAC,gBAAD,CAXX;EAYbqB,eAAe,EAAErB,MAAM,CAAC,eAAD,CAZV;EAabsB,oBAAoB,EAAEtB,MAAM,CAAC,oBAAD,CAbf;EAcbuB,mBAAmB,EAAEvB,MAAM,CAAC,mBAAD,CAdd;EAebwB,QAAQ,EAAExB,MAAM,CAAC,QAAD,CAfH;EAgBbyB,kBAAkB,EAAEzB,MAAM,CAAC,kBAAD,CAhBb;EAiBb0B,iBAAiB,EAAE1B,MAAM,CAAC,iBAAD,CAjBZ;EAkBb2B,kBAAkB,EAAE3B,MAAM,CAAC,kBAAD,CAlBb;EAmBb4B,iBAAiB,EAAE5B,MAAM,CAAC,iBAAD,CAnBZ;EAoBb6B,MAAM,EAAE7B,MAAM,CAAC,MAAD,CApBD;EAqBb8B,YAAY,EAAE9B,MAAM,CAAC,YAAD,CArBP;EAsBb+B,oBAAoB,EAAE/B,MAAM,CAAC,oBAAD,CAtBf;EAuBbgC,MAAM,EAAEhC,MAAM,CAAC,MAAD;CAvBhB;;ACpEA;;;;AAIA,AAAO,IAAMiC,eAAe,GAAGzE,aAAa,CAAC,KAAD,CAArC;;;;;AAMP,IAAa0E,WAAW,GAAG;SAClBxE,UAAU,CAACuE,eAAD,CAAjB;CADK;;ACRP;;;;AAKA,AAAO,MAAM,YAAY,GAAG,aAAa,CAAuB,IAAI,CAAC,CAAA;;;;AAMrE,MAAa,QAAQ,GAAG;IACtB,MAAM,OAAO,GAAG,UAAU,CAAC,YAAY,CAAC,CAAA;IAExC,IAAI,CAAC,OAAO,EAAE;QACZ,MAAM,IAAI,KAAK,CACb,oFAAoF,CACrF,CAAA;KACF;IAED,MAAM,CAAC,MAAM,CAAC,GAAG,OAAO,CAAA;IACxB,OAAO,MAAM,CAAA;CACd;;AC1BD;;;AAIA,AAsBA;;;;AAIA,AAAO,IAAME,YAAY,GAAIC,KAAD;SACnBC,SAAS,CAACD,KAAD,CAAT,IAAoBA,KAAK,CAACE,QAAN,KAAmB,CAA9C;CADK;;;;;AAQP,AAAO,IAAMC,YAAY,GAAIH,KAAD;SACnBC,SAAS,CAACD,KAAD,CAAT,IAAoBA,KAAK,CAACE,QAAN,KAAmB,CAA9C;CADK;;;;;AAQP,AAAO,IAAMD,SAAS,GAAID,KAAD;SAChBA,KAAK,YAAYlG,IAAxB;CADK;;;;;AAQP,AAAO,IAAMsG,SAAS,GAAIJ,KAAD;SAChBC,SAAS,CAACD,KAAD,CAAT,IAAoBA,KAAK,CAACE,QAAN,KAAmB,CAA9C;CADK;;;;;AAQP,AAAO,IAAMG,iBAAiB,GAAIC,QAAD;MAC3B,CAACC,IAAD,EAAOC,MAAP,IAAiBF,QAArB;;;MAIIH,YAAY,CAACI,IAAD,CAAZ,IAAsBA,IAAI,CAACE,UAAL,CAAgBC,MAA1C,EAAkD;QAC1CC,MAAM,GAAGH,MAAM,KAAKD,IAAI,CAACE,UAAL,CAAgBC,MAA1C;QACME,SAAS,GAAGD,MAAM,GAAG,UAAH,GAAgB,SAAxC;QACME,KAAK,GAAGF,MAAM,GAAGH,MAAM,GAAG,CAAZ,GAAgBA,MAApC;IACAD,IAAI,GAAGO,gBAAgB,CAACP,IAAD,EAAOM,KAAP,EAAcD,SAAd,CAAvB,CAJgD;;;WAQzCT,YAAY,CAACI,IAAD,CAAZ,IAAsBA,IAAI,CAACE,UAAL,CAAgBC,MAA7C,EAAqD;UAC7CK,CAAC,GAAGJ,MAAM,GAAGJ,IAAI,CAACE,UAAL,CAAgBC,MAAhB,GAAyB,CAA5B,GAAgC,CAAhD;MACAH,IAAI,GAAGO,gBAAgB,CAACP,IAAD,EAAOQ,CAAP,EAAUH,SAAV,CAAvB;KAV8C;;;IAchDJ,MAAM,GAAGG,MAAM,IAAIJ,IAAI,CAACS,WAAL,IAAoB,IAA9B,GAAqCT,IAAI,CAACS,WAAL,CAAiBN,MAAtD,GAA+D,CAAxE;;;;SAIK,CAACH,IAAD,EAAOC,MAAP,CAAP;CAvBK;;;;;;AA+BP,AAAO,IAAMM,gBAAgB,GAAG,CAC9BG,MAD8B,EAE9BJ,KAF8B,EAG9BD,SAH8B;MAKxB;IAAEH;MAAeQ,MAAvB;MACIC,KAAK,GAAGT,UAAU,CAACI,KAAD,CAAtB;MACIE,CAAC,GAAGF,KAAR;MACIM,YAAY,GAAG,KAAnB;MACIC,aAAa,GAAG,KAApB;;;SAKErB,YAAY,CAACmB,KAAD,CAAZ,IACCf,YAAY,CAACe,KAAD,CAAZ,IAAuBA,KAAK,CAACT,UAAN,CAAiBC,MAAjB,KAA4B,CADpD,IAECP,YAAY,CAACe,KAAD,CAAZ,IAAuBA,KAAK,CAACG,YAAN,CAAmB,iBAAnB,MAA0C,OAHpE,EAIE;QACIF,YAAY,IAAIC,aAApB,EAAmC;;;;QAI/BL,CAAC,IAAIN,UAAU,CAACC,MAApB,EAA4B;MAC1BS,YAAY,GAAG,IAAf;MACAJ,CAAC,GAAGF,KAAK,GAAG,CAAZ;MACAD,SAAS,GAAG,UAAZ;;;;QAIEG,CAAC,GAAG,CAAR,EAAW;MACTK,aAAa,GAAG,IAAhB;MACAL,CAAC,GAAGF,KAAK,GAAG,CAAZ;MACAD,SAAS,GAAG,SAAZ;;;;IAIFM,KAAK,GAAGT,UAAU,CAACM,CAAD,CAAlB;IACAA,CAAC,IAAIH,SAAS,KAAK,SAAd,GAA0B,CAA1B,GAA8B,CAAC,CAApC;;;SAGKM,KAAP;CAxCK;;ACVP;;;AAIA,MAAa,QAAQ,GAAG,CAAC,KAAoB;IAC3C,MAAM,EACJ,SAAS,EACT,QAAQ,GAAG,eAAe,EAC1B,gBAAgB,EAAE,qBAAqB,EACvC,WAAW,EACX,QAAQ,GAAG,KAAK,EAChB,aAAa,EACb,UAAU,EACV,KAAK,GAAG,EAAE,EACV,EAAE,EAAE,SAAS,GAAG,KAAK,EACrB,GAAG,UAAU,EACd,GAAG,KAAK,CAAA;IACT,MAAM,MAAM,GAAG,QAAQ,EAAE,CAAA;IACzB,MAAM,GAAG,GAAG,MAAM,CAAiB,IAAI,CAAC,CAAA;;IAGxC,YAAY,CAAC,GAAG,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAA;;IAGlC,MAAM,KAAK,GAAG,OAAO,CACnB,OAAO;QACL,WAAW,EAAE,KAAK;QAClB,mBAAmB,EAAE,KAAK;QAC1B,aAAa,EAAE,IAAyB;KACzC,CAAC,EACF,EAAE,CACH,CAAA;;IAGD,yBAAyB,CAAC;QACxB,IAAI,GAAG,CAAC,OAAO,EAAE;YACf,iBAAiB,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,OAAO,CAAC,CAAA;YAC1C,eAAe,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,OAAO,CAAC,CAAA;YACxC,eAAe,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,EAAE,MAAM,CAAC,CAAA;SACzC;aAAM;YACL,eAAe,CAAC,MAAM,CAAC,MAAM,CAAC,CAAA;SAC/B;KACF,CAAC,CAAA;;;;;;IAOF,yBAAyB,CAAC;QACxB,MAAM,CAAC,QAAQ,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,oBAAoB,CAAC,CAAA;QAEzE,OAAO;YACL,MAAM,CAAC,QAAQ,CAAC,mBAAmB,CACjC,iBAAiB,EACjB,oBAAoB,CACrB,CAAA;SACF,CAAA;KACF,EAAE,EAAE,CAAC,CAAA;;;;;IAMN,yBAAyB,CAAC;QACxB,IAAI,GAAG,CAAC,OAAO,EAAE;;YAEf,GAAG,CAAC,OAAO,CAAC,gBAAgB,CAAC,aAAa,EAAE,gBAAgB,CAAC,CAAA;SAC9D;QAED,OAAO;YACL,IAAI,GAAG,CAAC,OAAO,EAAE;;gBAEf,GAAG,CAAC,OAAO,CAAC,mBAAmB,CAAC,aAAa,EAAE,gBAAgB,CAAC,CAAA;aACjE;SACF,CAAA;KACF,EAAE,EAAE,CAAC,CAAA;;IAGN,yBAAyB,CAAC;QACxB,MAAM,EAAE,SAAS,EAAE,GAAG,MAAM,CAAA;QAC5B,MAAM,YAAY,GAAG,MAAM,CAAC,YAAY,EAAE,CAAA;QAE1C,IAAI,KAAK,CAAC,WAAW,IAAI,CAAC,YAAY,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACxE,OAAM;SACP;QAED,MAAM,eAAe,GAAG,YAAY,CAAC,IAAI,KAAK,MAAM,CAAA;;QAGpD,IAAI,CAAC,SAAS,IAAI,CAAC,eAAe,EAAE;YAClC,OAAM;SACP;QAED,MAAM,WAAW,GAAG,SAAS,IAAI,WAAW,CAAC,UAAU,CAAC,MAAM,EAAE,SAAS,CAAC,CAAA;;QAG1E,IACE,eAAe;YACf,WAAW;YACX,YAAY,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,WAAW,CAAC,EACrD;YACA,OAAM;SACP;;QAGD,MAAM,EAAE,GAAG,WAAW,CAAC,SAAS,CAAC,MAAM,EAAE,MAAM,CAAC,CAAA;QAChD,KAAK,CAAC,mBAAmB,GAAG,IAAI,CAAA;QAChC,YAAY,CAAC,eAAe,EAAE,CAAA;QAE9B,IAAI,WAAW,EAAE;YACf,YAAY,CAAC,QAAQ,CAAC,WAAY,CAAC,CAAA;YACnC,MAAM,MAAM,GAAG,WAAW,CAAC,cAAc,CAAC,aAAc,CAAA;YACxD,cAAc,CAAC,MAAM,EAAE,EAAE,UAAU,EAAE,WAAW,EAAE,CAAC,CAAA;SACpD;QAED,UAAU,CAAC;;;YAGT,IAAI,WAAW,IAAI,UAAU,EAAE;gBAC7B,EAAE,CAAC,KAAK,EAAE,CAAA;aACX;YAED,KAAK,CAAC,mBAAmB,GAAG,KAAK,CAAA;SAClC,CAAC,CAAA;KACH,CAAC,CAAA;;;IAIF,SAAS,CAAC;QACR,IAAI,GAAG,CAAC,OAAO,IAAI,SAAS,EAAE;YAC5B,GAAG,CAAC,OAAO,CAAC,KAAK,EAAE,CAAA;SACpB;KACF,EAAE,CAAC,SAAS,CAAC,CAAC,CAAA;;;;;IAMf,MAAM,gBAAgB,GAAG,WAAW,CAClC,CACE,KAMC;QAED,IACE,CAAC,QAAQ;YACT,iBAAiB,CAAC,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC;YACvC,CAAC,iBAAiB,CAAC,KAAK,EAAE,qBAAqB,CAAC,EAChD;YACA,MAAM,EAAE,SAAS,EAAE,GAAG,MAAM,CAAA;YAC5B,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,KAAK,CAAA;YACjC,MAAM,IAAI,GAAG,KAAK,CAAC,YAAY,IAAI,KAAK,CAAC,IAAI,IAAI,SAAS,CAAA;;;YAI1D,IACE,IAAI,KAAK,uBAAuB;gBAChC,IAAI,KAAK,uBAAuB,EAChC;gBACA,OAAM;aACP;YAED,KAAK,CAAC,cAAc,EAAE,CAAA;;;;YAKtB,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,EAAE;gBAC7D,MAAM,CAAC,WAAW,CAAC,GAAG,KAAK,CAAC,eAAe,EAAE,CAAA;gBAE7C,IAAI,WAAW,EAAE;oBACf,MAAM,KAAK,GAAG,WAAW,CAAC,YAAY,CAAC,MAAM,EAAE,WAAW,CAAC,CAAA;oBAE3D,IAAI,CAAC,SAAS,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,EAAE,KAAK,CAAC,EAAE;wBACjD,UAAU,CAAC,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;qBACjC;iBACF;aACF;;;YAID,IACE,SAAS;gBACT,KAAK,CAAC,UAAU,CAAC,SAAS,CAAC;gBAC3B,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,EACzB;gBACA,MAAM,CAAC,cAAc,CAAC,MAAM,CAAC,CAAA;gBAC7B,OAAM;aACP;YAED,QAAQ,IAAI;gBACV,KAAK,qBAAqB,CAAC;gBAC3B,KAAK,aAAa,CAAC;gBACnB,KAAK,cAAc,EAAE;oBACnB,MAAM,CAAC,cAAc,CAAC,MAAM,CAAC,CAAA;oBAC7B,MAAK;iBACN;gBAED,KAAK,eAAe,CAAC;gBACrB,KAAK,sBAAsB,EAAE;oBAC3B,MAAM,CAAC,aAAa,CAAC,MAAM,CAAC,CAAA;oBAC5B,MAAK;iBACN;gBAED,KAAK,uBAAuB,EAAE;oBAC5B,MAAM,CAAC,cAAc,CAAC,MAAM,CAAC,CAAA;oBAC7B,MAAK;iBACN;gBAED,KAAK,sBAAsB,EAAE;oBAC3B,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,CAAA;oBAC/C,MAAM,CAAC,aAAa,CAAC,MAAM,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,CAAA;oBAC9C,MAAK;iBACN;gBAED,KAAK,wBAAwB,EAAE;oBAC7B,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,CAAA;oBAChD,MAAK;iBACN;gBAED,KAAK,wBAAwB,EAAE;oBAC7B,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,CAAA;oBAC/C,MAAK;iBACN;gBAED,KAAK,uBAAuB,EAAE;oBAC5B,MAAM,CAAC,aAAa,CAAC,MAAM,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,CAAA;oBAC/C,MAAK;iBACN;gBAED,KAAK,uBAAuB,EAAE;oBAC5B,MAAM,CAAC,aAAa,CAAC,MAAM,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,CAAA;oBAC9C,MAAK;iBACN;gBAED,KAAK,oBAAoB,EAAE;oBACzB,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,CAAA;oBAC/C,MAAK;iBACN;gBAED,KAAK,mBAAmB,EAAE;oBACxB,MAAM,CAAC,aAAa,CAAC,MAAM,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,CAAA;oBAC9C,MAAK;iBACN;gBAED,KAAK,iBAAiB,CAAC;gBACvB,KAAK,iBAAiB,EAAE;oBACtB,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,CAAA;oBAC1B,MAAK;iBACN;gBAED,KAAK,uBAAuB,CAAC;gBAC7B,KAAK,gBAAgB,CAAC;gBACtB,KAAK,iBAAiB,CAAC;gBACvB,KAAK,gBAAgB,CAAC;gBACtB,KAAK,uBAAuB,CAAC;gBAC7B,KAAK,YAAY,EAAE;oBACjB,IAAI,IAAI,YAAY,YAAY,EAAE;wBAChC,WAAW,CAAC,UAAU,CAAC,MAAM,EAAE,IAAI,CAAC,CAAA;qBACrC;yBAAM,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;wBACnC,MAAM,CAAC,UAAU,CAAC,MAAM,EAAE,IAAI,CAAC,CAAA;qBAChC;oBAED,MAAK;iBACN;aACF;SACF;KACF,EACD,EAAE,CACH,CAAA;;;;;;IAOD,MAAM,oBAAoB,GAAG,WAAW,CACtC,QAAQ,CAAC;QACP,IAAI,CAAC,QAAQ,IAAI,CAAC,KAAK,CAAC,WAAW,IAAI,CAAC,KAAK,CAAC,mBAAmB,EAAE;YACjE,MAAM,EAAE,aAAa,EAAE,GAAG,MAAM,CAAC,QAAQ,CAAA;YACzC,MAAM,EAAE,GAAG,WAAW,CAAC,SAAS,CAAC,MAAM,EAAE,MAAM,CAAC,CAAA;YAChD,MAAM,YAAY,GAAG,MAAM,CAAC,YAAY,EAAE,CAAA;YAC1C,MAAM,QAAQ,GACZ,YAAY;gBACZ,YAAY,CAAC,UAAU,GAAG,CAAC;gBAC3B,YAAY,CAAC,UAAU,CAAC,CAAC,CAAC,CAAA;YAE5B,IAAI,aAAa,KAAK,EAAE,EAAE;gBACxB,KAAK,CAAC,aAAa,GAAG,aAAa,CAAA;gBACnC,UAAU,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,CAAA;aAC7B;iBAAM;gBACL,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,CAAA;aAC1B;YAED,IACE,QAAQ;gBACR,iBAAiB,CAAC,MAAM,EAAE,QAAQ,CAAC,cAAc,CAAC;gBAClD,iBAAiB,CAAC,MAAM,EAAE,QAAQ,CAAC,YAAY,CAAC,EAChD;gBACA,MAAM,KAAK,GAAG,WAAW,CAAC,YAAY,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAA;gBACxD,UAAU,CAAC,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;aACjC;iBAAM;gBACL,UAAU,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAA;aAC5B;SACF;KACF,EAAE,GAAG,CAAC,EACP,EAAE,CACH,CAAA;IAED,MAAM,WAAW,GAAG,QAAQ,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,CAAA;IAE1C,IACE,WAAW;QACX,MAAM,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC;QAC5B,KAAK,CAAC,IAAI,CAACpH,MAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC;QAC3CA,MAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,EAC1B;QACA,MAAM,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,EAAE,CAAC,CAAA;QACtC,WAAW,CAAC,IAAI,CAAC;YACf,CAAC,kBAAkB,GAAG,IAAI;YAC1B,WAAW;YACX,MAAM,EAAE,KAAK;YACb,KAAK,EAAE,KAAK;SACb,CAAC,CAAA;KACH;IAED,QACE,oBAAC,eAAe,CAAC,QAAQ,IAAC,KAAK,EAAE,QAAQ;QACvC,oBAAC,SAAS;;;;wCAII,KAAK,EACjB,IAAI,EAAE,QAAQ,GAAG,SAAS,GAAG,SAAS,IAClC,UAAU;;;YAGd,UAAU,EAAE,UAAU,GAAG,SAAS,GAAG,UAAU,CAAC,UAAU,EAC1D,WAAW,EAAE,UAAU,GAAG,SAAS,GAAG,UAAU,CAAC,WAAW,EAC5D,cAAc,EAAE,UAAU,GAAG,SAAS,GAAG,UAAU,CAAC,cAAc,gDAElD,OAAO,EACvB,eAAe,EAAE,QAAQ,GAAG,SAAS,GAAG,IAAI,EAC5C,8BAA8B,QAC9B,GAAG,EAAE,GAAG,EACR,KAAK,EAAE;;gBAEL,OAAO,EAAE,MAAM;;gBAEf,UAAU,EAAE,UAAU;;gBAEtB,QAAQ,EAAE,YAAY;;gBAEtB,GAAG,KAAK;aACT,EACD,aAAa,EAAE,WAAW,CACxB,CAAC,KAA2B;;;;gBAI1B,IAAI,UAAU,IAAI,CAAC,QAAQ,EAAE;oBAC3B,KAAK,CAAC,cAAc,EAAE,CAAA;oBACtB,MAAM,IAAI,GAAI,KAAa,CAAC,IAAc,CAAA;oBAC1C,MAAM,CAAC,UAAU,CAAC,MAAM,EAAE,IAAI,CAAC,CAAA;iBAChC;aACF,EACD,CAAC,QAAQ,CAAC,CACX,EACD,MAAM,EAAE,WAAW,CACjB,CAAC,KAAuC;gBACtC,IACE,QAAQ;oBACR,KAAK,CAAC,mBAAmB;oBACzB,CAAC,iBAAiB,CAAC,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC;oBACxC,cAAc,CAAC,KAAK,EAAE,UAAU,CAAC,MAAM,CAAC,EACxC;oBACA,OAAM;iBACP;;;;;gBAMD,IAAI,KAAK,CAAC,aAAa,KAAK,MAAM,CAAC,QAAQ,CAAC,aAAa,EAAE;oBACzD,OAAM;iBACP;gBAED,MAAM,EAAE,aAAa,EAAE,GAAG,KAAK,CAAA;gBAC/B,MAAM,EAAE,GAAG,WAAW,CAAC,SAAS,CAAC,MAAM,EAAE,MAAM,CAAC,CAAA;;;;gBAKhD,IAAI,aAAa,KAAK,EAAE,EAAE;oBACxB,OAAM;iBACP;;;gBAID,IACE,YAAY,CAAC,aAAa,CAAC;oBAC3B,aAAa,CAAC,YAAY,CAAC,mBAAmB,CAAC,EAC/C;oBACA,OAAM;iBACP;;;;gBAKD,IACE,aAAa,IAAI,IAAI;oBACrB,SAAS,CAAC,aAAa,CAAC;oBACxB,WAAW,CAAC,UAAU,CAAC,MAAM,EAAE,aAAa,CAAC,EAC7C;oBACA,MAAM,IAAI,GAAG,WAAW,CAAC,WAAW,CAAC,MAAM,EAAE,aAAa,CAAC,CAAA;oBAE3D,IAAIyB,SAAO,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;wBACnD,OAAM;qBACP;iBACF;gBAED,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,CAAA;aAC1B,EACD,CAAC,QAAQ,EAAE,UAAU,CAAC,MAAM,CAAC,CAC9B,EACD,OAAO,EAAE,WAAW,CAClB,CAAC,KAAuC;gBACtC,IACE,CAAC,QAAQ;oBACT,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC;oBAC/B,CAAC,cAAc,CAAC,KAAK,EAAE,UAAU,CAAC,OAAO,CAAC;oBAC1C,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,EACvB;oBACA,MAAM,IAAI,GAAG,WAAW,CAAC,WAAW,CAAC,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC,CAAA;oBAC1D,MAAM,IAAI,GAAG,WAAW,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI,CAAC,CAAA;oBAC/C,MAAM,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,CAAA;oBAExC,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE;wBACtC,MAAM,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;wBACzC,UAAU,CAAC,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;qBACjC;iBACF;aACF,EACD,CAAC,QAAQ,EAAE,UAAU,CAAC,OAAO,CAAC,CAC/B,EACD,gBAAgB,EAAE,WAAW,CAC3B,CAAC,KAA6C;gBAC5C,IACE,iBAAiB,CAAC,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC;oBACvC,CAAC,cAAc,CAAC,KAAK,EAAE,UAAU,CAAC,gBAAgB,CAAC,EACnD;oBACA,KAAK,CAAC,WAAW,GAAG,KAAK,CAAA;;;;;oBAMzB,IAAI,CAAC,SAAS,IAAI,CAAC,UAAU,IAAI,KAAK,CAAC,IAAI,EAAE;wBAC3C,MAAM,CAAC,UAAU,CAAC,MAAM,EAAE,KAAK,CAAC,IAAI,CAAC,CAAA;qBACtC;iBACF;aACF,EACD,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAC9B,EACD,kBAAkB,EAAE,WAAW,CAC7B,CAAC,KAA6C;gBAC5C,IACE,iBAAiB,CAAC,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC;oBACvC,CAAC,cAAc,CAAC,KAAK,EAAE,UAAU,CAAC,kBAAkB,CAAC,EACrD;oBACA,KAAK,CAAC,WAAW,GAAG,IAAI,CAAA;iBACzB;aACF,EACD,CAAC,UAAU,CAAC,kBAAkB,CAAC,CAChC,EACD,MAAM,EAAE,WAAW,CACjB,CAAC,KAA2C;gBAC1C,IACE,iBAAiB,CAAC,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC;oBACvC,CAAC,cAAc,CAAC,KAAK,EAAE,UAAU,CAAC,MAAM,CAAC,EACzC;oBACA,KAAK,CAAC,cAAc,EAAE,CAAA;oBACtB,eAAe,CAAC,KAAK,CAAC,aAAa,EAAE,MAAM,CAAC,CAAA;iBAC7C;aACF,EACD,CAAC,UAAU,CAAC,MAAM,CAAC,CACpB,EACD,KAAK,EAAE,WAAW,CAChB,CAAC,KAA2C;gBAC1C,IACE,CAAC,QAAQ;oBACT,iBAAiB,CAAC,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC;oBACvC,CAAC,cAAc,CAAC,KAAK,EAAE,UAAU,CAAC,KAAK,CAAC,EACxC;oBACA,KAAK,CAAC,cAAc,EAAE,CAAA;oBACtB,eAAe,CAAC,KAAK,CAAC,aAAa,EAAE,MAAM,CAAC,CAAA;oBAC5C,MAAM,EAAE,SAAS,EAAE,GAAG,MAAM,CAAA;oBAE5B,IAAI,SAAS,IAAI,KAAK,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE;wBAC5C,MAAM,CAAC,cAAc,CAAC,MAAM,CAAC,CAAA;qBAC9B;iBACF;aACF,EACD,CAAC,QAAQ,EAAE,UAAU,CAAC,KAAK,CAAC,CAC7B,EACD,UAAU,EAAE,WAAW,CACrB,CAAC,KAAsC;gBACrC,IACE,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC;oBAC/B,CAAC,cAAc,CAAC,KAAK,EAAE,UAAU,CAAC,UAAU,CAAC,EAC7C;;;;oBAIA,MAAM,IAAI,GAAG,WAAW,CAAC,WAAW,CAAC,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC,CAAA;oBAE1D,IAAI,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,EAAE;wBAC/B,KAAK,CAAC,cAAc,EAAE,CAAA;qBACvB;iBACF;aACF,EACD,CAAC,UAAU,CAAC,UAAU,CAAC,CACxB,EACD,WAAW,EAAE,WAAW,CACtB,CAAC,KAAsC;gBACrC,IACE,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC;oBAC/B,CAAC,cAAc,CAAC,KAAK,EAAE,UAAU,CAAC,WAAW,CAAC,EAC9C;oBACA,MAAM,IAAI,GAAG,WAAW,CAAC,WAAW,CAAC,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC,CAAA;oBAC1D,MAAM,IAAI,GAAG,WAAW,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI,CAAC,CAAA;oBAC/C,MAAM,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,CAAC,CAAA;;;oBAInD,IAAI,SAAS,EAAE;wBACb,MAAM,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,CAAA;wBACxC,UAAU,CAAC,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;qBACjC;oBAED,eAAe,CAAC,KAAK,CAAC,YAAY,EAAE,MAAM,CAAC,CAAA;iBAC5C;aACF,EACD,CAAC,UAAU,CAAC,WAAW,CAAC,CACzB,EACD,MAAM,EAAE,WAAW,CACjB,CAAC,KAAsC;gBACrC,IACE,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC;oBAC/B,CAAC,QAAQ;oBACT,CAAC,cAAc,CAAC,KAAK,EAAE,UAAU,CAAC,MAAM,CAAC,EACzC;;;;;oBAKA,IACE,UAAU;yBACT,CAAC,SAAS,IAAI,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,EACnD;wBACA,KAAK,CAAC,cAAc,EAAE,CAAA;wBACtB,MAAM,KAAK,GAAG,WAAW,CAAC,cAAc,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;wBACvD,MAAM,IAAI,GAAG,KAAK,CAAC,YAAY,CAAA;wBAC/B,UAAU,CAAC,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;wBAChC,WAAW,CAAC,UAAU,CAAC,MAAM,EAAE,IAAI,CAAC,CAAA;qBACrC;iBACF;aACF,EACD,CAAC,QAAQ,EAAE,UAAU,CAAC,MAAM,CAAC,CAC9B,EACD,OAAO,EAAE,WAAW,CAClB,CAAC,KAAuC;gBACtC,IACE,CAAC,QAAQ;oBACT,CAAC,KAAK,CAAC,mBAAmB;oBAC1B,iBAAiB,CAAC,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC;oBACvC,CAAC,cAAc,CAAC,KAAK,EAAE,UAAU,CAAC,OAAO,CAAC,EAC1C;oBACA,MAAM,EAAE,GAAG,WAAW,CAAC,SAAS,CAAC,MAAM,EAAE,MAAM,CAAC,CAAA;oBAChD,KAAK,CAAC,aAAa,GAAG,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAA;;;;oBAKnD,IAAI,UAAU,IAAI,KAAK,CAAC,MAAM,KAAK,EAAE,EAAE;wBACrC,EAAE,CAAC,KAAK,EAAE,CAAA;wBACV,OAAM;qBACP;oBAED,UAAU,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,CAAA;iBAC7B;aACF,EACD,CAAC,QAAQ,EAAE,UAAU,CAAC,OAAO,CAAC,CAC/B,EACD,SAAS,EAAE,WAAW,CACpB,CAAC,KAA0C;gBACzC,IACE,CAAC,QAAQ;oBACT,iBAAiB,CAAC,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC;oBACvC,CAAC,cAAc,CAAC,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,EAC5C;oBACA,MAAM,EAAE,WAAW,EAAE,GAAG,KAAK,CAAA;oBAC7B,MAAM,EAAE,SAAS,EAAE,GAAG,MAAM,CAAA;;;;;oBAM5B,IAAI,OAAO,CAAC,MAAM,CAAC,WAAW,CAAC,EAAE;wBAC/B,KAAK,CAAC,cAAc,EAAE,CAAA;wBAEtB,IAAI,MAAM,CAAC,IAAI,EAAE;4BACf,MAAM,CAAC,IAAI,EAAE,CAAA;yBACd;wBAED,OAAM;qBACP;oBAED,IAAI,OAAO,CAAC,MAAM,CAAC,WAAW,CAAC,EAAE;wBAC/B,KAAK,CAAC,cAAc,EAAE,CAAA;wBAEtB,IAAI,MAAM,CAAC,IAAI,EAAE;4BACf,MAAM,CAAC,IAAI,EAAE,CAAA;yBACd;wBAED,OAAM;qBACP;;;;;oBAMD,IAAI,OAAO,CAAC,kBAAkB,CAAC,WAAW,CAAC,EAAE;wBAC3C,KAAK,CAAC,cAAc,EAAE,CAAA;wBACtB,UAAU,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAA;wBACxD,OAAM;qBACP;oBAED,IAAI,OAAO,CAAC,iBAAiB,CAAC,WAAW,CAAC,EAAE;wBAC1C,KAAK,CAAC,cAAc,EAAE,CAAA;wBACtB,UAAU,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,CAAA;wBACzC,OAAM;qBACP;oBAED,IAAI,OAAO,CAAC,oBAAoB,CAAC,WAAW,CAAC,EAAE;wBAC7C,KAAK,CAAC,cAAc,EAAE,CAAA;wBACtB,UAAU,CAAC,IAAI,CAAC,MAAM,EAAE;4BACtB,IAAI,EAAE,MAAM;4BACZ,IAAI,EAAE,OAAO;4BACb,OAAO,EAAE,IAAI;yBACd,CAAC,CAAA;wBACF,OAAM;qBACP;oBAED,IAAI,OAAO,CAAC,mBAAmB,CAAC,WAAW,CAAC,EAAE;wBAC5C,KAAK,CAAC,cAAc,EAAE,CAAA;wBACtB,UAAU,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,CAAA;wBACxD,OAAM;qBACP;;;;;;oBAOD,IAAI,OAAO,CAAC,cAAc,CAAC,WAAW,CAAC,EAAE;wBACvC,KAAK,CAAC,cAAc,EAAE,CAAA;wBAEtB,IAAI,SAAS,IAAI,KAAK,CAAC,WAAW,CAAC,SAAS,CAAC,EAAE;4BAC7C,UAAU,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAA;yBAC3C;6BAAM;4BACL,UAAU,CAAC,QAAQ,CAAC,MAAM,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,CAAA;yBAC/C;wBAED,OAAM;qBACP;oBAED,IAAI,OAAO,CAAC,aAAa,CAAC,WAAW,CAAC,EAAE;wBACtC,KAAK,CAAC,cAAc,EAAE,CAAA;wBAEtB,IAAI,SAAS,IAAI,KAAK,CAAC,WAAW,CAAC,SAAS,CAAC,EAAE;4BAC7C,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;yBACxB;6BAAM;4BACL,UAAU,CAAC,QAAQ,CAAC,MAAM,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,CAAA;yBAC7C;wBAED,OAAM;qBACP;oBAED,IAAI,OAAO,CAAC,kBAAkB,CAAC,WAAW,CAAC,EAAE;wBAC3C,KAAK,CAAC,cAAc,EAAE,CAAA;wBACtB,UAAU,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAA;wBACxD,OAAM;qBACP;oBAED,IAAI,OAAO,CAAC,iBAAiB,CAAC,WAAW,CAAC,EAAE;wBAC1C,KAAK,CAAC,cAAc,EAAE,CAAA;wBACtB,UAAU,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,CAAA;wBACzC,OAAM;qBACP;;;;oBAKD,IAAI,UAAU,EAAE;;;wBAGd,IACE,OAAO,CAAC,MAAM,CAAC,WAAW,CAAC;4BAC3B,OAAO,CAAC,QAAQ,CAAC,WAAW,CAAC;4BAC7B,OAAO,CAAC,oBAAoB,CAAC,WAAW,CAAC,EACzC;4BACA,KAAK,CAAC,cAAc,EAAE,CAAA;4BACtB,OAAM;yBACP;wBAED,IAAI,OAAO,CAAC,YAAY,CAAC,WAAW,CAAC,EAAE;4BACrC,KAAK,CAAC,cAAc,EAAE,CAAA;4BACtB,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,CAAA;4BAC1B,OAAM;yBACP;wBAED,IAAI,OAAO,CAAC,gBAAgB,CAAC,WAAW,CAAC,EAAE;4BACzC,KAAK,CAAC,cAAc,EAAE,CAAA;4BAEtB,IAAI,SAAS,IAAI,KAAK,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE;gCAC5C,MAAM,CAAC,cAAc,CAAC,MAAM,CAAC,CAAA;6BAC9B;iCAAM;gCACL,MAAM,CAAC,cAAc,CAAC,MAAM,CAAC,CAAA;6BAC9B;4BAED,OAAM;yBACP;wBAED,IAAI,OAAO,CAAC,eAAe,CAAC,WAAW,CAAC,EAAE;4BACxC,KAAK,CAAC,cAAc,EAAE,CAAA;4BAEtB,IAAI,SAAS,IAAI,KAAK,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE;gCAC5C,MAAM,CAAC,cAAc,CAAC,MAAM,CAAC,CAAA;6BAC9B;iCAAM;gCACL,MAAM,CAAC,aAAa,CAAC,MAAM,CAAC,CAAA;6BAC7B;4BAED,OAAM;yBACP;wBAED,IAAI,OAAO,CAAC,oBAAoB,CAAC,WAAW,CAAC,EAAE;4BAC7C,KAAK,CAAC,cAAc,EAAE,CAAA;4BAEtB,IAAI,SAAS,IAAI,KAAK,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE;gCAC5C,MAAM,CAAC,cAAc,CAAC,MAAM,CAAC,CAAA;6BAC9B;iCAAM;gCACL,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,CAAA;6BAChD;4BAED,OAAM;yBACP;wBAED,IAAI,OAAO,CAAC,mBAAmB,CAAC,WAAW,CAAC,EAAE;4BAC5C,KAAK,CAAC,cAAc,EAAE,CAAA;4BAEtB,IAAI,SAAS,IAAI,KAAK,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE;gCAC5C,MAAM,CAAC,cAAc,CAAC,MAAM,CAAC,CAAA;6BAC9B;iCAAM;gCACL,MAAM,CAAC,aAAa,CAAC,MAAM,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,CAAA;6BAC/C;4BAED,OAAM;yBACP;wBAED,IAAI,OAAO,CAAC,oBAAoB,CAAC,WAAW,CAAC,EAAE;4BAC7C,KAAK,CAAC,cAAc,EAAE,CAAA;4BAEtB,IAAI,SAAS,IAAI,KAAK,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE;gCAC5C,MAAM,CAAC,cAAc,CAAC,MAAM,CAAC,CAAA;6BAC9B;iCAAM;gCACL,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,CAAA;6BAChD;4BAED,OAAM;yBACP;wBAED,IAAI,OAAO,CAAC,mBAAmB,CAAC,WAAW,CAAC,EAAE;4BAC5C,KAAK,CAAC,cAAc,EAAE,CAAA;4BAEtB,IAAI,SAAS,IAAI,KAAK,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE;gCAC5C,MAAM,CAAC,cAAc,CAAC,MAAM,CAAC,CAAA;6BAC9B;iCAAM;gCACL,MAAM,CAAC,aAAa,CAAC,MAAM,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,CAAA;6BAC/C;4BAED,OAAM;yBACP;qBACF;iBACF;aACF,EACD,CAAC,QAAQ,EAAE,UAAU,CAAC,SAAS,CAAC,CACjC,EACD,OAAO,EAAE,WAAW,CAClB,CAAC,KAA2C;;;gBAG1C,IACE,UAAU;oBACV,CAAC,QAAQ;oBACT,iBAAiB,CAAC,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC;oBACvC,CAAC,cAAc,CAAC,KAAK,EAAE,UAAU,CAAC,OAAO,CAAC,EAC1C;oBACA,KAAK,CAAC,cAAc,EAAE,CAAA;oBACtB,WAAW,CAAC,UAAU,CAAC,MAAM,EAAE,KAAK,CAAC,aAAa,CAAC,CAAA;iBACpD;aACF,EACD,CAAC,QAAQ,EAAE,UAAU,CAAC,OAAO,CAAC,CAC/B;YAED,oBAAC,QAAQ,IACP,QAAQ,EAAE,QAAQ,EAClB,WAAW,EAAE,WAAW,EACxB,IAAI,EAAE,MAAM,EACZ,aAAa,EAAE,aAAa,EAC5B,UAAU,EAAE,UAAU,EACtB,SAAS,EAAE,MAAM,CAAC,SAAS,GAC3B,CACQ,CACa,EAC5B;CACF,CAAA;;;;AAMD,MAAM,eAAe,GAAG,MAAM,EAAE,CAAA;;;;AAMhC,MAAM,YAAY,GAAG,CAAC,CAAW,EAAE,CAAW;IAC5C,QACE,CAAC,CAAC,CAAC,cAAc,KAAK,CAAC,CAAC,cAAc;QACpC,CAAC,CAAC,WAAW,KAAK,CAAC,CAAC,WAAW;QAC/B,CAAC,CAAC,YAAY,KAAK,CAAC,CAAC,YAAY;QACjC,CAAC,CAAC,SAAS,KAAK,CAAC,CAAC,SAAS;SAC5B,CAAC,CAAC,cAAc,KAAK,CAAC,CAAC,YAAY;YAClC,CAAC,CAAC,WAAW,KAAK,CAAC,CAAC,SAAS;YAC7B,CAAC,CAAC,YAAY,KAAK,CAAC,CAAC,cAAc;YACnC,CAAC,CAAC,SAAS,KAAK,CAAC,CAAC,WAAW,CAAC,EACjC;CACF,CAAA;;;;AAMD,MAAM,SAAS,GAAG,CAChB,MAAmB,EACnB,MAA0B;IAE1B,OAAO,SAAS,CAAC,MAAM,CAAC,IAAI,WAAW,CAAC,UAAU,CAAC,MAAM,EAAE,MAAM,CAAC,CAAA;CACnE,CAAA;;;;AAMD,MAAM,iBAAiB,GAAG,CACxB,MAAmB,EACnB,MAA0B;IAE1B,QACE,SAAS,CAAC,MAAM,CAAC;QACjB,WAAW,CAAC,UAAU,CAAC,MAAM,EAAE,MAAM,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,EAC3D;CACF,CAAA;;;;AAMD,MAAM,cAAc,GAAG,CAGrB,KAAgB,EAChB,OAAoC;IAEpC,IAAI,CAAC,OAAO,EAAE;QACZ,OAAO,KAAK,CAAA;KACb;IAED,OAAO,CAAC,KAAK,CAAC,CAAA;IACd,OAAO,KAAK,CAAC,kBAAkB,EAAE,IAAI,KAAK,CAAC,oBAAoB,EAAE,CAAA;CAClE,CAAA;;;;AAMD,MAAM,iBAAiB,GAAG,CAAC,KAAY,EAAE,OAAgC;IACvE,IAAI,CAAC,OAAO,EAAE;QACZ,OAAO,KAAK,CAAA;KACb;IAED,OAAO,CAAC,KAAK,CAAC,CAAA;IACd,OAAO,KAAK,CAAC,gBAAgB,CAAA;CAC9B,CAAA;;;;AAMD,MAAM,eAAe,GAAG,CACtB,YAA0B,EAC1B,MAAmB;IAEnB,MAAM,EAAE,SAAS,EAAE,GAAG,MAAM,CAAA;IAE5B,IAAI,CAAC,SAAS,EAAE;QACd,OAAM;KACP;IAED,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,SAAS,CAAC,CAAA;IAC3C,MAAM,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,EAAE,EAAE,KAAK,CAAC,IAAI,EAAE,CAAC,CAAA;IACzD,MAAM,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,IAAI,EAAE,CAAC,CAAA;IAErD,IAAI,KAAK,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE;QAC9C,OAAM;KACP;;;IAID,MAAM,QAAQ,GAAG,WAAW,CAAC,UAAU,CAAC,MAAM,EAAE,SAAS,CAAC,CAAA;IAC1D,IAAI,QAAQ,GAAG,QAAQ,CAAC,aAAa,EAAE,CAAA;IACvC,IAAI,MAAM,GAAG,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAgB,CAAA;;IAGlD,QAAQ,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI;QAC9B,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE;YACtD,MAAM,GAAG,IAAmB,CAAA;SAC7B;KACF,CAAC,CAAA;;;;IAKF,IAAI,OAAO,EAAE;QACX,MAAM,CAAC,QAAQ,CAAC,GAAG,OAAO,CAAA;QAC1B,MAAM,CAAC,GAAG,QAAQ,CAAC,UAAU,EAAE,CAAA;QAC/B,MAAM,OAAO,GAAG,WAAW,CAAC,SAAS,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAA;QACvD,CAAC,CAAC,WAAW,CAAC,OAAO,CAAC,CAAA;QACtB,QAAQ,GAAG,CAAC,CAAC,aAAa,EAAE,CAAA;KAC7B;;;;;IAMD,IAAI,SAAS,EAAE;QACb,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,qBAAqB,CAAiB,CAAA;KACvE;;;IAID,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,yBAAyB,CAAC,CAAC,CAAC,OAAO,CACtE,EAAE;QACA,MAAM,SAAS,GAAG,EAAE,CAAC,YAAY,CAAC,uBAAuB,CAAC,KAAK,GAAG,CAAA;QAClE,EAAE,CAAC,WAAW,GAAG,SAAS,GAAG,IAAI,GAAG,EAAE,CAAA;KACvC,CACF,CAAA;;;;IAKD,IAAI,SAAS,CAAC,MAAM,CAAC,EAAE;QACrB,MAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAA;;;QAG3C,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,KAAK,CAAA;QAC7B,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAA;QACxB,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,CAAA;QAC1B,MAAM,GAAG,IAAI,CAAA;KACd;IAED,MAAM,QAAQ,GAAGzB,MAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,SAAS,CAAC,CAAA;IACjD,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAA;IACvC,MAAM,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC,CAAA;IACvD,MAAM,CAAC,YAAY,CAAC,qBAAqB,EAAE,OAAO,CAAC,CAAA;IACnD,YAAY,CAAC,OAAO,CAAC,8BAA8B,EAAE,OAAO,CAAC,CAAA;;IAG7D,MAAM,GAAG,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAA;IACzC,GAAG,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAA;IACzB,YAAY,CAAC,OAAO,CAAC,WAAW,EAAE,GAAG,CAAC,SAAS,CAAC,CAAA;IAChD,YAAY,CAAC,OAAO,CAAC,YAAY,EAAE,YAAY,CAAC,GAAG,CAAC,CAAC,CAAA;CACtD,CAAA;;;;;AAOD,MAAM,YAAY,GAAG,CAAC,OAAgB;IACpC,IAAI,IAAI,GAAG,EAAE,CAAA;IAEb,IAAI,SAAS,CAAC,OAAO,CAAC,IAAI,OAAO,CAAC,SAAS,EAAE;QAC3C,OAAO,OAAO,CAAC,SAAS,CAAA;KACzB;IAED,IAAI,YAAY,CAAC,OAAO,CAAC,EAAE;QACzB,KAAK,MAAM,SAAS,IAAI,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE;YACtD,IAAI,IAAI,YAAY,CAAC,SAAS,CAAC,CAAA;SAChC;QAED,MAAM,OAAO,GAAG,gBAAgB,CAAC,OAAO,CAAC,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAA;QAErE,IAAI,OAAO,KAAK,OAAO,IAAI,OAAO,KAAK,MAAM,IAAI,OAAO,CAAC,OAAO,KAAK,IAAI,EAAE;YACzE,IAAI,IAAI,IAAI,CAAA;SACb;KACF;IAED,OAAO,IAAI,CAAA;CACZ,CAAA;;ACrlCD;;;AAIA,IAAIwH,CAAC,GAAG,CAAR;;;;;;AAOA,MAAaC;EAGXC;SACOC,EAAL,aAAaH,CAAC,EAAd;;;;;ICiBSI,WAAW,GAAG;;;;EAKzBC,OAAO,CAACC,MAAD,EAAsBrB,IAAtB;QACD1C,GAAG,GAAGvD,WAAW,CAACuH,GAAZ,CAAgBtB,IAAhB,CAAV;;QAEI,CAAC1C,GAAL,EAAU;MACRA,GAAG,GAAG,IAAI0D,GAAJ,EAAN;MACAjH,WAAW,CAACwH,GAAZ,CAAgBvB,IAAhB,EAAsB1C,GAAtB;;;WAGKA,GAAP;GAbuB;;;;;EAoBzBkE,QAAQ,CAACH,MAAD,EAAsBrB,IAAtB;QACAyB,IAAI,GAAS,EAAnB;QACId,KAAK,GAAGX,IAAZ;;WAEO,IAAP,EAAa;UACLU,MAAM,GAAGhH,cAAc,CAAC4H,GAAf,CAAmBX,KAAnB,CAAf;;UAEID,MAAM,IAAI,IAAd,EAAoB;YACdgB,MAAM,CAACC,QAAP,CAAgBhB,KAAhB,CAAJ,EAA4B;iBACnBc,IAAP;SADF,MAEO;;;;;UAKHjB,CAAC,GAAGhH,aAAa,CAAC8H,GAAd,CAAkBX,KAAlB,CAAV;;UAEIH,CAAC,IAAI,IAAT,EAAe;;;;MAIfiB,IAAI,CAACG,OAAL,CAAapB,CAAb;MACAG,KAAK,GAAGD,MAAR;;;UAGI,IAAImB,KAAJ,mDACuCC,IAAI,CAACC,SAAL,CAAe/B,IAAf,CADvC,EAAN;GA7CuB;;;;;EAsDzBgC,SAAS,CAACX,MAAD;WACA,CAAC,CAACpH,UAAU,CAACqH,GAAX,CAAeD,MAAf,CAAT;GAvDuB;;;;;EA8DzBY,UAAU,CAACZ,MAAD;WACD,CAAC,CAACrH,YAAY,CAACsH,GAAb,CAAiBD,MAAjB,CAAT;GA/DuB;;;;;EAsEzBa,IAAI,CAACb,MAAD;QACIc,EAAE,GAAGhB,WAAW,CAACiB,SAAZ,CAAsBf,MAAtB,EAA8BA,MAA9B,CAAX;IACApH,UAAU,CAACsH,GAAX,CAAeF,MAAf,EAAuB,KAAvB;;QAEI9G,MAAM,CAAC8H,QAAP,CAAgBC,aAAhB,KAAkCH,EAAtC,EAA0C;MACxCA,EAAE,CAACD,IAAH;;GA3EqB;;;;;EAmFzBK,KAAK,CAAClB,MAAD;QACGc,EAAE,GAAGhB,WAAW,CAACiB,SAAZ,CAAsBf,MAAtB,EAA8BA,MAA9B,CAAX;IACApH,UAAU,CAACsH,GAAX,CAAeF,MAAf,EAAuB,IAAvB;;QAEI9G,MAAM,CAAC8H,QAAP,CAAgBC,aAAhB,KAAkCH,EAAtC,EAA0C;MACxCA,EAAE,CAACI,KAAH,CAAS;QAAEC,aAAa,EAAE;OAA1B;;GAxFqB;;;;;EAgGzBC,QAAQ,CAACpB,MAAD;QACA;MAAEqB;QAAcrB,MAAtB;QACMsB,YAAY,GAAGpI,MAAM,CAACqI,YAAP,EAArB;;QAEID,YAAY,IAAIA,YAAY,CAACE,UAAb,GAA0B,CAA9C,EAAiD;MAC/CF,YAAY,CAACG,eAAb;;;QAGEJ,SAAJ,EAAe;MACbK,UAAU,CAACN,QAAX,CAAoBpB,MAApB;;GAzGqB;;;;;EAiHzB2B,UAAU,CACR3B,MADQ,EAER4B,MAFQ;QAGRC,8EAAkC;QAE5B;MAAEC,QAAQ,GAAG;QAAUD,OAA7B;QACMf,EAAE,GAAGhB,WAAW,CAACiB,SAAZ,CAAsBf,MAAtB,EAA8BA,MAA9B,CAAX;QACI+B,OAAJ;;;;;QAMI;MACFA,OAAO,GAAGxD,YAAY,CAACqD,MAAD,CAAZ,GAAuBA,MAAvB,GAAgCA,MAAM,CAACI,aAAjD;KADF,CAEE,OAAOC,GAAP,EAAY;UAEV,CAACA,GAAG,CAACC,OAAJ,CAAYC,QAAZ,CAAqB,iDAArB,CADH,EAEE;cACMF,GAAN;;;;QAIA,CAACF,OAAL,EAAc;aACL,KAAP;;;WAIAA,OAAO,CAACK,OAAR,4BAA2CtB,EAA3C,KACC,CAACgB,QAAD,IAAahB,EAAE,CAACuB,iBADjB,CADF;GA5IuB;;;;;EAsJzBC,UAAU,CAACtC,MAAD,EAAsBuC,IAAtB;IACRvC,MAAM,CAACsC,UAAP,CAAkBC,IAAlB;GAvJuB;;;;;EA8JzBxB,SAAS,CAACf,MAAD,EAAsBrB,IAAtB;QACD6D,OAAO,GAAGnC,MAAM,CAACC,QAAP,CAAgB3B,IAAhB,IACZrG,iBAAiB,CAAC2H,GAAlB,CAAsBD,MAAtB,CADY,GAEZxH,cAAc,CAACyH,GAAf,CAAmBH,WAAW,CAACC,OAAZ,CAAoBC,MAApB,EAA4BrB,IAA5B,CAAnB,CAFJ;;QAII,CAAC6D,OAAL,EAAc;YACN,IAAIhC,KAAJ,sDAC0CC,IAAI,CAACC,SAAL,CAAe/B,IAAf,CAD1C,EAAN;;;WAKK6D,OAAP;GAzKuB;;;;;EAgLzBC,UAAU,CAACzC,MAAD,EAAsB0C,KAAtB;QACF,CAAC/D,IAAD,IAAS0B,MAAM,CAAC1B,IAAP,CAAYqB,MAAZ,EAAoB0C,KAAK,CAACtC,IAA1B,CAAf;QACMU,EAAE,GAAGhB,WAAW,CAACiB,SAAZ,CAAsBf,MAAtB,EAA8BrB,IAA9B,CAAX;QACID,QAAJ;;;QAII2B,MAAM,CAACsC,IAAP,CAAY3C,MAAZ,EAAoB;MAAE4C,EAAE,EAAEF;KAA1B,CAAJ,EAAwC;MACtCA,KAAK,GAAG;QAAEtC,IAAI,EAAEsC,KAAK,CAACtC,IAAd;QAAoBxB,MAAM,EAAE;OAApC;;;;;;QAMIiE,QAAQ,iDAAd;QACMC,KAAK,GAAGC,KAAK,CAACC,IAAN,CAAWlC,EAAE,CAACmC,gBAAH,CAAoBJ,QAApB,CAAX,CAAd;QACIK,KAAK,GAAG,CAAZ;;SAEK,IAAMC,IAAX,IAAmBL,KAAnB,EAA0B;UAClBN,OAAO,GAAGW,IAAI,CAACtE,UAAL,CAAgB,CAAhB,CAAhB;;UAEI2D,OAAO,IAAI,IAAX,IAAmBA,OAAO,CAACpD,WAAR,IAAuB,IAA9C,EAAoD;;;;UAI9C;QAAEN;UAAW0D,OAAO,CAACpD,WAA3B;UACMgE,IAAI,GAAGD,IAAI,CAAC1D,YAAL,CAAkB,mBAAlB,CAAb;UACM4D,UAAU,GAAGD,IAAI,IAAI,IAAR,GAAetE,MAAf,GAAwBwE,QAAQ,CAACF,IAAD,EAAO,EAAP,CAAnD;UACMG,GAAG,GAAGL,KAAK,GAAGG,UAApB;;UAEIX,KAAK,CAAC9D,MAAN,IAAgB2E,GAApB,EAAyB;YACjB3E,MAAM,GAAG4E,IAAI,CAACC,GAAL,CAAS3E,MAAT,EAAiB0E,IAAI,CAACE,GAAL,CAAS,CAAT,EAAYhB,KAAK,CAAC9D,MAAN,GAAesE,KAA3B,CAAjB,CAAf;QACAxE,QAAQ,GAAG,CAAC8D,OAAD,EAAU5D,MAAV,CAAX;;;;MAIFsE,KAAK,GAAGK,GAAR;;;QAGE,CAAC7E,QAAL,EAAe;YACP,IAAI8B,KAAJ,wDAC4CC,IAAI,CAACC,SAAL,CAAegC,KAAf,CAD5C,EAAN;;;WAKKhE,QAAP;GA7NuB;;;;;EAoOzBiF,UAAU,CAAC3D,MAAD,EAAsB4D,KAAtB;QACF;MAAEC,MAAF;MAAU3C;QAAU0C,KAA1B;QACME,SAAS,GAAGhE,WAAW,CAAC2C,UAAZ,CAAuBzC,MAAvB,EAA+B6D,MAA/B,CAAlB;QACME,QAAQ,GAAGC,KAAK,CAACC,WAAN,CAAkBL,KAAlB,IACbE,SADa,GAEbhE,WAAW,CAAC2C,UAAZ,CAAuBzC,MAAvB,EAA+BkB,KAA/B,CAFJ;QAIMgD,QAAQ,GAAGhL,MAAM,CAAC8H,QAAP,CAAgBmD,WAAhB,EAAjB;QACMjB,KAAK,GAAGc,KAAK,CAACI,UAAN,CAAiBR,KAAjB,IAA0BG,QAA1B,GAAqCD,SAAnD;QACMP,GAAG,GAAGS,KAAK,CAACI,UAAN,CAAiBR,KAAjB,IAA0BE,SAA1B,GAAsCC,QAAlD;IACAG,QAAQ,CAACG,QAAT,CAAkBnB,KAAK,CAAC,CAAD,CAAvB,EAA4BA,KAAK,CAAC,CAAD,CAAjC;IACAgB,QAAQ,CAACI,MAAT,CAAgBf,GAAG,CAAC,CAAD,CAAnB,EAAwBA,GAAG,CAAC,CAAD,CAA3B;WACOW,QAAP;GAhPuB;;;;;EAuPzBK,WAAW,CAACvE,MAAD,EAAsBwC,OAAtB;QACLgC,KAAK,GAAGjG,YAAY,CAACiE,OAAD,CAAZ,GAAwBA,OAAxB,GAAkCA,OAAO,CAACR,aAAtD;;QAEIwC,KAAK,IAAI,CAACA,KAAK,CAACC,YAAN,CAAmB,iBAAnB,CAAd,EAAqD;MACnDD,KAAK,GAAGA,KAAK,CAACpC,OAAN,qBAAR;;;QAGIzD,IAAI,GAAG6F,KAAK,GAAGjM,eAAe,CAAC0H,GAAhB,CAAoBuE,KAApB,CAAH,GAA+C,IAAjE;;QAEI,CAAC7F,IAAL,EAAW;YACH,IAAI6B,KAAJ,sDAAwDgE,KAAxD,EAAN;;;WAGK7F,IAAP;GApQuB;;;;;EA2QzB+F,cAAc,CAAC1E,MAAD,EAAsBvD,KAAtB;QACR,iBAAiBA,KAArB,EAA4B;MAC1BA,KAAK,GAAGA,KAAK,CAACkI,WAAd;;;QAGI;MAAEC,OAAO,EAAEC,CAAX;MAAcC,OAAO,EAAEC,CAAvB;MAA0BnD;QAAWnF,KAA3C;;QAEIoI,CAAC,IAAI,IAAL,IAAaE,CAAC,IAAI,IAAtB,EAA4B;YACpB,IAAIvE,KAAJ,0DAA4D/D,KAA5D,EAAN;;;QAGIkC,IAAI,GAAGmB,WAAW,CAACyE,WAAZ,CAAwBvE,MAAxB,EAAgCvD,KAAK,CAACmF,MAAtC,CAAb;QACMxB,IAAI,GAAGN,WAAW,CAACK,QAAZ,CAAqBH,MAArB,EAA6BrB,IAA7B,CAAb;;;;QAKI0B,MAAM,CAAC2E,MAAP,CAAchF,MAAd,EAAsBrB,IAAtB,CAAJ,EAAiC;UACzBsG,IAAI,GAAGrD,MAAM,CAACsD,qBAAP,EAAb;UACMC,MAAM,GAAGnF,MAAM,CAACoF,QAAP,CAAgBzG,IAAhB,IACXkG,CAAC,GAAGI,IAAI,CAACI,IAAT,GAAgBJ,IAAI,CAACI,IAAL,GAAYJ,IAAI,CAACK,KAAjB,GAAyBT,CAD9B,GAEXE,CAAC,GAAGE,IAAI,CAACM,GAAT,GAAeN,IAAI,CAACM,GAAL,GAAWN,IAAI,CAACO,MAAhB,GAAyBT,CAF5C;UAIMU,IAAI,GAAGpF,MAAM,CAACqC,KAAP,CAAa1C,MAAb,EAAqBI,IAArB,EAA2B;QACtCqF,IAAI,EAAEN,MAAM,GAAG,OAAH,GAAa;OADd,CAAb;UAGMzC,KAAK,GAAGyC,MAAM,GAChB9E,MAAM,CAACqF,MAAP,CAAc1F,MAAd,EAAsByF,IAAtB,CADgB,GAEhBpF,MAAM,CAACsF,KAAP,CAAa3F,MAAb,EAAqByF,IAArB,CAFJ;;UAII/C,KAAJ,EAAW;YACHkB,MAAK,GAAGvD,MAAM,CAACuD,KAAP,CAAa5D,MAAb,EAAqB0C,KAArB,CAAd;;eACOkB,MAAP;;;;;QAKAM,QAAJ;QACM;MAAElD;QAAa9H,MAArB;;QAGI8H,QAAQ,CAAC4E,mBAAb,EAAkC;MAChC1B,QAAQ,GAAGlD,QAAQ,CAAC4E,mBAAT,CAA6Bf,CAA7B,EAAgCE,CAAhC,CAAX;KADF,MAEO;UACCc,QAAQ,GAAG7E,QAAQ,CAAC8E,sBAAT,CAAgCjB,CAAhC,EAAmCE,CAAnC,CAAjB;;UAEIc,QAAJ,EAAc;QACZ3B,QAAQ,GAAGlD,QAAQ,CAACmD,WAAT,EAAX;QACAD,QAAQ,CAACG,QAAT,CAAkBwB,QAAQ,CAACE,UAA3B,EAAuCF,QAAQ,CAACjH,MAAhD;QACAsF,QAAQ,CAACI,MAAT,CAAgBuB,QAAQ,CAACE,UAAzB,EAAqCF,QAAQ,CAACjH,MAA9C;;;;QAIA,CAACsF,QAAL,EAAe;YACP,IAAI1D,KAAJ,0DAA4D/D,KAA5D,EAAN;;;;QAIImH,KAAK,GAAG9D,WAAW,CAACkG,YAAZ,CAAyBhG,MAAzB,EAAiCkE,QAAjC,CAAd;WACON,KAAP;GAtUuB;;;;;EA6UzBqC,YAAY,CAACjG,MAAD,EAAsBtB,QAAtB;QACJ,CAACwH,WAAD,EAAcC,aAAd,IAA+B1H,iBAAiB,CAACC,QAAD,CAAtD;QACM0H,UAAU,GAAGF,WAAW,CAACE,UAA/B;QACIC,QAAQ,GAAsB,IAAlC;QACIzH,MAAM,GAAG,CAAb;;QAEIwH,UAAJ,EAAgB;UACRE,QAAQ,GAAGF,UAAU,CAAChE,OAAX,CAAmB,0BAAnB,CAAjB;UACImE,QAAQ,GAAGH,UAAU,CAAChE,OAAX,CAAmB,mBAAnB,CAAf;UACII,OAAO,GAAsB,IAAjC,CAHc;;;UAOV+D,QAAJ,EAAc;QACZF,QAAQ,GAAGE,QAAQ,CAACnE,OAAT,CAAiB,0BAAjB,CAAX;YACMwB,KAAK,GAAG1K,MAAM,CAAC8H,QAAP,CAAgBmD,WAAhB,EAAd;QACAP,KAAK,CAACS,QAAN,CAAegC,QAAf,EAAyB,CAAzB;QACAzC,KAAK,CAACU,MAAN,CAAa4B,WAAb,EAA0BC,aAA1B;YACMK,QAAQ,GAAG5C,KAAK,CAAC6C,aAAN,EAAjB;YACMC,QAAQ,GAAG,CACf,GAAGF,QAAQ,CAACvD,gBAAT,CAA0B,yBAA1B,CADY,EAEf,GAAGuD,QAAQ,CAACvD,gBAAT,CAA0B,yBAA1B,CAFY,CAAjB;QAKAyD,QAAQ,CAACC,OAAT,CAAiB7F,EAAE;UACjBA,EAAG,CAACsF,UAAJ,CAAgBQ,WAAhB,CAA4B9F,EAA5B;SADF,EAXY;;;;;;QAoBZlC,MAAM,GAAG4H,QAAQ,CAACpH,WAAT,CAAsBN,MAA/B;QACA0D,OAAO,GAAG6D,QAAV;OArBF,MAsBO,IAAIC,QAAJ,EAAc;;;QAInBC,QAAQ,GAAGD,QAAQ,CAACO,aAAT,CAAuB,mBAAvB,CAAX;QACAR,QAAQ,GAAGE,QAAQ,CAACnE,OAAT,CAAiB,0BAAjB,CAAX;QACAI,OAAO,GAAG+D,QAAV;QACA3H,MAAM,GAAG4D,OAAO,CAACpD,WAAR,CAAqBN,MAA9B;OApCY;;;;;;;UA6CZ0D,OAAO,IACP5D,MAAM,KAAK4D,OAAO,CAACpD,WAAR,CAAqBN,MADhC,IAEAsH,UAAU,CAAC3B,YAAX,CAAwB,uBAAxB,CAHF,EAIE;QACA7F,MAAM;;;;QAIN,CAACyH,QAAL,EAAe;YACP,IAAI7F,KAAJ,wDAC4C9B,QAD5C,EAAN;;;;;;QAQIoI,SAAS,GAAGhH,WAAW,CAACyE,WAAZ,CAAwBvE,MAAxB,EAAgCqG,QAAhC,CAAlB;QACMjG,IAAI,GAAGN,WAAW,CAACK,QAAZ,CAAqBH,MAArB,EAA6B8G,SAA7B,CAAb;WACO;MAAE1G,IAAF;MAAQxB;KAAf;GAnZuB;;;;;EA0ZzBoH,YAAY,CACVhG,MADU,EAEVkE,QAFU;QAIJpD,EAAE,GACNoD,QAAQ,YAAY6C,SAApB,GACI7C,QAAQ,CAAC8C,UADb,GAEI9C,QAAQ,CAAC+C,cAHf;QAIID,UAAJ;QACIE,YAAJ;QACIC,SAAJ;QACIC,WAAJ;QACInD,WAAJ;;QAEInD,EAAJ,EAAQ;UACFoD,QAAQ,YAAY6C,SAAxB,EAAmC;QACjCC,UAAU,GAAG9C,QAAQ,CAAC8C,UAAtB;QACAE,YAAY,GAAGhD,QAAQ,CAACgD,YAAxB;QACAC,SAAS,GAAGjD,QAAQ,CAACiD,SAArB;QACAC,WAAW,GAAGlD,QAAQ,CAACkD,WAAvB;QACAnD,WAAW,GAAGC,QAAQ,CAACD,WAAvB;OALF,MAMO;QACL+C,UAAU,GAAG9C,QAAQ,CAAC+C,cAAtB;QACAC,YAAY,GAAGhD,QAAQ,CAACmD,WAAxB;QACAF,SAAS,GAAGjD,QAAQ,CAACoD,YAArB;QACAF,WAAW,GAAGlD,QAAQ,CAACqD,SAAvB;QACAtD,WAAW,GAAGC,QAAQ,CAACsD,SAAvB;;;;QAKFR,UAAU,IAAI,IAAd,IACAG,SAAS,IAAI,IADb,IAEAD,YAAY,IAAI,IAFhB,IAGAE,WAAW,IAAI,IAJjB,EAKE;YACM,IAAI5G,KAAJ,wDAC4C0D,QAD5C,EAAN;;;QAKIL,MAAM,GAAG/D,WAAW,CAACmG,YAAZ,CAAyBjG,MAAzB,EAAiC,CAACgH,UAAD,EAAaE,YAAb,CAAjC,CAAf;QACMhG,KAAK,GAAG+C,WAAW,GACrBJ,MADqB,GAErB/D,WAAW,CAACmG,YAAZ,CAAyBjG,MAAzB,EAAiC,CAACmH,SAAD,EAAYC,WAAZ,CAAjC,CAFJ;WAIO;MAAEvD,MAAF;MAAU3C;KAAjB;;;CAxcG;;AC9BP;;;;AAIA,AAAO,IAAMuG,cAAc,GAAGjO,aAAa,CAAC,KAAD,CAApC;;;;;AAMP,IAAakO,UAAU,GAAG;SACjBhO,UAAU,CAAC+N,cAAD,CAAjB;CADK;;ACHP;;;;AAKA,MAAa,KAAK,GAAG,CAAC,KAMrB;IACC,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE,GAAG,IAAI,EAAE,GAAG,KAAK,CAAA;IAC5D,MAAM,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAA;IACjC,MAAM,OAAO,GAAkB,OAAO,CAAC;QACrC,MAAM,CAAC,QAAQ,GAAG,KAAK,CAAA;QACvB,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,CAAA;QAC3B,OAAO,CAAC,MAAM,CAAC,CAAA;KAChB,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;IAExC,MAAM,eAAe,GAAG,WAAW,CAAC;QAClC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAA;QACzB,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC,CAAA;KAChB,EAAE,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC,CAAA;IAEnB,mBAAmB,CAAC,GAAG,CAAC,MAAM,EAAE,eAAe,CAAC,CAAA;IAEhD,QACE,oBAAC,YAAY,CAAC,QAAQ,IAAC,KAAK,EAAE,OAAO;QACnC,oBAAC,aAAa,CAAC,QAAQ,IAAC,KAAK,EAAE,MAAM;YACnC,oBAAC,cAAc,CAAC,QAAQ,IAAC,KAAK,EAAE,WAAW,CAAC,SAAS,CAAC,MAAM,CAAC,IAC1D,QAAQ,CACe,CACH,CACH,EACzB;CACF;;ACtCD;;;;AAIA,IAAaE,SAAS,GAAsB3H,MAAnB;MACjB4H,CAAC,GAAG5H,MAAV;MACM;IAAE6H,KAAF;IAASC;MAAaF,CAA5B;;EAEAA,CAAC,CAACC,KAAF,GAAWE,EAAD;QACFC,OAAO,GAAkB,EAA/B;;YAEQD,EAAE,CAACE,IAAX;WACO,aAAL;WACK,aAAL;WACK,UAAL;;eACO,IAAM,CAACtJ,IAAD,EAAOyB,IAAP,CAAX,IAA2BC,MAAM,CAAC6H,MAAP,CAAcN,CAAd,EAAiB;YAAEhF,EAAE,EAAEmF,EAAE,CAAC3H;WAA1B,CAA3B,EAA8D;gBACtDnE,GAAG,GAAG6D,WAAW,CAACC,OAAZ,CAAoB6H,CAApB,EAAuBjJ,IAAvB,CAAZ;YACAqJ,OAAO,CAACG,IAAR,CAAa,CAAC/H,IAAD,EAAOnE,GAAP,CAAb;;;;;;WAMC,aAAL;WACK,aAAL;WACK,YAAL;WACK,YAAL;;eACO,IAAM,CAAC0C,KAAD,EAAOyB,KAAP,CAAX,IAA2BC,MAAM,CAAC6H,MAAP,CAAcN,CAAd,EAAiB;YAC1ChF,EAAE,EAAEwF,IAAI,CAAC/I,MAAL,CAAY0I,EAAE,CAAC3H,IAAf;WADqB,CAA3B,EAEI;gBACInE,IAAG,GAAG6D,WAAW,CAACC,OAAZ,CAAoB6H,CAApB,EAAuBjJ,KAAvB,CAAZ;;YACAqJ,OAAO,CAACG,IAAR,CAAa,CAAC/H,KAAD,EAAOnE,IAAP,CAAb;;;;;AApBN;;IAgCA4L,KAAK,CAACE,EAAD,CAAL;;SAEK,IAAM,CAAC3H,MAAD,EAAOnE,KAAP,CAAX,IAA0B+L,OAA1B,EAAmC;UAC3B,CAACrJ,MAAD,IAAS0B,MAAM,CAAC1B,IAAP,CAAYiJ,CAAZ,EAAexH,MAAf,CAAf;MACA1H,WAAW,CAACwH,GAAZ,CAAgBvB,MAAhB,EAAsB1C,KAAtB;;GAvCJ;;EA2CA2L,CAAC,CAACtF,UAAF,GAAgBC,IAAD;QACP8F,QAAQ,GAAG9F,IAAI,CAAC+F,OAAL,CAAa,8BAAb,CAAjB;;QAEID,QAAJ,EAAc;UACNE,OAAO,GAAGC,kBAAkB,CAACtP,MAAM,CAACuP,IAAP,CAAYJ,QAAZ,CAAD,CAAlC;UACMK,MAAM,GAAGjI,IAAI,CAACkI,KAAL,CAAWJ,OAAX,CAAf;MACA7G,UAAU,CAACkH,cAAX,CAA0BhB,CAA1B,EAA6Bc,MAA7B;;;;QAIIvF,IAAI,GAAGZ,IAAI,CAAC+F,OAAL,CAAa,YAAb,CAAb;;QAEInF,IAAJ,EAAU;UACF0F,KAAK,GAAG1F,IAAI,CAAC2F,KAAL,CAAW,IAAX,CAAd;UACIA,KAAK,GAAG,KAAZ;;WAEK,IAAMC,IAAX,IAAmBF,KAAnB,EAA0B;YACpBC,KAAJ,EAAW;UACTpH,UAAU,CAACsH,UAAX,CAAsBpB,CAAtB;;;QAGFlG,UAAU,CAACuH,UAAX,CAAsBrB,CAAtB,EAAyBmB,IAAzB;QACAD,KAAK,GAAG,IAAR;;;GAtBN;;EA2BAlB,CAAC,CAACE,QAAF,GAAa;;;;;IAKXoB,QAAQ,CAACC,uBAAT,CAAiC;UACzBC,eAAe,GAAGvQ,mBAAmB,CAACoH,GAApB,CAAwB2H,CAAxB,CAAxB;;UAEIwB,eAAJ,EAAqB;QACnBA,eAAe;;;MAGjBtB,QAAQ;KAPV;GALF;;SAgBOF,CAAP;CA1FK;;;;"}