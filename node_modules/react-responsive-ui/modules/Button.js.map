{"version":3,"sources":["../source/Button.js"],"names":["PureComponent","Component","Button_","state","linkOnClick","event","props","wait","busy","disabled","action","onClick","button","shiftKey","altKey","ctrlKey","metaKey","preventDefault","buttonOnClick","result","then","setState","_isMounted","buttonRef","component","link","submit","stretch","style","className","children","rest","properties","ref","LinkComponent","undefined","Button","forwardRef","propTypes","func","bool","oneOfType","string","object"],"mappings":"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","file":"Button.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classNames from 'classnames'\r\n\r\nimport ActivityIndicator from './ActivityIndicator'\r\nimport FadeInOut from './FadeInOut'\r\n\r\n// `PureComponent` is only available in React >= 15.3.0.\r\nconst PureComponent = React.PureComponent || React.Component\r\n\r\nclass Button_ extends PureComponent {\r\n\tstate = {}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis._isMounted = true\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tthis._isMounted = false\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tbuttonRef,\r\n\t\t\tcomponent,\r\n\t\t\tlink,\r\n\t\t\twait,\r\n\t\t\tbusy,\r\n\t\t\tdisabled,\r\n\t\t\taction,\r\n\t\t\tonClick,\r\n\t\t\tsubmit,\r\n\t\t\tstretch,\r\n\t\t\tstyle,\r\n\t\t\tclassName,\r\n\t\t\tchildren,\r\n\t\t\t...rest\r\n\t\t} = this.props\r\n\r\n\t\tconst properties = {\r\n\t\t\t...rest,\r\n\t\t\tref: buttonRef,\r\n\t\t\tstyle,\r\n\t\t\tclassName: classNames(className, 'rrui__input', 'rrui__button-reset', 'rrui__outline', 'rrui__button', {\r\n\t\t\t\t'rrui__button--busy'       : wait || busy || this.state.wait,\r\n\t\t\t\t'rrui__button--disabled'   : disabled,\r\n\t\t\t\t'rrui__button--stretch'    : stretch,\r\n\t\t\t\t'rrui__button-reset--link' : link\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tif (link) {\r\n\t\t\tconst LinkComponent = component || 'a'\r\n\t\t\treturn (\r\n\t\t\t\t<LinkComponent\r\n\t\t\t\t\thref={ component ? undefined : link }\r\n\t\t\t\t\tonClick={ this.linkOnClick }\r\n\t\t\t\t\t{ ...properties }>\r\n\t\t\t\t\t{ children }\r\n\t\t\t\t</LinkComponent>\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<button\r\n\t\t\t\ttype={ submit ? 'submit' : 'button' }\r\n\t\t\t\tdisabled={ wait || busy || this.state.wait || disabled }\r\n\t\t\t\tonClick={ this.buttonOnClick }\r\n\t\t\t\t{ ...properties }>\r\n\t\t\t\t<FadeInOut\r\n\t\t\t\t\tshow={ wait || busy || this.state.wait }\r\n\t\t\t\t\tfadeOutDuration={300}\r\n\t\t\t\t\tfadeInClassName=\"rrui__button__busy--after-show\">\r\n\t\t\t\t\t<span className=\"rrui__button__busy\"/>\r\n\t\t\t\t</FadeInOut>\r\n\t\t\t\t{ children }\r\n\t\t\t</button>\r\n\t\t)\r\n\t}\r\n\r\n\tlinkOnClick = (event) => {\r\n\t\tconst {\r\n\t\t\twait,\r\n\t\t\tbusy,\r\n\t\t\tdisabled,\r\n\t\t\taction,\r\n\t\t\tonClick\r\n\t\t} = this.props\r\n\r\n\t\t// Only handle left mouse button clicks\r\n\t\t// ignoring those ones with a modifier key pressed.\r\n\t\tif (event.button !== 0\r\n\t\t\t|| event.shiftKey\r\n\t\t\t|| event.altKey\r\n\t\t\t|| event.ctrlKey\r\n\t\t\t|| event.metaKey) {\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tif (wait || busy || this.state.wait || disabled) {\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\t// Could be just a \"submit\" button without having any `action`.\r\n\t\t// Could also be just a `link` button.\r\n\t\t// Therefore \"preventing default\" only if `action` is set:\r\n\t\t// for example, if `link` is set and no `action`\r\n\t\t// then it should proceed with navigating to the `link`.\r\n\t\t// And if `link` is set and `action` is specified too\r\n\t\t// then it will prevent it from navigating to the `link`.\r\n\t\tif (action || onClick) {\r\n\t\t\tevent.preventDefault()\r\n\t\t}\r\n\r\n\t\tthis.buttonOnClick()\r\n\t}\r\n\r\n\tbuttonOnClick = (event) => {\r\n\t\tconst { action, onClick } = this.props\r\n\r\n\t\tlet result\r\n\t\t// Could be just a `<button type=\"submit\"/>`\r\n\t\t// without any `action` supplied.\r\n\t\tif (action) {\r\n\t\t\tresult = action()\r\n\t\t} else if (onClick) {\r\n\t\t\tresult = onClick()\r\n\t\t}\r\n\r\n\t\tif (result && typeof result.then === 'function') {\r\n\t\t\tthis.setState({ wait: true })\r\n\t\t\tresult.then(\r\n\t\t\t\t() => this._isMounted && this.setState({ wait: false }),\r\n\t\t\t\t() => this._isMounted && this.setState({ wait: false })\r\n\t\t\t)\r\n\t\t}\r\n\t}\r\n}\r\n\r\nconst Button = React.forwardRef((props, ref) => (\r\n\t<Button_ {...props} buttonRef={ref}/>\r\n))\r\n\r\nButton.propTypes = {\r\n\t// onClick handler.\r\n\t// Doesn't receive `event` by default.\r\n\t// Can be `async`/`await` or return a `Promise`\r\n\t// in which case it will show \"wait\" animation.\r\n\tonClick: PropTypes.func,\r\n\r\n\t// onClick handler.\r\n\t// (deprecated, use `onClick(event)` instead)\r\n\taction: PropTypes.func,\r\n\r\n\t// If `wait` is `true` then the button\r\n\t// will be disabled and a spinner will be shown.\r\n\twait: PropTypes.bool,\r\n\r\n\t// (deprecated)\r\n\t// (use `wait` instead)\r\n\t// If `busy` is `true` then the button\r\n\t// will be disabled and a spinner will be shown.\r\n\tbusy: PropTypes.bool,\r\n\r\n\t// Disables the button\r\n\tdisabled: PropTypes.bool,\r\n\r\n\t// When `true`, the button will submit an enclosing form.\r\n\tsubmit: PropTypes.bool,\r\n\r\n\t// If `link` is set, then the button is gonna be an <a/> tag.\r\n\tlink: PropTypes.oneOfType([ PropTypes.string, PropTypes.bool ]),\r\n\r\n\t// Custom React component for the button.\r\n\tcomponent: PropTypes.func,\r\n\r\n\t// Set to `true` to stretch the button to full width.\r\n\tstretch: PropTypes.bool,\r\n\r\n\t// CSS style object for the button container\r\n\tstyle: PropTypes.object,\r\n\r\n\t// CSS class name\r\n\tclassName: PropTypes.string\r\n}\r\n\r\nexport default Button"]}