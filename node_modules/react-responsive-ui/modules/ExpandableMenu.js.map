{"version":3,"sources":["../source/ExpandableMenu.js"],"names":["PureComponent","Component","ExpandableMenu","state","button","onExpand","setState","isExpanded","onCollapse","focusOut","focus","cooldown","cooldownTimer","setTimeout","toggler","current","expand","list","collapse","toggle","onFocusOut","window","rruiCollapseOnFocusOut","storeListRef","ref","storeTogglerRef","getButton","onBlur","event","onClick","onKeyDown","defaultPrevented","ctrlKey","altKey","shiftKey","metaKey","keyCode","preventDefault","clearTimeout","props","buttonTitle","disabled","style","className","buttonProps","buttonClassName","toggleElement","togglerAriaLabel","togglerAriaHasPopup","togglerClassName","children","rest","menuToggler","menuItems","TogglerButton","togglerElement","createElement","undefined","Children","toArray","shift","cloneElement","propTypes","string","object","closeLabel","closeButtonIcon","oneOfType","func","oneOf","isRequired","elementType","node","bool","defaultProps"],"mappings":"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","file":"ExpandableMenu.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classNames from 'classnames'\r\nimport createRef from 'react-create-ref'\r\n\r\nimport ExpandableList from './ExpandableList'\r\nimport List from './List'\r\nimport Close, { CloseIcon } from './Close'\r\n\r\nimport { focus } from './utility/focus'\r\n\r\n// `PureComponent` is only available in React >= 15.3.0.\r\nconst PureComponent = React.PureComponent || React.Component\r\n\r\nexport default class ExpandableMenu extends PureComponent\r\n{\r\n\tstatic propTypes =\r\n\t{\r\n\t\t// Component CSS class\r\n\t\tclassName  : PropTypes.string,\r\n\r\n\t\t// CSS style object\r\n\t\tstyle      : PropTypes.object,\r\n\r\n\t\t// `aria-label` for the \"Close\" button\r\n\t\t// (which is an \"x\" visible in fullscreen mode).\r\n\t\tcloseLabel : PropTypes.string,\r\n\r\n\t\t// The \"x\" button icon that closes the `<Select/>`\r\n\t\t// in fullscreen mode on mobile devices.\r\n\t\tcloseButtonIcon : PropTypes.oneOfType([PropTypes.func, PropTypes.oneOf([false])]).isRequired,\r\n\r\n\t\t// Must accept a `ref`.\r\n\t\t// Receives properties: `onClick`, `onKeyDown`, `onBlur`, `aria-expanded`.\r\n\t\tbutton : PropTypes.elementType,\r\n\t\tbuttonProps : PropTypes.object,\r\n\t\tbuttonClassName : PropTypes.string,\r\n\r\n\t\ttoggleElement : PropTypes.node,\r\n\r\n\t\t// (deprecated, use `button` component instead)\r\n\t\ttoggler : PropTypes.func,\r\n\r\n\t\t// (deprecated, use `buttonProps` instead)\r\n\t\ttogglerAriaLabel : PropTypes.string,\r\n\r\n\t\t// (deprecated, use `buttonProps` instead)\r\n\t\ttogglerAriaHasPopup : PropTypes.string,\r\n\r\n\t\t// (deprecated, use `buttonProps` instead)\r\n\t\ttogglerClassName : PropTypes.string,\r\n\r\n\t\tbuttonTitle: PropTypes.string,\r\n\t\tdisabled: PropTypes.bool\r\n\t}\r\n\r\n\tstatic defaultProps =\r\n\t{\r\n\t\t// The \"x\" button icon that closes the `<Select/>`\r\n\t\t// in fullscreen mode on mobile devices.\r\n\t\tcloseButtonIcon : CloseIcon\r\n\t}\r\n\r\n\tstate = {}\r\n\r\n\t// The DOM Element reference is only used to determine\r\n\t// whether the focus is \"inside\" the component or \"outside\" of it,\r\n\t// and also for focusing the `<button/>` when closing expandable menu.\r\n\tbutton = createRef()\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tclearTimeout(this.cooldownTimer)\r\n\t}\r\n\r\n\tonExpand = () => this.setState({ isExpanded: true })\r\n\r\n\tonCollapse = ({ focusOut }) => {\r\n\t\tif (!focusOut) {\r\n\t\t\tthis.focus()\r\n\t\t}\r\n\t\tthis.setState({ isExpanded: false })\r\n\t\t// A workaround for Safari (both macOS and iOS) bug: `<button/>`s not getting focus.\r\n\t\t// https://stackoverflow.com/questions/20359962/jquery-mobile-focusout-event-for-relatedtarget-returns-incorrect-result-in-safar\r\n\t\tthis.cooldown = true\r\n\t\tthis.cooldownTimer = setTimeout(() => this.cooldown = false, 30)\r\n\t}\r\n\r\n\t// `this.toggler` is deprecated.\r\n\tfocus = () => focus(this.toggler || this.button.current)\r\n\r\n\texpand   = () => this.list.expand()\r\n\tcollapse = () => this.list.collapse()\r\n\ttoggle   = () => this.list.toggle()\r\n\r\n\tonFocusOut = () => {\r\n\t\t// `window.rruiCollapseOnFocusOut` can be used\r\n\t\t// for debugging expandable contents.\r\n\t\tif (window.rruiCollapseOnFocusOut !== false) {\r\n\t\t\tthis.collapse()\r\n\t\t}\r\n\t}\r\n\r\n\tstoreListRef = (ref) => this.list = ref\r\n\r\n\t// (legacy) (deprecated)\r\n\t// Is used to focus legacy togglers.\r\n\tstoreTogglerRef = (ref) => this.toggler = ref\r\n\r\n\tgetButton = () => this.button.current\r\n\r\n\tonBlur = (event) => this.list && this.list.onBlur(event)\r\n\r\n\tonClick = (event) => {\r\n\t\t// A workaround for Safari (both macOS and iOS) bug: `<button/>`s not getting focus.\r\n\t\t// https://stackoverflow.com/questions/20359962/jquery-mobile-focusout-event-for-relatedtarget-returns-incorrect-result-in-safar\r\n\t\tif (!this.cooldown) {\r\n\t\t\tthis.toggle()\r\n\t\t}\r\n\t}\r\n\r\n\tonKeyDown = (event) => {\r\n\t\tif (event.defaultPrevented) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\tif (event.ctrlKey || event.altKey || event.shiftKey || event.metaKey) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\tswitch (event.keyCode) {\r\n\t\t\t// \"Up\" arrow.\r\n\t\t\t// Select the previous item (if present).\r\n\t\t\tcase 38:\r\n\t\t\t// \"Down\" arrow.\r\n\t\t\t// Select the next item (if present).\r\n\t\t\tcase 40:\r\n\t\t\t\treturn this.list.onKeyDown(event)\r\n\r\n\t\t\t// \"Enter\".\r\n\t\t\tcase 13:\r\n\t\t\t\t// Submit containing `<form/>`.\r\n\t\t\t\t// Expand otherwise.\r\n\t\t\t\tthis.expand()\r\n\t\t\t\treturn event.preventDefault()\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tbuttonTitle,\r\n\t\t\tdisabled,\r\n\t\t\tstyle,\r\n\t\t\tclassName,\r\n\t\t\ttoggler,\r\n\t\t\tbutton,\r\n\t\t\tbuttonProps,\r\n\t\t\tbuttonClassName,\r\n\t\t\ttoggleElement,\r\n\t\t\ttogglerAriaLabel,\r\n\t\t\ttogglerAriaHasPopup,\r\n\t\t\ttogglerClassName,\r\n\t\t\tchildren,\r\n\t\t\t...rest\r\n\t\t} = this.props\r\n\r\n\t\tconst { isExpanded } = this.state\r\n\r\n\t\tlet menuToggler\r\n\t\tlet menuItems\r\n\r\n\t\tif (toggler || button || toggleElement) {\r\n\t\t\t// \"button\" string is used instead of a `DefaultTogglerButton`\r\n\t\t\t// so that the `ref` is the `<button/>` DOM Element.\r\n\t\t\t// (`.focus()`, `.contains()`).\r\n\t\t\tconst TogglerButton = button || 'button'\r\n\t\t\tconst togglerElement = toggleElement || (toggler ? React.createElement(toggler) : null)\r\n\t\t\tmenuItems = children\r\n\t\t\tmenuToggler = (\r\n\t\t\t\t<TogglerButton\r\n\t\t\t\t\ttype={button ? undefined : 'button'}\r\n\t\t\t\t\taria-haspopup={ togglerAriaHasPopup }\r\n\t\t\t\t\taria-label={ togglerAriaLabel }\r\n\t\t\t\t\tclassName={ classNames(togglerClassName, buttonClassName, {\r\n\t\t\t\t\t\t'rrui__button-reset': toggleElement,\r\n\t\t\t\t\t\t'rrui__outline': toggleElement\r\n\t\t\t\t\t}) }\r\n\t\t\t\t\t{...buttonProps}\r\n\t\t\t\t\tref={ this.button }\r\n\t\t\t\t\tonClick={ this.onClick }\r\n\t\t\t\t\tonKeyDown={ this.onKeyDown }\r\n\t\t\t\t\tonBlur={ this.onBlur }\r\n\t\t\t\t\taria-expanded={ isExpanded ? true : false }\r\n\t\t\t\t\ttitle={ buttonTitle }\r\n\t\t\t\t\tdisabled={ disabled }>\r\n\t\t\t\t\t{ togglerElement }\r\n\t\t\t\t</TogglerButton>\r\n\t\t\t)\r\n\t\t} else {\r\n\t\t\t// Legacy way: the first child was the toggler.\r\n\t\t\tmenuItems = React.Children.toArray(children)\r\n\t\t\tmenuToggler = menuItems.shift()\r\n\t\t\tmenuToggler = (\r\n\t\t\t\t<div\r\n\t\t\t\t\tref={ this.button }\r\n\t\t\t\t\tonClick={ this.onClick }\r\n\t\t\t\t\tonKeyDown={ this.onKeyDown }\r\n\t\t\t\t\tonBlur={ this.onBlur }>\r\n\t\t\t\t\t{ React.cloneElement(menuToggler, { ref : this.storeTogglerRef }) }\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tstyle={ style }\r\n\t\t\t\tclassName={ classNames('rrui__menu', className) }>\r\n\r\n\t\t\t\t{menuToggler}\r\n\r\n\t\t\t\t<ExpandableList\r\n\t\t\t\t\t{...rest}\r\n\t\t\t\t\tanimation=\"fade-up\"\r\n\t\t\t\t\tref={this.storeListRef}\r\n\t\t\t\t\taria-label={this.props['aria-label']}\r\n\t\t\t\t\ttabbable={false}\r\n\t\t\t\t\tscrollMaxItems={0}\r\n\t\t\t\t\tonCollapse={this.onCollapse}\r\n\t\t\t\t\tonExpand={this.onExpand}\r\n\t\t\t\t\tonFocusOut={this.onFocusOut}\r\n\t\t\t\t\tgetTogglerNode={this.getButton}\r\n\t\t\t\t\tfocusSelectedItem={false}\r\n\t\t\t\t\tclassName=\"rrui__shadow\">\r\n\t\t\t\t\t{menuItems}\r\n\t\t\t\t</ExpandableList>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}"]}