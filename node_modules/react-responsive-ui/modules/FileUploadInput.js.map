{"version":3,"sources":["../source/FileUploadInput.js"],"names":["getAcceptFromExt","FileUploadInput","onFileSelect","event","props","onChange","multiple","ieTimer","value","Array","prototype","slice","call","target","files","setTimeout","undefined","click","disabled","input","storeInputRef","ref","clearTimeout","error","required","rest","supportsMultipleFileUploadOnInputElement","HIDDEN_STYLE","Component","propTypes","func","isRequired","bool","string","display","document","createElement","ext","isArray","map","join"],"mappings":";;;;;;;;;;;;;QAuFgBA,gB,GAAAA,gB;;AAvFhB;;;;AACA;;;;AACA;;;;;;;;;;;;;;IAEqBC,e;;;;;;;;;;;;;;sMAYpBC,Y,GAAe,UAACC,KAAD,EAAW;AAAA,qBACM,MAAKC,KADX;AAAA,OACjBC,QADiB,eACjBA,QADiB;AAAA,OACPC,QADO,eACPA,QADO;;AAGzB;AACA;;AACA,OAAI,MAAKC,OAAT,EAAkB;AACjB;AACA;;AAED;AACA,OAAMC,QAAQC,MAAMC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BT,MAAMU,MAAN,CAAaC,KAAxC,CAAd;AACA;AACAT,YAASC,WAAWE,KAAX,GAAmBA,MAAM,CAAN,CAA5B;;AAEA;AACA;AACA,SAAKD,OAAL,GAAeQ,WAAW;AAAA,WAAM,MAAKR,OAAL,GAAeS,SAArB;AAAA,IAAX,EAA2C,CAA3C,CAAf;AACA;AACA;AACA;AACAb,SAAMU,MAAN,CAAaL,KAAb,GAAqB,IAArB;AACA,G,QAEDS,K,GAAQ,YAAM;AAAA,OACLC,QADK,GACQ,MAAKd,KADb,CACLc,QADK;;AAEb,OAAIA,QAAJ,EAAc;AACb;AACA;AACD,SAAKC,KAAL,CAAWF,KAAX;AACA,G,QAEDG,a,GAAgB,UAACC,GAAD;AAAA,UAAS,MAAKF,KAAL,GAAaE,GAAtB;AAAA,G;;;;;yCAnCO;AACtBC,gBAAa,KAAKf,OAAlB;AACA;;;2BAmCQ;AAAA,gBAOJ,KAAKH,KAPD;AAAA,OAEPmB,KAFO,UAEPA,KAFO;AAAA,OAGPC,QAHO,UAGPA,QAHO;AAAA,OAIPnB,QAJO,UAIPA,QAJO;AAAA,OAKPC,QALO,UAKPA,QALO;AAAA,OAMJmB,IANI;;AAQR,UACC,oDACKA,IADL;AAEC,SAAK,KAAKL,aAFX;AAGC,UAAK,MAHN;AAIC,cAAWM,2CAA2CpB,QAA3C,GAAsDU,SAJlE;AAKC,cAAW,KAAKd,YALjB;AAMC,qBAAgBsB,WAAW,IAAX,GAAkBR,SANnC;AAOC,oBAAeO,QAAQ,IAAR,GAAeP,SAP/B;AAQC,WAAQW,YART,IADD;AAWA;;;;EAhE2C,gBAAMC,S,UAC3CC,S,GAAY;AAClBxB,WAAU,oBAAUyB,IAAV,CAAeC,UADP;AAElBzB,WAAU,oBAAU0B,IAFF;AAGlBT,QAAO,oBAAUU,MAHC;AAIlBT,WAAU,oBAAUQ;AAJF,C;kBADC/B,e;;;AAmErB,IAAM0B,eAAe;AACpBO,UAAS;;AAGV;AACA;AALqB,CAArB,CAMO,IAAMR,8FACZ,OAAOS,QAAP,KAAoB,WAApB,IAAmCA,QAAnC,IAA+CA,SAASC,aAAxD,GACG,cAAcD,SAASC,aAAT,CAAuB,OAAvB,CADjB,GAEG,IAHG;;AAKP;;;;;AAKO,SAASpC,gBAAT,CAA0BqC,GAA1B,EAA+B;AACrC,KAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;AAC5B,SAAO,MAAMA,GAAb;AACA;AACD,KAAI5B,MAAM6B,OAAN,CAAcD,GAAd,CAAJ,EAAwB;AACvB,SAAOA,IAAIE,GAAJ,CAAQ;AAAA,UAAO,MAAMF,GAAb;AAAA,GAAR,EAA0BG,IAA1B,CAA+B,GAA/B,CAAP;AACA;AACD","file":"FileUploadInput.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classNames from 'classnames'\r\n\r\nexport default class FileUploadInput extends React.Component {\r\n\tstatic propTypes = {\r\n\t\tonChange: PropTypes.func.isRequired,\r\n\t\tmultiple: PropTypes.bool,\r\n\t\terror: PropTypes.string,\r\n\t\trequired: PropTypes.bool\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tclearTimeout(this.ieTimer)\r\n\t}\r\n\r\n\tonFileSelect = (event) => {\r\n\t\tconst { onChange, multiple } = this.props\r\n\r\n\t\t// Internet Explorer triggers `onChange` when setting\r\n\t\t// `event.target.value` manually, so ignore such events.\r\n\t\tif (this.ieTimer) {\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\t// Convert from `FileList` to an `Array`.\r\n\t\tconst value = Array.prototype.slice.call(event.target.files)\r\n\t\t// `<input multiple/>` attribute is not supported in all browsers.\r\n\t\tonChange(multiple ? value : value[0])\r\n\r\n\t\t// Internet Explorer triggers `onChange` when setting\r\n\t\t// `event.target.value` manually, hence the cooldown timer.\r\n\t\tthis.ieTimer = setTimeout(() => this.ieTimer = undefined, 0)\r\n\t\t// Reset the selected file\r\n\t\t// so that `onChange` is triggered again next time\r\n\t\t// even if the user selects the same file.\r\n\t\tevent.target.value = null\r\n\t}\r\n\r\n\tclick = () => {\r\n\t\tconst { disabled } = this.props\r\n\t\tif (disabled) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\tthis.input.click()\r\n\t}\r\n\r\n\tstoreInputRef = (ref) => this.input = ref\r\n\r\n\trender() {\r\n\t\tconst {\r\n\t\t\terror,\r\n\t\t\trequired,\r\n\t\t\tonChange,\r\n\t\t\tmultiple,\r\n\t\t\t...rest\r\n\t\t} = this.props\r\n\t\treturn (\r\n\t\t\t<input\r\n\t\t\t\t{...rest}\r\n\t\t\t\tref={this.storeInputRef}\r\n\t\t\t\ttype=\"file\"\r\n\t\t\t\tmultiple={ supportsMultipleFileUploadOnInputElement ? multiple : undefined }\r\n\t\t\t\tonChange={ this.onFileSelect }\r\n\t\t\t\taria-required={ required ? true : undefined }\r\n\t\t\t\taria-invalid={ error ? true : undefined }\r\n\t\t\t\tstyle={ HIDDEN_STYLE }/>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst HIDDEN_STYLE = {\r\n\tdisplay: 'none'\r\n}\r\n\r\n// Copied from:\r\n// https://github.com/react-dropzone/react-dropzone/blob/master/src/utils/index.js\r\nexport const supportsMultipleFileUploadOnInputElement =\r\n\ttypeof document !== 'undefined' && document && document.createElement\r\n\t\t? 'multiple' in document.createElement('input')\r\n\t\t: true\r\n\r\n/**\r\n * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file#attr-accept\r\n * @param  {(string|string[])} [ext]\r\n * @return {string} [accept]\r\n */\r\nexport function getAcceptFromExt(ext) {\r\n\tif (typeof ext === 'string') {\r\n\t\treturn '.' + ext\r\n\t}\r\n\tif (Array.isArray(ext)) {\r\n\t\treturn ext.map(ext => '.' + ext).join(',')\r\n\t}\r\n}"]}