{"version":3,"sources":["../source/FileUploadButton.js"],"names":["FileUploadButton","onClick","fileInput","click","storeFileInputRef","ref","props","Component","component","onChange","multiple","disabled","error","required","accept","ext","rest","propTypes","elementType","func","isRequired","bool","oneOfType","string","arrayOf"],"mappings":";;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AAEA;;;;;;;;;;;;;;IAEqBA,gB;;;;;;;;;;;;;;wMAkCpBC,O,GAAU,YAAM;AACf,SAAKC,SAAL,CAAeC,KAAf;AACA,G,QAEDC,iB,GAAoB,UAACC,GAAD;AAAA,UAAS,MAAKH,SAAL,GAAiBG,GAA1B;AAAA,G;;;;;2BAEX;AAAA,gBAWJ,KAAKC,KAXD;AAAA,OAEIC,SAFJ,UAEPC,SAFO;AAAA,OAGPC,QAHO,UAGPA,QAHO;AAAA,OAIPC,QAJO,UAIPA,QAJO;AAAA,OAKPC,QALO,UAKPA,QALO;AAAA,OAMPC,KANO,UAMPA,KANO;AAAA,OAOPC,QAPO,UAOPA,QAPO;AAAA,OAQPC,MARO,UAQPA,MARO;AAAA,OASPC,GATO,UASPA,GATO;AAAA,OAUJC,IAVI;;AAaR,UACC;AAAA,oBAAO,QAAP;AAAA;AACC;AACC,UAAK,KAAKZ,iBADX;AAEC,eAAUK,QAFX;AAGC,eAAUC,QAHX;AAIC,eAAUC,QAJX;AAKC,YAAOC,KALR;AAMC,eAAUC,QANX;AAOC,aAAQC,UAAWC,OAAO,uCAAiBA,GAAjB,CAP3B,GADD;AASC,kCAAC,SAAD,eACKC,IADL;AAEC,eAAUL,QAFX;AAGC,cAAS,KAAKV,OAHf;AATD,IADD;AAgBA;;;;EArE4C,gBAAMM,S,UAC5CU,S,GAAY;AAClBT,YAAW,oBAAUU,WADH;;AAGlB;AACAT,WAAU,oBAAUU,IAAV,CAAeC,UAJP;;AAMlB;AACAV,WAAU,oBAAUW,IAPF;;AASlB;AACAV,WAAU,oBAAUU,IAVF;;AAYlB;AACAT,QAAO,oBAAUU,SAAV,CAAoB,CAC1B,oBAAUC,MADgB,EAE1B,oBAAUF,IAFgB,CAApB,CAbW;;AAkBlB;AACA;AACAR,WAAU,oBAAUQ,IApBF;;AAsBlB;AACA;AACAP,SAAQ,oBAAUS,MAxBA;;AA0BlB;AACAR,MAAK,oBAAUO,SAAV,CAAoB,CACxB,oBAAUE,OAAV,CAAkB,oBAAUD,MAA5B,CADwB,EAExB,oBAAUA,MAFc,CAApB;AA3Ba,C;kBADCvB,gB","file":"FileUploadButton.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classNames from 'classnames'\r\n\r\nimport FileUploadInput, { getAcceptFromExt } from './FileUploadInput'\r\n\r\nexport default class FileUploadButton extends React.Component {\r\n\tstatic propTypes = {\r\n\t\tcomponent: PropTypes.elementType,\r\n\r\n\t\t// On file(s) chosen.\r\n\t\tonChange: PropTypes.func.isRequired,\r\n\r\n\t\t// Allows choosing multiple files if `true`.\r\n\t\tmultiple: PropTypes.bool,\r\n\r\n\t\t// Disables the file input.\r\n\t\tdisabled: PropTypes.bool,\r\n\r\n\t\t// Indicates that the input is invalid.\r\n\t\terror: PropTypes.oneOfType([\r\n\t\t\tPropTypes.string,\r\n\t\t\tPropTypes.bool\r\n\t\t]),\r\n\r\n\t\t// Whether choosing a file (or files) is required.\r\n\t\t// Sets `aria-required` on the file `<input/>`.\r\n\t\trequired: PropTypes.bool,\r\n\r\n\t\t// Can be used to restrict the file MIME-types or extensions available for selection.\r\n\t\t// https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file#attr-accept\r\n\t\taccept: PropTypes.string,\r\n\r\n\t\t// Will be transformed to `accept`.\r\n\t\text: PropTypes.oneOfType([\r\n\t\t\tPropTypes.arrayOf(PropTypes.string),\r\n\t\t\tPropTypes.string\r\n\t\t])\r\n\t}\r\n\r\n\tonClick = () => {\r\n\t\tthis.fileInput.click()\r\n\t}\r\n\r\n\tstoreFileInputRef = (ref) => this.fileInput = ref\r\n\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tcomponent: Component,\r\n\t\t\tonChange,\r\n\t\t\tmultiple,\r\n\t\t\tdisabled,\r\n\t\t\terror,\r\n\t\t\trequired,\r\n\t\t\taccept,\r\n\t\t\text,\r\n\t\t\t...rest\r\n\t\t} = this.props\r\n\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<FileUploadInput\r\n\t\t\t\t\tref={this.storeFileInputRef}\r\n\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\tmultiple={multiple}\r\n\t\t\t\t\tdisabled={disabled}\r\n\t\t\t\t\terror={error}\r\n\t\t\t\t\trequired={required}\r\n\t\t\t\t\taccept={accept || (ext && getAcceptFromExt(ext))}/>\r\n\t\t\t\t<Component\r\n\t\t\t\t\t{...rest}\r\n\t\t\t\t\tdisabled={disabled}\r\n\t\t\t\t\tonClick={this.onClick}/>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}"]}