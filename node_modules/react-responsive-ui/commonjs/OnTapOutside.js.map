{"version":3,"sources":["../source/OnTapOutside.js"],"names":["OnTapOutside","onTouchStart","event","touches","length","onTouchCancel","touch","changedTouches","initialTouchX","clientX","initialTouchY","clientY","touchId","identifier","tapping","onTouchMove","moveThreshold","props","x","y","undefined","deltaX","Math","abs","deltaY","onTouchEnd","onTap","target","getContainerNode","getTogglerNode","onTapOutside","contains","focusOut","document","addEventListener","removeEventListener","stopListeningToTouches","children","Component","propTypes","func","isRequired","number","defaultProps"],"mappings":"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","file":"OnTapOutside.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n/**\r\n * This \"component\" is only used to call its\r\n * `.listenToTouches()` and `.stopListeningToTouches()`\r\n * methods manually through a `ref`.\r\n */\r\nexport default class OnTapOutside extends React.Component\r\n{\r\n\tstatic propTypes = {\r\n\t\tonTapOutside: PropTypes.func.isRequired,\r\n\t\tgetTogglerNode: PropTypes.func,\r\n\t\tgetContainerNode: PropTypes.func.isRequired,\r\n\t\tmoveThreshold: PropTypes.number.isRequired\r\n\t}\r\n\r\n\tstatic defaultProps = {\r\n\t\tmoveThreshold: 5\r\n\t}\r\n\r\n\tlistenToTouches()\r\n\t{\r\n\t\tdocument.addEventListener('touchstart', this.onTouchStart)\r\n\t\tdocument.addEventListener('touchmove', this.onTouchMove)\r\n\t\tdocument.addEventListener('touchend', this.onTouchEnd)\r\n\t\tdocument.addEventListener('touchcancel', this.onTouchCancel)\r\n\t}\r\n\r\n\tstopListeningToTouches()\r\n\t{\r\n\t\tdocument.removeEventListener('touchstart', this.onTouchStart)\r\n\t\tdocument.removeEventListener('touchmove', this.onTouchMove)\r\n\t\tdocument.removeEventListener('touchend', this.onTouchEnd)\r\n\t\tdocument.removeEventListener('touchcancel', this.onTouchCancel)\r\n\t}\r\n\r\n\tcomponentWillUnmount()\r\n\t{\r\n\t\tthis.stopListeningToTouches()\r\n\t}\r\n\r\n\tonTouchStart = (event) => {\r\n\t\t// Ignore multitouch.\r\n\t\tif (event.touches.length > 1) {\r\n\t\t\t// Reset.\r\n\t\t\treturn this.onTouchCancel()\r\n\t\t}\r\n\t\tconst touch = event.changedTouches[0]\r\n\t\tthis.initialTouchX = touch.clientX\r\n\t\tthis.initialTouchY = touch.clientY\r\n\t\tthis.touchId = touch.identifier\r\n\t\tthis.tapping = true\r\n\t}\r\n\r\n\tonTouchMove = (event) =>\r\n\t{\r\n\t\tconst { moveThreshold } = this.props\r\n\r\n\t\tif (!this.tapping) {\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tlet x\r\n\t\tlet y\r\n\t\tfor (const touch of event.changedTouches) {\r\n\t\t\tif (touch.identifier === this.touchId) {\r\n\t\t\t\tx = touch.clientX\r\n\t\t\t\ty = touch.clientY\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// If not the touch.\r\n\t\tif (x === undefined) {\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tconst deltaX = Math.abs(x - this.initialTouchX)\r\n\t\tconst deltaY = Math.abs(y - this.initialTouchY)\r\n\r\n\t\t// Reset on touch move.\r\n\t\tif (deltaX > moveThreshold || deltaY > moveThreshold) {\r\n\t\t\tthis.onTouchCancel()\r\n\t\t}\r\n\t}\r\n\r\n\tonTouchEnd = (event) =>\r\n\t{\r\n\t\tif (!this.tapping) {\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tfor (const touch of event.changedTouches) {\r\n\t\t\tif (touch.identifier === this.touchId) {\r\n\t\t\t\t// Reset.\r\n\t\t\t\tthis.onTouchCancel()\r\n\t\t\t\t// Handle the tap.\r\n\t\t\t\t// https://developer.mozilla.org/en-US/docs/Web/API/Touch\r\n\t\t\t\tthis.onTap(event, touch.target)\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tonTouchCancel = () =>\r\n\t{\r\n\t\tthis.initialTouchX = undefined\r\n\t\tthis.initialTouchY = undefined\r\n\t\tthis.touchId = undefined\r\n\t\tthis.tapping = false\r\n\t}\r\n\r\n\t// On mobile devices \"blur\" event isn't triggered\r\n\t// when a user taps outside. This is to allow touch scrolling\r\n\t// while not losing focus on an input field or a button.\r\n\t// Adding a manual \"on click\" listener to emulate\r\n\t// \"on blur\" event when user taps outside (to collapse the expandable).\r\n\tonTap = (event, target) =>\r\n\t{\r\n\t\tconst {\r\n\t\t\tgetContainerNode,\r\n\t\t\tgetTogglerNode,\r\n\t\t\tonTapOutside\r\n\t\t} = this.props\r\n\r\n\t\tif (getContainerNode().contains(target)) {\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tif (getTogglerNode) {\r\n\t\t\tif (getTogglerNode().contains(target)) {\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (onTapOutside) {\r\n\t\t\tthis.focusOut = true\r\n\t\t\tonTapOutside(event)\r\n\t\t\tthis.focusOut = undefined\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { children } = this.props\r\n\t\treturn children\r\n\t}\r\n}"]}