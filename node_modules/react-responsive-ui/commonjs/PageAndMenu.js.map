{"version":3,"sources":["../source/PageAndMenu.js"],"names":["Context","PageAndMenu","toggleMenu","show","menu","toggle","setState","menuIsExpanded","isShown","focus","menuButton","element","registerMenu","Error","undefined","registerMenuButton","setTogglerCooldown","setCooldown","getTogglerNode","state","props"],"mappings":";;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;;;;;AAEO,IAAMA,4BAAU,mCAAhB;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IAEqBC,W;;;AACpB,wBAAc;AAAA;;AAEb;AACA;AAHa;;AAAA,QAyBdC,UAzBc,GAyBD,UAACC,IAAD,EAAU;AACtB,SAAKC,IAAL,CAAUC,MAAV,CAAiBF,IAAjB,EAAuB,YAAM;AAC5B,UAAKG,QAAL,CAAc;AACbC,qBAAgB,MAAKH,IAAL,CAAUI,OAAV;AADH,KAAd;AAGA;AACA;AACA,QAAI,MAAKJ,IAAL,CAAUI,OAAV,EAAJ,EAAyB;AACxB,SAAMJ,OAAO,MAAKA,IAAL,CAAUA,IAAV,EAAb;AACAA,aAAQA,KAAKK,KAAb,IAAsBL,KAAKK,KAAL,EAAtB;AACA,KAHD,MAGO;AACN,WAAKC,UAAL,CAAgBC,OAAhB,GAA0BF,KAA1B;AACA;AACD,IAZD;AAaA,GAvCa;;AAAA,QAyCdG,YAzCc,GAyCC,UAACR,IAAD,EAAU;AACxB,OAAI,MAAKA,IAAT,EAAe;AACd,UAAM,IAAIS,KAAJ,CAAU,yEAAV,CAAN;AACA;AACD,SAAKT,IAAL,GAAYA,IAAZ;AACA;AACA,UAAO;AAAA,WAAM,MAAKA,IAAL,GAAYU,SAAlB;AAAA,IAAP;AACA,GAhDa;;AAAA,QAkDdC,kBAlDc,GAkDO,UAACL,UAAD,EAAgB;AACpC,OAAI,MAAKA,UAAT,EAAqB;AACpB,UAAM,IAAIG,KAAJ,CAAU,gFAAV,CAAN;AACA;AACD,SAAKH,UAAL,GAAkBA,UAAlB;AACA;AACA,UAAO;AAAA,WAAM,MAAKA,UAAL,GAAkBI,SAAxB;AAAA,IAAP;AACA,GAzDa;;AAAA,QA2DdE,kBA3Dc,GA2DO;AAAA,UAAM,MAAKN,UAAL,CAAgBO,WAAhB,EAAN;AAAA,GA3DP;;AAAA,QA4DdC,cA5Dc,GA4DG;AAAA,UAAM,MAAKR,UAAL,CAAgBC,OAAhB,EAAN;AAAA,GA5DH;;AAIb,QAAKQ,KAAL,GAAa;AACZ;AACA;AACA;AACAZ,mBAAqBO,SAJT,EAIoB;AAChCZ,eAAqB,MAAKA,UALd;AAMZU,iBAAqB,MAAKA,YANd;AAOZG,uBAAqB,MAAKA,kBAPd;AAQZC,uBAAqB,MAAKA,kBARd;AASZE,mBAAqB,MAAKA;AATd,GAAb;AAJa;AAeb;;;;2BAEQ;AACR,UACC;AAAC,WAAD,CAAS,QAAT;AAAA,MAAkB,OAAO,KAAKC,KAA9B;AACC,yCAAS,KAAKC,KAAd;AADD,IADD;AAKA;;;;;;kBAxBmBnB,W","file":"PageAndMenu.js","sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport createContext from 'create-react-context'\r\n\r\nexport const Context = createContext()\r\n\r\n// export const contextPropTypes = {\r\n// \tmenuIsExpanded     : PropTypes.bool.isRequired,\r\n// \ttoggleMenu         : PropTypes.func.isRequired,\r\n// \tregisterMenu       : PropTypes.func.isRequired,\r\n// \tregisterMenuButton : PropTypes.func.isRequired,\r\n// \tsetTogglerCooldown : PropTypes.func.isRequired,\r\n// \tgetTogglerNode     : PropTypes.func.isRequired\r\n// }\r\n\r\nexport default class PageAndMenu extends Component {\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t\t// `state` is placed here to so that it's initialized\r\n\t\t// after all instance methods because it references them.\r\n\t\tthis.state = {\r\n\t\t\t// Using `undefined` for `menuIsExpanded` instead of `false`\r\n\t\t\t// because menu icon uses it to determine whether\r\n\t\t\t// the button has been activated yet.\r\n\t\t\tmenuIsExpanded     : undefined, // false,\r\n\t\t\ttoggleMenu         : this.toggleMenu,\r\n\t\t\tregisterMenu       : this.registerMenu,\r\n\t\t\tregisterMenuButton : this.registerMenuButton,\r\n\t\t\tsetTogglerCooldown : this.setTogglerCooldown,\r\n\t\t\tgetTogglerNode     : this.getTogglerNode\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Context.Provider value={this.state}>\r\n\t\t\t\t<div {...this.props}/>\r\n\t\t\t</Context.Provider>\r\n\t\t)\r\n\t}\r\n\r\n\ttoggleMenu = (show) => {\r\n\t\tthis.menu.toggle(show, () => {\r\n\t\t\tthis.setState({\r\n\t\t\t\tmenuIsExpanded: this.menu.isShown()\r\n\t\t\t})\r\n\t\t\t// Focus the menu when it's expanded.\r\n\t\t\t// Focus the menu button when menu is collapsed.\r\n\t\t\tif (this.menu.isShown()) {\r\n\t\t\t\tconst menu = this.menu.menu()\r\n\t\t\t\tmenu && menu.focus && menu.focus()\r\n\t\t\t} else {\r\n\t\t\t\tthis.menuButton.element().focus()\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tregisterMenu = (menu) => {\r\n\t\tif (this.menu) {\r\n\t\t\tthrow new Error('[react-responsive-ui] There already is a menu registered for this page.')\r\n\t\t}\r\n\t\tthis.menu = menu\r\n\t\t// Return `.unregister()`.\r\n\t\treturn () => this.menu = undefined\r\n\t}\r\n\r\n\tregisterMenuButton = (menuButton) => {\r\n\t\tif (this.menuButton) {\r\n\t\t\tthrow new Error('[react-responsive-ui] There already is a menu button registered for this page.')\r\n\t\t}\r\n\t\tthis.menuButton = menuButton\r\n\t\t// Return `.unregister()`.\r\n\t\treturn () => this.menuButton = undefined\r\n\t}\r\n\r\n\tsetTogglerCooldown = () => this.menuButton.setCooldown()\r\n\tgetTogglerNode = () => this.menuButton.element()\r\n}"]}